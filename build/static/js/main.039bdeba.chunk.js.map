{"version":3,"sources":["browser/BrowserModuleContext.ts","browser/RpcClient.ts","common/rpc.ts","browser/ReactronServicesFrontend.ts","browser/internalModule/CarouselLayout/CarouselLayoutDefinition.tsx","browser/internalModule/CarouselLayout/CarouselLayout.tsx","browser/internalModule/GridLayout/GridLayoutDefinition.tsx","browser/internalModule/GridLayout/GridLayout.tsx","browser/internalModule/IFrame/IFrameDefinition.tsx","browser/internalModule/IFrame/IFrame.tsx","browser/internalModule/ListLayout/ListLayoutDefinition.tsx","browser/internalModule/ListLayout/ListLayout.tsx","browser/internalModule/MarkDown/MarkDownDefinition.tsx","browser/internalModule/MarkDown/MarkDown.tsx","browser/internalModule/Notifications/NotificationsDefinition.tsx","browser/internalModule/Notifications/Notifications.tsx","browser/components/RoundButton/RoundButton.tsx","browser/internalModule/index.ts","browser/internalModule/Welcome/WelcomeDefinition.tsx","browser/internalModule/Welcome/Welcome.tsx","browser/ComponentLoader.ts","browser/components/Loading/Loading.tsx","browser/components/PageNotFound/PageNotFound.tsx","common/LogWriter.ts","browser/WebComponentContext.tsx","browser/components/ComponentNotFound/ComponentNotFound.tsx","browser/components/ErrorBoundary/ErrorBoundary.tsx","browser/components/WebComponent/WebComponent.tsx","browser/components/App/App.tsx","index.tsx","browser/internalModule/Welcome/logo.svg"],"names":["electron","settings","Store","cache","callServiceMethod","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","data","id","urlId","url","options","text","result","error","response","wrap","_context","prev","next","moduleName","serviceName","methodName","replace","BrowserModuleContext","inernalModuleContext","moduleApiPath","method","body","JSON","stringify","headers","Content-Type","undefined","fetch","sent","status","toString","startsWith","parse","Error","t0","console","args","message","log","abrupt","stop","this","_x","apply","arguments","createRemoteService","Proxy","get","target","prop","_len","length","Array","_key","request","key","creator","now","Date","validCacheTime","timestamp","getOrCreate","services","ReactronServicesFrontend","_this","classCallCheck","moduleController","appController","logController","serviceController","webComponentController","webPageController","_modulesCache","_settingsCache","_servicesCache","_serviceOptionsCache","_pagesCache","_componentsCache","modules","getModules","addModule","repository","deleteModule","updateModule","checkUpdates","rebuildModule","application","getServerInfo","exitApplication","restartApplication","shutdownSystem","rebootSystem","resetApplication","getSettings","setSettings","getLogEntries","getAllServices","getServiceOptions","setServiceOptions","components","getWebComponentOptions","setWebComponentOptions","deleteWebComponentOptions","pages","getWebPages","setWebPage","deleteWebPage","createClass","value","topics","clearAllSubscriptions","once","publish","subscribe","unsubscribe","escapedModuleName","_getService","explicitModuleName","serviceKey","serviceCache","Promise","resolve","_x2","moduleStoreKey","moduleStoreCache","name","_init","_callee2","backendService","_context2","window","require","remote","BackendService","instance","topicNames","systemSettingsUpdated","event","carouselLayoutDefinition","component","context","_this2","react","className","style","props","lib","assign","autoPlay","infiniteLoop","showThumbs","showArrows","showStatus","items","map","renderComponent","React","description","displayName","type","fields","valueType","defaultValue","minValue","stepSize","maxValue","values","inputControl","interval","isArray","gridLayoutDefinition","GridLayout","possibleConstructorReturn","getPrototypeOf","call","renderTile","bind","assertThisInitialized","tile","index","objectSpread","tileStyle","gridColumn","col","colspan","gridRow","row","rowspan","content","gridStyle","tiles","WebComponentTitle","getDefaultInputControl","width","textOverflow","overflow","iFrameDefinition","src","listLayoutDefinition","ListLayout","renderListItem","item","itemStyle","markDownDefinition","react_markdown_default","source","textRows","notificationsDefinition","Notifications","RoundButton","Link","to","role","children","Welcome","state","then","info","setState","ip","RoundButton_RoundButton_RoundButton","react_fontawesome_index_es","icon","SvgIcons","logo","alt","SystemJS","System","externalModules","ReactDom","ReactRouterDom","default","numeral","moment","momentTimezone","SvgCore","SolidIcons","RegularIcons","BrandIcons","FontAwesome","reactronInterfaces","keys","forEach","moduleExport","register","exports","execute","componentLoader","ComponentLoader","allComponentsLoaded","moduleComponents","reactron","internalComponents","_getModuleComponents","m","find","x","registerModuleComponents","_registerModuleComponents","browserFileContent","browserFile","import","_getAllComponents","_callee3","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_context3","Symbol","iterator","done","return","finish","Loading","classname","center","size","iconSize","spin","defaultProps","PageNotFound","location","pathname","LogWriter","severity","prepareData","stack","WebComponentContext","_BrowserModuleContext","renderLoading","componentName","logSource","react_default","createElement","WebComponent_WebComponent_WebComponent","Loading_Loading_Loading","inherits","WebComponentContextType","createContext","parentId","ComponentNotFound","push","join","ErrorBoundary","color","WebComponent","prevProps","loadComponent","allComponentOptions","webComponentOptions","componentFound","getModuleComponents","componentDefinition","componentContext","componentOptions","ComponentNotFound_ComponentNotFound_ComponentNotFound","Component","contextType","Provider","ErrorBoundary_ErrorBoundary","App","reloadTimer","reloadWait","reload","triggerReload","onKeyDown","init","subscribeTopics","document","addEventListener","unsubscribeTopics","removeEventListener","e","evtobj","keyCode","ctrlKey","altKey","href","pagesUpdated","componentsUpdated","locale","lang","getAllComponents","clearTimeout","setTimeout","clearCache","BrowserRouter","Switch","Route","path","exact","renderPage","webComponentId","ReactDOM","App_App_App","getElementById","module","__webpack_require__","p"],"mappings":"iUAIIA,EACAC,EAQAC,+JCNEC,EAAuC,GAuBvCC,EAAiB,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAC,EAAOC,GAAP,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAZ,EAAAC,EAAAY,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAClBX,EAAKD,EAAKa,WAAa,IAAMb,EAAKc,YAAc,IAAMd,EAAKe,WAC3Db,EAAQD,EAAGe,QAAQ,IAAK,KACxBb,EAAMc,EAAqBC,qBAAqBC,cCrBjC,gBDqBiEjB,EAChFE,EAAuB,CAC3BgB,OAAQ,OACRC,KAAMrB,GAAQsB,KAAKC,UAAUvB,GAC7BwB,QAAS,CAAEC,eAAgB,oCAGzBpB,OAA2BqB,EAC3BpB,OAAmCoB,EAXfhB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAeCe,MAAMxB,EAAKC,GAfZ,cAehBI,EAfgBE,EAAAkB,KAAAlB,EAAAE,KAAA,GAgBTJ,EAASH,OAhBA,QAgBtBA,EAhBsBK,EAAAkB,KAiBlBpB,EAASqB,OAAOC,WAAWC,WAAW,MACxCzB,EAASD,EAAOiB,KAAKU,MAAM3B,QAAQqB,IACrBpB,EAAOC,QACnBA,EAAQ,IAAI0B,MAAM3B,EAAOC,QAG3BA,EAAQ,IAAI0B,MAAM5B,GAvBEK,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAwB,GAAAxB,EAAA,SA0BtBH,EAAKG,EAAAwB,GA1BiB,YA6BpB3B,EA7BoB,CAAAG,EAAAE,KAAA,eA8BlBN,EACF6B,QAAQ5B,MAAM,OAASN,EAAI,CAAEmC,KAAMpC,EAAKoC,KAAM9B,WAE9C6B,QAAQ5B,MAAM,OAASN,EAAI,CAAEmC,KAAMpC,EAAKoC,KAAM9B,OAAQD,EAAME,MAAOA,GAASA,EAAM8B,SAAW9B,IAEzFA,EAnCgB,eAqCtB4B,QAAQG,IAAI,OAASrC,EAAI,CAAEmC,KAAMpC,EAAKoC,KAAM9B,WArCtBI,EAAA6B,OAAA,SAsCfjC,GAAUA,EAAOA,QAtCF,yBAAAI,EAAA8B,SAAAzC,EAAA0C,KAAA,aAAH,gBAAAC,GAAA,OAAAjD,EAAAkD,MAAAF,KAAAG,YAAA,GA0CVC,EAAuB,SAAU/B,EAAqBD,GAajE,OAZc,IAAIiC,MAAM,GAAI,CAC1BC,IAAK,SAACC,EAAQC,GACZ,MAAa,SAATA,EACK,KAGF,WAAoB,QAAAC,EAAAN,UAAAO,OAAhBf,EAAgB,IAAAgB,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAhBjB,EAAgBiB,GAAAT,UAAAS,GACzB,IAAMC,EAAuB,CAAExC,cAAaD,aAAYE,WAAYkC,EAAMb,QAC1E,OAvEY,SAACmB,EAAaC,GAChC,IAAMC,EAAMC,KAAKD,MACXE,EAAiBF,EAJH,IAmBpB,OAZIlE,EAAMgE,IAAQhE,EAAMgE,GAAKK,UAAYD,UAC/BpE,EAAMgE,GAGXhE,EAAMgE,GAMTpB,QAAQG,IAAI,gBAAiBiB,GAL7BhE,EAAMgE,GAAO,CACXK,UAAWH,EACXnD,OAAQkD,KAKLjE,EAAMgE,GAAKjD,OAsDLuD,CAAYvC,KAAKC,UAAU+B,GAAU,kBAAM9D,EAAkB8D,UE8B/DQ,EAAqC,IA5GlD,oBAAAC,IAAA,IAAAC,EAAAvB,KAAA/C,OAAAuE,EAAA,EAAAvE,CAAA+C,KAAAsB,GAAAtB,KACUyB,iBAAmBrB,EAAuC,mBAAoB,YADxFJ,KAEU0B,cAAgBtB,EAAoC,gBAAiB,YAF/EJ,KAGU2B,cAAgBvB,EAAoC,gBAAiB,YAH/EJ,KAIU4B,kBAAoBxB,EAAwC,oBAAqB,YAJ3FJ,KAKU6B,uBAAyBzB,EAA6C,yBAA0B,YAL1GJ,KAMU8B,kBAAoB1B,EAAwC,oBAAqB,YAN3FJ,KAQU+B,mBARV,EAAA/B,KASUgC,oBATV,EAAAhC,KAUUiC,oBAVV,EAAAjC,KAWUkC,qBAA+C,GAXzDlC,KAYUmC,iBAZV,EAAAnC,KAaUoC,sBAbV,EAAApC,KAwBkBqC,QAA6B,CAC3CC,WAAY,WACV,OAAOf,EAAKQ,gBAAkBR,EAAKQ,cAAgBR,EAAKE,iBAAiBa,eAE3EC,UAAW,SAACC,GAEV,cADOjB,EAAKQ,cACLR,EAAKE,iBAAiBc,UAAUC,IAEzCC,aAAc,SAACrE,GAEb,cADOmD,EAAKQ,cACLR,EAAKE,iBAAiBgB,aAAarE,IAE5CsE,aAAc,SAACtE,GAEb,cADOmD,EAAKQ,cACLR,EAAKE,iBAAiBiB,aAAatE,IAE5CuE,aAAc3C,KAAKyB,iBAAiBkB,aACpCC,cAAe5C,KAAKyB,iBAAiBmB,eAzCzC5C,KA4CkB6C,YAA8B,CAC5CC,cAAe9C,KAAK0B,cAAcoB,cAClCC,gBAAiB/C,KAAK0B,cAAcqB,gBACpCC,mBAAoBhD,KAAK0B,cAAcsB,mBACvCC,eAAgBjD,KAAK0B,cAAcuB,eACnCC,aAAclD,KAAK0B,cAAcwB,aACjCC,iBAAkBnD,KAAK0B,cAAcyB,iBACrCC,YAAa,WACX,OAAO7B,EAAKS,iBAAmBT,EAAKS,eAAiBT,EAAKG,cAAc0B,gBAE1EC,YAAa,SAACzG,GAEZ,OADA2E,EAAKS,eAAiBpF,EACf2E,EAAKG,cAAc2B,YAAYzG,KAxD5CoD,KA4DkBH,IAAsB,CACpCyD,cAAetD,KAAK2B,cAAc2B,eA7DtCtD,KAgEkBqB,SAA+B,CAC7CkC,eAAgB,WACd,OAAOhC,EAAKU,iBAAmBV,EAAKU,eAAiBV,EAAKK,kBAAkB2B,mBAE9EC,kBAAmB,SAACpF,EAAoBC,GACtC,IAAMyC,EAAM1C,EAAa,IAAMC,EAC/B,OAAOkD,EAAKW,qBAAqBpB,KAASS,EAAKW,qBAAqBpB,GAAOS,EAAKK,kBAAkB4B,kBAAkBpF,EAAYC,KAElIoF,kBAAmB,SAACrF,EAAoBC,EAAqBV,GAC3D,IAAMmD,EAAM1C,EAAa,IAAMC,EAE/B,OADAkD,EAAKW,qBAAqBpB,GAAOnD,EAC1B4D,EAAKK,kBAAkB6B,kBAAkBrF,EAAYC,EAAaV,KA3E/EqC,KA+EkB0D,WAAsC,CACpDC,uBAAwB,WACtB,OAAOpC,EAAKa,mBAAqBb,EAAKa,iBAAmBb,EAAKM,uBAAuB8B,2BAEvFC,uBAAwB,SAACjG,GAEvB,cADO4D,EAAKa,iBACLb,EAAKM,uBAAuB+B,uBAAuBjG,IAE5DkG,0BAA2B,SAACrG,GAE1B,cADO+D,EAAKa,iBACLb,EAAKM,uBAAuBgC,0BAA0BrG,KAzFnEwC,KA6FkB8D,MAA4B,CAC1CC,YAAa,WACX,OAAOxC,EAAKY,cAAgBZ,EAAKY,YAAcZ,EAAKO,kBAAkBiC,gBAExEC,WAAY,SAACrG,GAEX,cADO4D,EAAKY,YACLZ,EAAKO,kBAAkBkC,WAAWrG,IAE3CsG,cAAe,SAACzG,GAEd,cADO+D,EAAKY,YACLZ,EAAKO,kBAAkBmC,cAAczG,KAvGlD,OAAAP,OAAAiH,EAAA,EAAAjH,CAAAqE,EAAA,EAAAR,IAAA,aAAAqD,MAAA,kBAgBWnE,KAAK+B,qBACL/B,KAAKgC,sBACLhC,KAAKiC,eACZjC,KAAKkC,qBAAuB,UACrBlC,KAAKmC,mBACLnC,KAAKoC,qBArBhBd,EAAA,IHGI8C,EAAkB,CACpBC,sBAAuB,aACvBC,KAAM,aACNC,QAAS,aACTC,UAAW,aACXC,YAAa,cAIFjG,EAAb,WAKE,SAAAA,EAAmBJ,GAAqBnB,OAAAuE,EAAA,EAAAvE,CAAA+C,KAAAxB,GAAAwB,KAAA5B,aAAA4B,KAKxBqB,SAAWA,EALYrB,KAMvBtB,mBANuB,EACrC,IAAMgG,GAAqBtG,GAAc,IAAIG,QAAQ,IAAK,KAC1DyB,KAAKtB,cAAgB,gBAAkBgG,EAP3C,OAAAzH,OAAAiH,EAAA,EAAAjH,CAAAuB,EAAA,EAAAsC,IAAA,aAAAqD,MAAA,eAAAQ,EAAA1H,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAA,SAAAC,EAwB0Ce,EAAqBuG,GAxB/D,IAAAxG,EAAAyG,EAAA,OAAA1H,EAAAC,EAAAY,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAyBUC,EAAawG,GAAsB5E,KAAK5B,WACxCyG,EAAaxG,EAAc,IAAMD,EAClCI,EAAqBsG,aAAaD,KACrCrG,EAAqBsG,aAAaD,GAAczE,EAA8B/B,EAAaD,IA5BjGH,EAAA6B,OAAA,SA8BWiF,QAAQC,QAAQxG,EAAqBsG,aAAaD,KA9B7D,wBAAA5G,EAAA8B,SAAAzC,EAAA0C,SAAA,gBAAAC,EAAAgF,GAAA,OAAAN,EAAAzE,MAAAF,KAAAG,YAAA,KAAAW,IAAA,WAAAR,IAAA,WAYgD,OAAO3D,IAZvD,CAAAmE,IAAA,SAAAR,IAAA,WAaiC,OAAO8D,IAbxC,CAAAtD,IAAA,WAAAR,IAAA,WAcqD,OAAO1D,IAd5D,CAAAkE,IAAA,gBAAAR,IAAA,WAiBI,IAAM4E,EAAiB,UAAYlF,KAAK5B,WAIxC,OAHIvB,IAAU2B,EAAqB2G,iBAAiBD,KAClD1G,EAAqB2G,iBAAiBD,GAAkB,IAAIrI,EAAM,CAAEuI,KAAMF,KAErE1G,EAAqB2G,iBAAiBD,MArBjD,EAAApE,IAAA,OAAAqD,MAAA,eAAAkB,EAAApI,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAA,SAAAiI,IAAA,IAAAC,EAAA,OAAApI,EAAAC,EAAAY,KAAA,SAAAwH,GAAA,cAAAA,EAAAtH,KAAAsH,EAAArH,MAAA,WAmCSxB,GAAa8I,OAAeC,UAC/B/I,EAAY8I,OAAeC,QAAQ,YAC7BH,EAAiB5I,EAASgJ,OAAOD,QAAQ,gCAAgCE,eAAeC,SAC9FzB,EAASmB,EAAenB,OACxBvH,EAAQF,EAASgJ,OAAOD,QAAQ,kBAGhCtB,EAAOI,UAAUsB,aAAWC,sBAAuB,SAACC,EAAqBzI,GACvEX,EAAWW,KAKfiB,EAAqBC,qBAAuB,IAAID,EAAqB,YAGhE5B,EAnDT,CAAA4I,EAAArH,KAAA,eAAAqH,EAAArH,KAAA,EAoDuBkD,EAASwB,YAAYO,cApD5C,OAoDMxG,EApDN4I,EAAArG,KAAA,wBAAAqG,EAAAzF,SAAAuF,EAAAtF,SAAA,yBAAAqF,EAAAnF,MAAAF,KAAAG,YAAA,MAAA3B,EAAA,GAAaA,EACGC,4BADHD,EAEI2G,iBAAqD,GAFzD3G,EAGIsG,aAAuC,gFIZ3CmB,eAAiF,CAC5FC,qNCEOC,uFAES,IAAAC,EAAApG,KACd,OACEqG,EAAA,yBAASC,UAAU,iBAAiBC,MAAOvG,KAAKwG,MAAMD,OACpDF,EAAA,cAACI,EAAA,SAADxJ,OAAAyJ,OAAA,CAAUC,UAAU,EAAMC,cAAc,EAAMC,YAAY,EAAOC,YAAY,EAAOC,YAAY,GAAW/G,KAAKwG,MAAM7I,SACnHqC,KAAKwG,MAAMQ,MAAMC,IAAI,SAAAzJ,GAAE,OAAI4I,EAAKD,QAAQe,gBAAgB,CAAE1J,kBAPzB2J,aDA1CC,YAAa,kBACbC,YAAa,kBACbjC,KAAM,iBACNkC,KAAM,SACNC,OAAQ,CACN,CACEF,YAAa,UAAWjC,KAAM,UAAWoC,UAAW,SAAUD,OAAQ,CACpE,CAAEF,YAAa,iBAAkBjC,KAAM,WAAYoC,UAAW,SAAUC,aAAc,IAAMC,SAAU,IAAMC,SAAU,IACtH,CAAEN,YAAa,wBAAyBjC,KAAM,iBAAkBoC,UAAW,SAAUC,aAAc,IAAKC,SAAU,IAAKC,SAAU,IACjI,CAAEN,YAAa,kBAAmBjC,KAAM,iBAAkBoC,UAAW,UAAWC,cAAc,GAC9F,CAAEJ,YAAa,cAAejC,KAAM,aAAcoC,UAAW,UAAWC,cAAc,GACtF,CAAEJ,YAAa,cAAejC,KAAM,aAAcoC,UAAW,UAAWC,cAAc,GACtF,CAAEJ,YAAa,cAAejC,KAAM,aAAcoC,UAAW,UAAWC,cAAc,GACtF,CAAEJ,YAAa,0BAA2BjC,KAAM,wBAAyBoC,UAAW,SAAUC,aAAc,GAAIC,SAAU,EAAGE,SAAU,IAAKD,SAAU,GACtJ,CAAEN,YAAa,OAAQjC,KAAM,OAAQoC,UAAW,UAAWC,aAAc,aAAcI,OAAQ,CAAC,CAAE1D,MAAO,aAAcvG,KAAM,cAAgB,CAAEuG,MAAO,WAAYvG,KAAM,eAE1KkK,aAAc,SAACtB,GACb,IAAMuB,EAAWvB,EAAMrC,OAASqC,EAAMrC,MAAM4D,SAC5C,OAAO1B,EAAA,sCAAgB0B,EAAhB,SAGX,CAAEV,YAAa,UAAWjC,KAAM,QAASoC,UAAW,eAAgBQ,SAAS,GAC7E,CAAEX,YAAa,iBAAkBjC,KAAM,QAASoC,UAAW,oBEzBlDS,SAAqD,CAChE/B,sBCGA,SAAAgC,EAAY1B,GAA2B,IAAAjF,EAAA,OAAAtE,OAAAuE,EAAA,EAAAvE,CAAA+C,KAAAkI,IACrC3G,EAAAtE,OAAAkL,EAAA,EAAAlL,CAAA+C,KAAA/C,OAAAmL,EAAA,EAAAnL,CAAAiL,GAAAG,KAAArI,KAAMwG,KAHDL,aAEgC,EAGrC5E,EAAK+G,WAAa/G,EAAK+G,WAAWC,KAAhBtL,OAAAuL,EAAA,EAAAvL,QAAAuL,EAAA,EAAAvL,CAAAsE,KAHmBA,0EAMpBkH,EAA8BC,GAC/C,IAAMnC,EAAKtJ,OAAA0L,EAAA,EAAA1L,CAAA,GAAQ+C,KAAKwG,MAAMoC,UAAcH,EAAKlC,OAUjD,OATAA,EAAMsC,WAAaJ,EAAKK,IAAIzJ,WACxBoJ,EAAKM,QAAU,IACjBxC,EAAMsC,YAAc,WAAaJ,EAAKM,SAGxCxC,EAAMyC,QAAUP,EAAKQ,IAAI5J,WACrBoJ,EAAKS,QAAU,IACjB3C,EAAMyC,SAAW,WAAaP,EAAKS,SAGnC7C,EAAA,qBAAKC,UAAU,WAAWxF,IAAK4H,EAAOnC,MAAOA,GAC1CvG,KAAKmG,QAAQe,gBAAgB,CAAE1J,GAAIiL,EAAKU,4CAM7C,OACE9C,EAAA,yBAASC,UAAU,aAAaC,MAAOvG,KAAKwG,MAAM4C,WAC/CpJ,KAAKwG,MAAM6C,MAAMpC,IAAIjH,KAAKsI,oBA9BKnB,aDCtCC,YAAa,cACbC,YAAa,cACbjC,KAAM,aACNkC,KAAM,SACNC,OAAQ,CACN,CAAEF,YAAa,aAAcjC,KAAM,YAAaoC,UAAW,SAC3D,CAAEH,YAAa,aAAcjC,KAAM,YAAaoC,UAAW,SAC3D,CACEH,YAAa,aACbjC,KAAM,QACNoC,UAAW,SACXQ,SAAS,EACTT,OAAQ,CACN,CAAEF,YAAa,MAAOjC,KAAM,MAAOoC,UAAW,SAAUC,aAAc,EAAGE,SAAU,EAAGD,SAAU,EAAGE,SAAU,IAC7G,CAAEP,YAAa,SAAUjC,KAAM,MAAOoC,UAAW,SAAUC,aAAc,EAAGE,SAAU,EAAGD,SAAU,EAAGE,SAAU,IAChH,CAAEP,YAAa,WAAYjC,KAAM,UAAWoC,UAAW,SAAUC,aAAc,EAAGE,SAAU,EAAGD,SAAU,EAAGE,SAAU,IACtH,CAAEP,YAAa,cAAejC,KAAM,UAAWoC,UAAW,SAAUC,aAAc,EAAGE,SAAU,EAAGD,SAAU,EAAGE,SAAU,IACzH,CAAEP,YAAa,UAAWjC,KAAM,UAAWoC,UAAW,gBACtD,CAAEH,YAAa,QAASjC,KAAM,QAASoC,UAAW,UAEpDM,aAAc,SAACtB,GACb,IAAMiC,EAAOjC,EAAMrC,OAAS,GAEtBmF,EAAyB9C,EAAM+C,uBAAuB,CAAElC,YAAa,UAAWjC,KAAM,UAAWoC,UAAW,iBAClH,OAAOnB,EAAA,qBAAKE,MAFE,CAAEiD,MAAO,OAAQC,aAAc,WAAYC,SAAU,WAE5D,KAAsBjB,EAAKQ,IAA3B,MAAmCR,EAAKK,IAAxC,MAA+CzC,EAAA,cAACiD,EAADrM,OAAAyJ,OAAA,GAAuBF,EAAvB,CAA8BrC,MAAOsE,EAAKU,WAAzF,WE5BFQ,SAAiD,CAC1DzD,2LCGA,OAAOG,EAAA,wBAAQC,UAAU,YAAYsD,IAAK5J,KAAKwG,MAAM9I,aAFrByJ,aDAhCC,YAAa,mBACbC,YAAa,SACbjC,KAAM,SACNmC,OAAQ,CACJ,CAAEF,YAAa,MAAOjC,KAAM,MAAOoC,UAAW,aEJzCqC,SAAqD,CAChE3D,sBCIA,SAAA4D,EAAYtD,GAA2B,IAAAjF,EAAA,OAAAtE,OAAAuE,EAAA,EAAAvE,CAAA+C,KAAA8J,IACrCvI,EAAAtE,OAAAkL,EAAA,EAAAlL,CAAA+C,KAAA/C,OAAAmL,EAAA,EAAAnL,CAAA6M,GAAAzB,KAAArI,KAAMwG,KAHDL,aAEgC,EAGrC5E,EAAKwI,eAAiBxI,EAAKwI,eAAexB,KAApBtL,OAAAuL,EAAA,EAAAvL,QAAAuL,EAAA,EAAAvL,CAAAsE,KAHeA,8EAMhByI,EAA8BtB,GACnD,IAAMnC,EAAKtJ,OAAA0L,EAAA,EAAA1L,CAAA,GAAQ+C,KAAKwG,MAAMyD,UAAcD,EAAKzD,OAEjD,OACEF,EAAA,qBAAKC,UAAU,WAAWxF,IAAK4H,EAAOnC,MAAOA,GAC1CvG,KAAKmG,QAAQe,gBAAgB,CAAE1J,GAAIwM,EAAKb,4CAM7C,OACE9C,EAAA,yBAASC,UAAU,cAChBtG,KAAKwG,MAAMQ,MAAMC,IAAIjH,KAAK+J,wBAtBK5C,aDAtCC,YAAa,cACbC,YAAa,cACbjC,KAAM,aACNkC,KAAM,SACNC,OAAQ,CACN,CAAEF,YAAa,aAAcjC,KAAM,YAAaoC,UAAW,SAC3D,CAAEH,YAAa,aAAcjC,KAAM,YAAaoC,UAAW,SAC3D,CACEH,YAAa,aACbjC,KAAM,QACNoC,UAAW,SACXQ,SAAS,EACTT,OAAQ,CACN,CAAEF,YAAa,UAAWjC,KAAM,UAAWoC,UAAW,gBACtD,CAAEH,YAAa,QAASjC,KAAM,QAASoC,UAAW,UAEpDM,aAAc,SAACtB,GACb,IAAMwD,EAAOxD,EAAMrC,OAAS,GACtBmF,EAAyB9C,EAAM+C,uBAAuB,CAAElC,YAAa,UAAWjC,KAAM,UAAWoC,UAAW,iBAClH,OAAOnB,EAAA,cAACiD,EAADrM,OAAAyJ,OAAA,GAAuBF,EAAvB,CAA8BrC,MAAO6F,EAAKb,iCEvB5Ce,UAAmD,CAC9DhE,2LCIE,OACEG,EAAA,yBAASC,UAAU,WAAWC,MAAOvG,KAAKwG,MAAMD,OAC9CF,EAAA,cAAC8D,EAAA/M,EAAD,CAAegN,OAAQpK,KAAKwG,MAAM5I,eAJJuJ,aDDpCC,YAAa,qBACbC,YAAa,WACbjC,KAAM,WACNmC,OAAQ,CACN,CAAEF,YAAa,OAAQjC,KAAM,OAAQoC,UAAW,SAAU6C,SAAU,IACpE,CAAEhD,YAAa,QAASjC,KAAM,QAASoC,UAAW,YEPzC8C,UAAwD,CACjEpE,sBCCF,SAAAqE,EAAY/D,GAAa,OAAAvJ,OAAAuE,EAAA,EAAAvE,CAAA+C,KAAAuK,GAAAtN,OAAAkL,EAAA,EAAAlL,CAAA+C,KAAA/C,OAAAmL,EAAA,EAAAnL,CAAAsN,GAAAlC,KAAArI,KACjBwG,0EAIN,OAAOH,EAAA,yBAASC,UAAU,iBAAnB,wBANgCa,aDCvCC,YAAa,gBACbC,YAAa,gBACbjC,KAAM,gBACNmC,OAAQ,aEHSiD,2LAEjB,OAAOnE,EAAA,cAACoE,EAAA,EAAD,CAAMnE,UAAU,cAAcoE,GAAI1K,KAAKwG,MAAMkE,GAAIC,KAAK,UAAU3K,KAAKwG,MAAMoE,iBAF7CzD,+BCI5BzD,WAA6C,CACtDmG,EACA5D,EACAgC,ECT2D,CAC3D/B,sBCWF,SAAA2E,EAAYrE,GAAY,IAAAjF,EAAA,OAAAtE,OAAAuE,EAAA,EAAAvE,CAAA+C,KAAA6K,IACtBtJ,EAAAtE,OAAAkL,EAAA,EAAAlL,CAAA+C,KAAA/C,OAAAmL,EAAA,EAAAnL,CAAA4N,GAAAxC,KAAArI,KAAMwG,KACDsE,MAAQ,GAFSvJ,mFAKG,IAAA6E,EAAApG,KACzBqB,EAASwB,YAAYC,gBAAgBiI,KAAK,SAAAC,GACxC5E,EAAK6E,SAAS,CAAED,4CAKlB,IAAIA,EAQJ,OANIhL,KAAK8K,MAAME,OACbA,EAAQ3E,EAAA,qBAAKC,UAAU,QAAf,gDACuCD,EAAA,yBAAMA,EAAA,yBACnDA,EAAA,iCAAWrG,KAAK8K,MAAME,KAAKE,GAA3B,iBAIF7E,EAAA,yBAASC,UAAU,WACjBD,EAAA,cAAC8E,EAAD,CAAaT,GAAG,UACdrE,EAAA,cAAC+E,EAAA,gBAAD,CAA6BC,KAAMC,UADrC,SAIAjF,EAAA,qBAAKuD,IAAK2B,IAAMjF,UAAU,OAAOkF,IAAI,SACrCnF,EAAA,qBAAKC,UAAU,SAAf,uBACC0E,UA7B4B7D,aDTjCC,YAAa,oBACbC,YAAa,UACbjC,KAAM,UACNmC,OAAQ,IDMR2C,EACAI,EACAX,IGEE8B,GAAYhG,OAAeiG,OAE3BC,GAAkB,GACxBA,GAAe,MAAYxE,EAC3BwE,GAAgB,aAAeC,EAC/BD,GAAgB,oBAAsBE,EACtCF,GAAe,QAAc,CAAEG,QAASC,KACxCJ,GAAe,OAAa,CAAEG,QAASE,KACvCL,GAAgB,mBAAqB,CAAEG,QAASG,KAChDN,GAAgB,qCAAuCO,EACvDP,GAAgB,qCAAuCQ,EACvDR,GAAgB,uCAAyCS,EACzDT,GAAgB,sCAAwCU,EACxDV,GAAgB,kCAAoCW,EACpDX,GAAgB,iCAAmCY,EAE9C9G,OAAeC,UAClBiG,GAAe,SAAgBlG,OAAeC,QAAQ,aAGxDzI,OAAOuP,KAAKb,IAAiBc,QAAQ,SAAA3L,GACnC,IAAM4L,EAAef,GAAgB7K,GACrC2K,GAASkB,SAAS7L,EAAK,GAAI,SAAA8L,GAAO,MAAK,CAAEC,QAAS,kBAAMD,EAAQF,SAG3D,IA+DMI,GAAkB,IA/D/B,oBAAAC,IAAA9P,OAAAuE,EAAA,EAAAvE,CAAA+C,KAAA+M,GAAA/M,KACUgN,qBAAsB,EADhChN,KAEUiN,iBAA6E,CACnFC,SAAYC,IAHhB,OAAAlQ,OAAAiH,EAAA,EAAAjH,CAAA8P,EAAA,EAAAjM,IAAA,sBAAAqD,MAAA,eAAAiJ,EAAAnQ,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAA,SAAAC,EAMmCc,GANnC,IAAAiE,EAAAgL,EAAA,OAAAlQ,EAAAC,EAAAY,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAOS6B,KAAKiN,iBAAiB7O,GAP/B,CAAAH,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAQ4BkD,EAASgB,QAAQC,aAR7C,UAQYD,EARZpE,EAAAkB,KASYkO,EAAIhL,EAAQiL,KAAK,SAAAC,GAAC,OAAIA,EAAEnI,OAAShH,IAT7C,CAAAH,EAAAE,KAAA,eAYQuB,QAAQ5B,MAAM,qBAAuBM,GAZ7CH,EAAA6B,OAAA,wBAAA7B,EAAAE,KAAA,GAgBY6B,KAAKwN,yBAAyBH,GAhB1C,eAAApP,EAAA6B,OAAA,SAmBWE,KAAKiN,iBAAiB7O,IAnBjC,yBAAAH,EAAA8B,SAAAzC,EAAA0C,SAAA,gBAAAC,GAAA,OAAAmN,EAAAlN,MAAAF,KAAAG,YAAA,KAAAW,IAAA,2BAAAqD,MAAA,eAAAsJ,EAAAxQ,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAA,SAAAiI,EAsByC+H,GAtBzC,IAAAK,EAAAhK,EAAA,OAAAvG,EAAAC,EAAAY,KAAA,SAAAwH,GAAA,cAAAA,EAAAtH,KAAAsH,EAAArH,MAAA,UAuBSkP,EAAEM,YAvBX,CAAAnI,EAAArH,KAAA,eAwBMuB,QAAQG,IAAI,8BAAgCwN,EAAEjI,MAxBpDI,EAAA1F,OAAA,qBA4BQE,KAAKiN,iBAAiBI,EAAEjI,MA5BhC,CAAAI,EAAArH,KAAA,eAAAqH,EAAA1F,OAAA,wBAAA0F,EAAAtH,KAAA,EAiCMwB,QAAQG,IAAIwN,EAAEM,aAjCpBnI,EAAArH,KAAA,EAmCuCsN,GAASmC,OAAO,KAAOP,EAAEM,aAnChE,OAmCYD,EAnCZlI,EAAArG,MAqCYuE,EAAagK,EAAkB,aAEG,kBAAfhK,GAA2B/C,MAAMqH,QAAQtE,KAChE1D,KAAKiN,iBAAiBI,EAAEjI,MAAQ1B,GAElChE,QAAQG,IAAI,iCAAmCwN,EAAEjI,MA1CvDI,EAAArH,KAAA,iBAAAqH,EAAAtH,KAAA,GAAAsH,EAAA/F,GAAA+F,EAAA,SA4CM9F,QAAQ5B,MAAM,wCAA0CuP,EAAEjI,KAA1DI,EAAA/F,IA5CN,yBAAA+F,EAAAzF,SAAAuF,EAAAtF,KAAA,6BAAAiF,GAAA,OAAAwI,EAAAvN,MAAAF,KAAAG,YAAA,KAAAW,IAAA,mBAAAqD,MAAA,eAAA0J,EAAA5Q,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAA,SAAAyQ,IAAA,IAAAzL,EAAA0L,EAAAC,EAAAC,EAAAC,EAAAC,EAAAd,EAAA,OAAAlQ,EAAAC,EAAAY,KAAA,SAAAoQ,GAAA,cAAAA,EAAAlQ,KAAAkQ,EAAAjQ,MAAA,WAiDQ6B,KAAKgN,oBAjDb,CAAAoB,EAAAjQ,KAAA,eAAAiQ,EAAAtO,OAAA,SAkDaE,KAAKiN,kBAlDlB,cAAAmB,EAAAjQ,KAAA,EAqD0BkD,EAASgB,QAAQC,aArD3C,OAqDUD,EArDV+L,EAAAjP,KAAA4O,GAAA,EAAAC,GAAA,EAAAC,OAAAhP,EAAAmP,EAAAlQ,KAAA,EAAAgQ,EAuDoB7L,EAvDpBgM,OAAAC,YAAA,WAAAP,GAAAI,EAAAD,EAAA/P,QAAAoQ,KAAA,CAAAH,EAAAjQ,KAAA,gBAuDekP,EAvDfc,EAAAhK,MAAAiK,EAAAjQ,KAAA,GAwDY6B,KAAKwN,yBAAyBH,GAxD1C,QAAAU,GAAA,EAAAK,EAAAjQ,KAAA,iBAAAiQ,EAAAjQ,KAAA,iBAAAiQ,EAAAlQ,KAAA,GAAAkQ,EAAA3O,GAAA2O,EAAA,SAAAJ,GAAA,EAAAC,EAAAG,EAAA3O,GAAA,QAAA2O,EAAAlQ,KAAA,GAAAkQ,EAAAlQ,KAAA,GAAA6P,GAAA,MAAAG,EAAAM,QAAAN,EAAAM,SAAA,WAAAJ,EAAAlQ,KAAA,IAAA8P,EAAA,CAAAI,EAAAjQ,KAAA,eAAA8P,EAAA,eAAAG,EAAAK,OAAA,mBAAAL,EAAAK,OAAA,mBA0DIzO,KAAKgN,qBAAsB,EA1D/BoB,EAAAtO,OAAA,SA2DWE,KAAKiN,kBA3DhB,yBAAAmB,EAAArO,SAAA+N,EAAA9N,KAAA,wDAAA6N,EAAA3N,MAAAF,KAAAG,YAAA,MAAA4M,EAAA,wBCnCqB2B,4LAMjB,OACErI,EAAA,yBAASC,UAAWqI,KAAU,UAAW,CAAEC,OAAU5O,KAAKwG,MAAMoI,UAC9DvI,EAAA,cAAC+E,EAAA,gBAAD,CAA6BC,KAAMC,YAAoBuD,KAAM7O,KAAKwG,MAAMsI,SAAUC,MAAM,IACvF/O,KAAKwG,MAAM5I,MACVyI,EAAA,qBAAKC,UAAU,QAAQtG,KAAKwG,MAAM5I,cAVPuJ,cAAhBuH,GACLM,aAAuC,CACnDF,SAAU,iBCFOG,oLAEjB,OACE5I,EAAA,qBAAKC,UAAU,gBACbD,EAAA,wBAAIA,EAAA,cAAC+E,EAAA,gBAAD,CAA6BC,KAAMC,qBAAvC,QACAjF,EAAA,qDAA+BrG,KAAKwG,MAAM0I,SAASC,UACnD9I,EAAA,cAAC8E,EAAD,CAAaT,GAAG,UACdrE,EAAA,cAAC+E,EAAA,gBAAD,CAA6BC,KAAMC,UADrC,UAGAjF,EAAA,cAAC8E,EAAD,CAAaT,GAAG,KACdrE,EAAA,cAAC+E,EAAA,gBAAD,CAA6BC,KAAMC,WADrC,iBATkCnE,aCN7BiI,GAAb,WACE,SAAAA,EAAoBhL,EAAiCgG,GAAiBnN,OAAAuE,EAAA,EAAAvE,CAAA+C,KAAAoP,GAAApP,KAAAoE,SAAApE,KAAAoK,SADxE,OAAAnN,OAAAiH,EAAA,EAAAjH,CAAAmS,EAAA,EAAAtO,IAAA,MAAAqD,MAAA,SAGckL,EAAoBzP,EAAiBrC,GAC/CyC,KAAKoE,QAAUpE,KAAKoE,OAAOG,QAAQuB,aAAWjG,IAAK,CAAEuK,OAAQpK,KAAKoK,OAAQiF,WAAUzP,UAASrC,WAJjG,CAAAuD,IAAA,QAAAqD,MAAA,SAOevE,EAAiBrC,GAC5ByC,KAAKH,IAAI,QAASD,EAASwP,EAAUE,YAAY/R,MARrD,CAAAuD,IAAA,UAAAqD,MAAA,SAWiBvE,EAAiBrC,GAC9ByC,KAAKH,IAAI,UAAWD,EAASwP,EAAUE,YAAY/R,MAZvD,CAAAuD,IAAA,OAAAqD,MAAA,SAecvE,EAAiBrC,GAC3ByC,KAAKH,IAAI,cAAeD,EAASwP,EAAUE,YAAY/R,MAhB3D,CAAAuD,IAAA,QAAAqD,MAAA,SAmBevE,EAAiBrC,GAC5ByC,KAAKH,IAAI,QAASD,EAASwP,EAAUE,YAAY/R,OApBrD,EAAAuD,IAAA,cAAAqD,MAAA,SAuB6B5G,GACzB,OAAIA,aAAgBiC,MACXvC,OAAA0L,EAAA,EAAA1L,CAAA,GAEFM,EAFL,CAIE6H,KAAM7H,EAAK6H,KACXxF,QAASrC,EAAKqC,QACd2P,MAAOhS,EAAKgS,QAGThS,MAlCX6R,EAAA,GCOaI,GAAb,SAAAC,GAOE,SAAAD,EAAYhJ,GAA6B,IAAAjF,EAAAtE,OAAAuE,EAAA,EAAAvE,CAAA+C,KAAAwP,IACvCjO,EAAAtE,OAAAkL,EAAA,EAAAlL,CAAA+C,KAAA/C,OAAAmL,EAAA,EAAAnL,CAAAuS,GAAAnH,KAAArI,KAAMwG,EAAMpI,cAPEsR,mBAMyB,EAAAnO,EALzB2F,qBAKyB,EAAA3F,EAJzBuL,gBAAkBA,GAIOvL,EAHzB1B,SAGyB,EAAA0B,EAFzBoO,mBAEyB,EAGvC,IAAMC,EAAYpJ,EAAMhJ,IAAOgJ,EAAMpI,WAAa,IAAMoI,EAAMmJ,cAHvB,OAIvCpO,EAAK1B,IAAM,IAAIuP,GAAU7N,EAAK6C,OAAQwL,GACtCrO,EAAKoO,cAAgBnJ,EAAMmJ,cAE3BpO,EAAK2F,gBAAkB,SAACV,GACtB,IAAM1F,EAAM0F,EAAMhJ,GAAK,IAAMgJ,EAAMpI,WAAa,IAAMoI,EAAMmJ,cAC5D,OAAOE,EAAAzS,EAAA0S,cAACC,GAAD9S,OAAAyJ,OAAA,GAAkBF,EAAlB,CAAyB1F,IAAKA,MAGvCS,EAAKmO,cAAgB,SAAC9R,EAAekR,GACnC,OAAOe,EAAAzS,EAAA0S,cAACE,GAAD,CAASpS,KAAMA,EAAMkR,SAAUA,KAbDvN,EAP3C,OAAAtE,OAAAgT,EAAA,EAAAhT,CAAAuS,EAAAC,GAAAD,EAAA,CAAyChR,GAyB5B0R,GAA0B/I,IAAMgJ,cAAyC,IAAIX,GAAoB,CAAEpR,WAAY,GAAIgS,SAAU,GAAIT,cAAe,GAAInS,GAAI,MC1BhJ6S,4LAMjB,IAAMzS,EAAO,GAWb,OAVIoC,KAAKwG,MAAMhJ,IACbI,EAAK0S,KAAK,OAAStQ,KAAKwG,MAAMhJ,IAE5BwC,KAAKwG,MAAMmJ,eACb/R,EAAK0S,KAAK,cAAgBtQ,KAAKwG,MAAMmJ,eAEnC3P,KAAKwG,MAAMpI,YACbR,EAAK0S,KAAK,WAAatQ,KAAKwG,MAAMpI,YAIlCiI,EAAA,yBAASC,UAAU,qBACjBD,EAAA,cAAC+E,EAAA,gBAAD,CAA6BC,KAAMC,wBAAgCuD,KAAM7O,KAAKwG,MAAMsI,WACpFzI,EAAA,qBAAKC,UAAU,QAAf,wBAA4C1I,EAAK2S,KAAK,QACtDlK,EAAA,cAAC8E,EAAD,CAAaT,GAAG,UACdrE,EAAA,cAAC+E,EAAA,gBAAD,CAA6BC,KAAMC,UADrC,kBArBuCnE,cAA1BkJ,GACLrB,aAAiD,CAC7DF,SAAU,UCJO0B,eACnB,SAAAA,EAAYhK,GAAY,IAAAjF,EAAA,OAAAtE,OAAAuE,EAAA,EAAAvE,CAAA+C,KAAAwQ,IACtBjP,EAAAtE,OAAAkL,EAAA,EAAAlL,CAAA+C,KAAA/C,OAAAmL,EAAA,EAAAnL,CAAAuT,GAAAnI,KAAArI,KAAMwG,KACDsE,MAAQ,CAAEhN,MAAO,MAFAyD,iFAKCzD,EAAYkN,GACnCtL,QAAQG,IAAI/B,GACZ4B,QAAQG,IAAImL,GACZhL,KAAKiL,SAAS,CAAEnN,2CAIhB,OAAIkC,KAAK8K,MAAMhN,MACNuI,EAAA,sBAAME,MAAO,CAAEkK,MAAO,QAAtB,yBAEFzQ,KAAKwG,MAAMoE,gBAhBqBzD,aCiBtBuJ,uBACnB,SAAAA,EAAYlK,GAA2B,IAAAjF,EAAA,OAAAtE,OAAAuE,EAAA,EAAAvE,CAAA+C,KAAA0Q,IACrCnP,EAAAtE,OAAAkL,EAAA,EAAAlL,CAAA+C,KAAA/C,OAAAmL,EAAA,EAAAnL,CAAAyT,GAAArI,KAAArI,KAAMwG,KACDsE,MAAQ,GAFwBvJ,kFAKboP,GACpB3Q,KAAKwG,MAAMhJ,KAAOmT,EAAUnT,IAC9BwC,KAAKwG,MAAMpI,aAAeuS,EAAUvS,YACpC4B,KAAKwG,MAAMmJ,gBAAkBgB,EAAUhB,eACvC3P,KAAKwG,MAAM7I,UAAYgT,EAAUhT,SACjCqC,KAAK4Q,4DAKP5Q,KAAK4Q,kMAOC5Q,KAAKwG,MAAMhJ,mCAEqB6D,EAASqC,WAAWC,gCAAhDkN,SACNC,EAAsBD,EAAoBvD,KAAK,SAAAC,GAAC,OAAIA,EAAE/P,KAAO4I,EAAKI,MAAMhJ,2BAC/DwC,KAAKwG,MAAMpI,YAAc4B,KAAKwG,MAAMmJ,gBAC7CmB,EAAsB,CACpBtT,GAAI,GACJ4S,SAAU,GACVhS,WAAY4B,KAAKwG,MAAMpI,WACvBuR,cAAe3P,KAAKwG,MAAMmJ,cAC1BhS,QAASqC,KAAKwG,MAAM7I,oBAInBmT,0BACH9Q,KAAKiL,SAAS,CAAE8F,gBAAgB,gDAIHjE,GAAgBkE,oBAAoBF,EAAoB1S,uBAAjF6O,iCAEJjN,KAAKiL,SAAS,CAAE8F,gBAAgB,kCAI5BpB,EAAgBmB,EAAoBnB,eACpCsB,EAAsBhE,EAAiBK,KAAK,SAAAC,GAAC,OAAIA,EAAEnI,OAASuK,MACrCsB,EAAoB/K,kCAC/ClG,KAAKiL,SAAS,CAAE8F,gBAAgB,+BAIlC/Q,KAAKiL,SAAS,CACZiG,iBAAkB,IAAI1B,GAAoBsB,GAC1CG,sBACAE,iBAAkBL,EAClBC,gBAAgB,sDAGlBrR,QAAQG,IAAR5B,EAAAwB,IACAO,KAAKiL,SAAS,CAAE8F,gBAAgB,iJAKlC,IAAI5H,EAAU9C,EAAA,cAAC2J,GAAD,CAASpB,QAAQ,IAM/B,IAJkC,IAA9B5O,KAAK8K,MAAMiG,iBACb5H,EAAU9C,EAAA,cAAC+K,GAAsBpR,KAAKwG,QAGpCxG,KAAK8K,MAAMmG,qBAAuBjR,KAAK8K,MAAMmG,oBAAoB/K,WAAalG,KAAK8K,MAAMoG,iBAAkB,CAC7G,IAAMG,EAAYrR,KAAK8K,MAAMmG,oBAAoB/K,UAG5CmL,EAAUC,cACbD,EAAUC,YAAcpB,IAG1B,IAAM1J,EAAQxG,KAAK8K,MAAMqG,kBAAoBnR,KAAK8K,MAAMqG,iBAAiBxT,SAAW,GAGpFwL,EACE9C,EAAA,cAAC6J,GAAwBqB,SAAzB,CAAkCpN,MAAOnE,KAAK8K,MAAMoG,kBAClD7K,EAAA,cAACgL,EAAc7K,IAKrB,IAAMF,EAAYqI,KAAU,eAAgB3O,KAAKwG,MAAMF,WAEvD,OACED,EAAA,yBAASC,UAAWA,EAAWC,MAAOvG,KAAKwG,MAAMD,OAC/CF,EAAA,cAACmL,GAAD,KACGrI,WAjG+BhC,cCDrBsK,qCAInB,SAAAA,EAAYjL,GAAY,IAAAjF,EAAA,OAAAtE,OAAAuE,EAAA,EAAAvE,CAAA+C,KAAAyR,IACtBlQ,EAAAtE,OAAAkL,EAAA,EAAAlL,CAAA+C,KAAA/C,OAAAmL,EAAA,EAAAnL,CAAAwU,GAAApJ,KAAArI,KAAMwG,KAJAkL,iBAGgB,EAAAnQ,EAFhBoQ,WAAqB,IAI3BpQ,EAAKuJ,MAAQ,GACbvJ,EAAKqQ,OAASrQ,EAAKqQ,OAAOrJ,KAAZtL,OAAAuL,EAAA,EAAAvL,QAAAuL,EAAA,EAAAvL,CAAAsE,KACdA,EAAKsQ,cAAgBtQ,EAAKsQ,cAActJ,KAAnBtL,OAAAuL,EAAA,EAAAvL,QAAAuL,EAAA,EAAAvL,CAAAsE,KACrBA,EAAKuQ,UAAYvQ,EAAKuQ,UAAUvJ,KAAftL,OAAAuL,EAAA,EAAAvL,QAAAuL,EAAA,EAAAvL,CAAAsE,KALKA,2MAShBvB,KAAK+R,cACX/R,KAAKgS,kBACLC,SAASC,iBAAiB,UAAWlS,KAAK8R,4JAI1C9R,KAAKmS,oBACLF,SAASG,oBAAoB,UAAWpS,KAAK8R,6CAG7BO,GAChB,IAAMC,EAAS7M,OAAOO,MAAQP,OAAOO,MAAyBqM,EACvC,KAAnBC,EAAOC,SAAkBD,EAAOE,SAAWF,EAAOG,SACpDhN,OAAOyJ,SAASwD,KAAO,oDAMrBlU,EAAqBC,qBAAqB2F,SAC5C5F,EAAqBC,qBAAqB2F,OAAOI,UAAUsB,aAAW6M,aAAc3S,KAAK6R,eACzFrT,EAAqBC,qBAAqB2F,OAAOI,UAAUsB,aAAW8M,kBAAmB5S,KAAK6R,eAC9FrT,EAAqBC,qBAAqB2F,OAAOI,UAAUsB,aAAWC,sBAAuB/F,KAAK6R,4DAKhGrT,EAAqBC,qBAAqB2F,SAC5C5F,EAAqBC,qBAAqB2F,OAAOK,YAAYqB,aAAW6M,aAAc3S,KAAK6R,eAC3FrT,EAAqBC,qBAAqB2F,OAAOK,YAAYqB,aAAW8M,kBAAmB5S,KAAK6R,eAChGrT,EAAqBC,qBAAqB2F,OAAOK,YAAYqB,aAAWC,sBAAuB/F,KAAK6R,6KAMhGrT,EAAqBuT,qBAG3B/F,IAAO6G,OAAOrU,EAAqBC,qBAAqB7B,SAASkW,MACjE/G,IAAQ8G,OAAOrU,EAAqBC,qBAAqB7B,SAASkW,eAG5DhG,GAAgBiG,0CAGF1R,EAASyC,MAAMC,4BAA7BD,2BACC9D,KAAKiL,SAAS,CAAEnH,sJAIvB2B,OAAOuN,aAAahT,KAAK0R,aACzB1R,KAAK0R,YAAcjM,OAAOwN,WAAWjT,KAAK4R,OAAQ5R,KAAK2R,6CAIvDjS,QAAQG,IAAI,UACZwB,EAAS6R,aACTlT,KAAK+R,0CAGWvU,EAAY+I,GAC5B,OAAO,kBACLF,EAAA,yBAASC,UAAU,UAAUC,MAAOA,GAClCF,EAAA,cAAC0J,GAAD,CAAcvS,GAAIA,uCAKR,IAAA4I,EAAApG,KACVmJ,EAAU9C,EAAA,cAAC2J,GAAD,CAASpS,KAAK,sBAAsBgR,QAAQ,IAe1D,OAbI5O,KAAK8K,MAAMhH,QACbqF,EACE9C,EAAA,cAAC8M,EAAA,EAAD,KACE9M,EAAA,cAAC+M,EAAA,EAAD,KACGpT,KAAK8K,MAAMhH,MAAMmD,IAAI,SAAA+C,GAAI,OACvB3D,EAAA,cAACgN,EAAA,EAAD,CAAOvS,IAAKkJ,EAAKsJ,KAAMA,KAAMtJ,EAAKsJ,KAAMC,MAAqB,MAAdvJ,EAAKsJ,KAAcpN,UAAWE,EAAKoN,WAAWxJ,EAAKyJ,eAAgBzJ,EAAKzD,WAE1HF,EAAA,cAACgN,EAAA,EAAD,CAAOnN,UAAW+I,QAMnB5I,EAAA,yBAASC,UAAU,OAAO6C,UAlGJhC,qBCdjCuM,SACErN,EAAA,cAACmL,GAAD,KAAenL,EAAA,cAACsN,GAAD,OACf1B,SAAS2B,eAAe,6BCV1BC,EAAAjH,QAAiBkH,EAAAC,EAAuB","file":"static/js/main.039bdeba.chunk.js","sourcesContent":["import { IModuleContext, IPubSub, ISystemSettings, ElectronStore, topicNames, IPubSubEvent } from \"@schirkan/reactron-interfaces\";\r\nimport { createRemoteService } from \"./RpcClient\";\r\nimport { services } from \"./ReactronServicesFrontend\";\r\n\r\nlet electron: Electron.AllElectron;\r\nlet settings: ISystemSettings;\r\nlet topics: IPubSub = { // TODO: mock\r\n  clearAllSubscriptions: () => { },\r\n  once: () => { },\r\n  publish: () => { },\r\n  subscribe: () => { },\r\n  unsubscribe: () => { }\r\n};\r\nlet Store: new (options?: any) => ElectronStore;\r\n\r\nexport class BrowserModuleContext implements IModuleContext {\r\n  public static inernalModuleContext: BrowserModuleContext;\r\n  private static moduleStoreCache: { [key: string]: ElectronStore } = {};\r\n  private static serviceCache: { [key: string]: any } = {};\r\n\r\n  constructor(public moduleName: string) {\r\n    const escapedModuleName = (moduleName || '').replace('/', '@');\r\n    this.moduleApiPath = '/api/modules/' + escapedModuleName;\r\n  }\r\n\r\n  public readonly services = services;\r\n  public readonly moduleApiPath: string;\r\n  public get electron(): Electron.AllElectron { return electron };\r\n  public get topics(): IPubSub { return topics; }\r\n  public get settings(): Readonly<ISystemSettings> { return settings; }\r\n\r\n  public get moduleStorage(): ElectronStore {\r\n    const moduleStoreKey = 'module.' + this.moduleName;\r\n    if (Store && !BrowserModuleContext.moduleStoreCache[moduleStoreKey]) {\r\n      BrowserModuleContext.moduleStoreCache[moduleStoreKey] = new Store({ name: moduleStoreKey });\r\n    }\r\n    return BrowserModuleContext.moduleStoreCache[moduleStoreKey];\r\n  }\r\n\r\n  public async getService<TService = any>(serviceName: string, explicitModuleName?: string): Promise<TService | undefined> {\r\n    const moduleName = explicitModuleName || this.moduleName;\r\n    const serviceKey = serviceName + '.' + moduleName;\r\n    if (!BrowserModuleContext.serviceCache[serviceKey]) {\r\n      BrowserModuleContext.serviceCache[serviceKey] = createRemoteService<TService>(serviceName, moduleName);\r\n    }\r\n    return Promise.resolve(BrowserModuleContext.serviceCache[serviceKey]);\r\n  }\r\n\r\n  public static async init(): Promise<void> {\r\n    // check if env is electron\r\n    if (!electron && (window as any).require) {\r\n      electron = (window as any).require('electron');\r\n      const backendService = electron.remote.require('./dist/server/BackendService').BackendService.instance;\r\n      topics = backendService.topics;\r\n      Store = electron.remote.require('electron-store');\r\n\r\n      // subscribe settings change\r\n      topics.subscribe(topicNames.systemSettingsUpdated, (event: IPubSubEvent, data: ISystemSettings) => {\r\n        settings = data;\r\n      });\r\n    }\r\n\r\n    // init internal module\r\n    BrowserModuleContext.inernalModuleContext = new BrowserModuleContext('reactron');\r\n\r\n    // load settings\r\n    if (!settings) {\r\n      settings = await services.application.getSettings();\r\n    }\r\n  }\r\n}","import { BrowserModuleContext } from \"./BrowserModuleContext\";\r\nimport { rpcPath, IRpcRequest, IRpcResponse } from \"../common/rpc\";\r\n\r\ninterface ICacheItem {\r\n  timestamp: number;\r\n  result: Promise<any>;\r\n}\r\nconst cache: { [key: string]: ICacheItem } = {};\r\nconst cacheDuration = 5000; // 5 seconds\r\n\r\nconst getOrCreate = (key: string, creator: () => Promise<any>): Promise<any> => {\r\n  const now = Date.now();\r\n  const validCacheTime = now - (cacheDuration);\r\n\r\n  // check timestamp\r\n  if (cache[key] && cache[key].timestamp < validCacheTime) {\r\n    delete (cache[key]);\r\n  }\r\n\r\n  if (!cache[key]) {\r\n    cache[key] = {\r\n      timestamp: now,\r\n      result: creator()\r\n    };\r\n  } else {\r\n    console.log('RPC cache hit', key);\r\n  }\r\n  return cache[key].result;\r\n};\r\n\r\nconst callServiceMethod = async (data: IRpcRequest): Promise<IRpcResponse> => {\r\n  const id = data.moduleName + '.' + data.serviceName + '.' + data.methodName;\r\n  const urlId = id.replace('/', '@');\r\n  const url = BrowserModuleContext.inernalModuleContext.moduleApiPath + rpcPath + '/' + urlId;\r\n  const options: RequestInit = {\r\n    method: 'POST',\r\n    body: data && JSON.stringify(data),\r\n    headers: { \"Content-Type\": \"application/json; charset=utf-8\" }\r\n  };\r\n\r\n  let text: string | undefined = undefined;\r\n  let result: IRpcResponse | undefined = undefined;\r\n  let error: any;\r\n\r\n  try {\r\n    const response = await fetch(url, options);\r\n    text = await response.text();\r\n    if (response.status.toString().startsWith('2')) {\r\n      result = text ? JSON.parse(text) : undefined;\r\n      if (result && result.error) {\r\n        error = new Error(result.error);\r\n      }\r\n    } else {\r\n      error = new Error(text);\r\n    }\r\n  } catch (err) {\r\n    error = err;\r\n  }\r\n\r\n  if (error) {\r\n    if (result) {\r\n      console.error('RPC ' + id, { args: data.args, result });\r\n    } else {\r\n      console.error('RPC ' + id, { args: data.args, result: text, error: error && error.message || error });\r\n    }\r\n    throw error;\r\n  } else {\r\n    console.log('RPC ' + id, { args: data.args, result });\r\n    return result && result.result;\r\n  }\r\n};\r\n\r\nexport const createRemoteService = <TService>(serviceName: string, moduleName: string): TService => {\r\n  const proxy = new Proxy({}, {\r\n    get: (target, prop: string) => {\r\n      if (prop === 'then') {\r\n        return null; // I'm not a Thenable\r\n      }\r\n\r\n      return (...args: any[]) => {\r\n        const request: IRpcRequest = { serviceName, moduleName, methodName: prop, args };\r\n        return getOrCreate(JSON.stringify(request), () => callServiceMethod(request));\r\n      };\r\n    }\r\n  });\r\n  return proxy as TService;\r\n}","export interface IRpcRequest {\r\n  moduleName: string;\r\n  serviceName: string;\r\n  methodName: string;\r\n  args: any[];\r\n}\r\n\r\nexport interface IRpcResponse {\r\n  result?: any;\r\n  error?: string;\r\n}\r\n\r\nexport const rpcPath = '/service/rpc';","import { IModuleController, IAppController, ILogController, IServiceController, IWebComponentController, IWebPageController, ISystemSettings, IWebPageOptions, IWebComponentOptions, IReactronServices } from '@schirkan/reactron-interfaces';\r\nimport { createRemoteService } from './RpcClient';\r\n\r\nexport class ReactronServicesFrontend implements IReactronServices {\r\n  private moduleController = createRemoteService<IModuleController>('ModuleController', 'reactron');\r\n  private appController = createRemoteService<IAppController>('AppController', 'reactron');\r\n  private logController = createRemoteService<ILogController>('LogController', 'reactron');\r\n  private serviceController = createRemoteService<IServiceController>('ServiceController', 'reactron');\r\n  private webComponentController = createRemoteService<IWebComponentController>('WebComponentController', 'reactron');\r\n  private webPageController = createRemoteService<IWebPageController>('WebPageController', 'reactron');\r\n\r\n  private _modulesCache: any;\r\n  private _settingsCache: any;\r\n  private _servicesCache: any;\r\n  private _serviceOptionsCache: { [key: string]: any } = {};\r\n  private _pagesCache: any;\r\n  private _componentsCache: any;\r\n\r\n  public clearCache(): void {\r\n    delete this._modulesCache;\r\n    delete this._settingsCache;\r\n    delete this._servicesCache;\r\n    this._serviceOptionsCache = {};\r\n    delete this._pagesCache;\r\n    delete this._componentsCache;\r\n  }\r\n\r\n  public readonly modules: IModuleController = {\r\n    getModules: () => {\r\n      return this._modulesCache || (this._modulesCache = this.moduleController.getModules());\r\n    },\r\n    addModule: (repository: string) => {\r\n      delete this._modulesCache;\r\n      return this.moduleController.addModule(repository);\r\n    },\r\n    deleteModule: (moduleName: string) => {\r\n      delete this._modulesCache;\r\n      return this.moduleController.deleteModule(moduleName);\r\n    },\r\n    updateModule: (moduleName: string) => {\r\n      delete this._modulesCache;\r\n      return this.moduleController.updateModule(moduleName);\r\n    },\r\n    checkUpdates: this.moduleController.checkUpdates,\r\n    rebuildModule: this.moduleController.rebuildModule,\r\n  };\r\n\r\n  public readonly application: IAppController = {\r\n    getServerInfo: this.appController.getServerInfo, // TODO: cache\r\n    exitApplication: this.appController.exitApplication,\r\n    restartApplication: this.appController.restartApplication,\r\n    shutdownSystem: this.appController.shutdownSystem,\r\n    rebootSystem: this.appController.rebootSystem,\r\n    resetApplication: this.appController.resetApplication,\r\n    getSettings: () => {\r\n      return this._settingsCache || (this._settingsCache = this.appController.getSettings());\r\n    },\r\n    setSettings: (settings: ISystemSettings) => {\r\n      this._settingsCache = settings;\r\n      return this.appController.setSettings(settings);\r\n    },\r\n  };\r\n\r\n  public readonly log: ILogController = {\r\n    getLogEntries: this.logController.getLogEntries\r\n  };\r\n\r\n  public readonly services: IServiceController = {\r\n    getAllServices: () => {\r\n      return this._servicesCache || (this._servicesCache = this.serviceController.getAllServices());\r\n    },\r\n    getServiceOptions: (moduleName: string, serviceName: string) => {\r\n      const key = moduleName + '.' + serviceName;\r\n      return this._serviceOptionsCache[key] || (this._serviceOptionsCache[key] = this.serviceController.getServiceOptions(moduleName, serviceName));\r\n    },\r\n    setServiceOptions: (moduleName: string, serviceName: string, options: object) => {\r\n      const key = moduleName + '.' + serviceName;\r\n      this._serviceOptionsCache[key] = options;\r\n      return this.serviceController.setServiceOptions(moduleName, serviceName, options);\r\n    },\r\n  };\r\n\r\n  public readonly components: IWebComponentController = {\r\n    getWebComponentOptions: () => {\r\n      return this._componentsCache || (this._componentsCache = this.webComponentController.getWebComponentOptions());\r\n    },\r\n    setWebComponentOptions: (options: IWebComponentOptions) => {\r\n      delete this._componentsCache;\r\n      return this.webComponentController.setWebComponentOptions(options);\r\n    },\r\n    deleteWebComponentOptions: (id: string) => {\r\n      delete this._componentsCache;\r\n      return this.webComponentController.deleteWebComponentOptions(id);\r\n    },\r\n  }\r\n\r\n  public readonly pages: IWebPageController = {\r\n    getWebPages: () => {\r\n      return this._pagesCache || (this._pagesCache = this.webPageController.getWebPages());\r\n    },\r\n    setWebPage: (options: IWebPageOptions) => {\r\n      delete this._pagesCache;\r\n      return this.webPageController.setWebPage(options);\r\n    },\r\n    deleteWebPage: (id: string) => {\r\n      delete this._pagesCache;\r\n      return this.webPageController.deleteWebPage(id);\r\n    },\r\n  };\r\n}\r\n\r\nexport const services: ReactronServicesFrontend = new ReactronServicesFrontend();","import * as React from 'react';\r\nimport { IReactronComponentDefinition, IInputComponentProps } from \"@schirkan/reactron-interfaces\";\r\nimport CarouselLayout from \"./CarouselLayout\";\r\nimport { CarouselProps } from 'react-responsive-carousel';\r\nimport { ICarouselLayoutOptions } from './ICarouselLayoutOptions';\r\n\r\nexport const carouselLayoutDefinition: IReactronComponentDefinition<ICarouselLayoutOptions> = {\r\n  component: CarouselLayout,\r\n  description: 'Carousel Layout',\r\n  displayName: 'Carousel Layout',\r\n  name: 'CarouselLayout',\r\n  type: 'layout',\r\n  fields: [\r\n    {\r\n      displayName: 'Options', name: 'options', valueType: 'object', fields: [\r\n        { displayName: 'Interval in ms', name: 'interval', valueType: 'number', defaultValue: 5000, minValue: 1000, stepSize: 50 },\r\n        { displayName: 'Transition Time in ms', name: 'transitionTime', valueType: 'number', defaultValue: 500, minValue: 100, stepSize: 50 },\r\n        { displayName: 'Show Indicators', name: 'showIndicators', valueType: 'boolean', defaultValue: true },\r\n        { displayName: 'Show Arrows', name: 'showArrows', valueType: 'boolean', defaultValue: false },\r\n        { displayName: 'Show Status', name: 'showStatus', valueType: 'boolean', defaultValue: false },\r\n        { displayName: 'Center Mode', name: 'centerMode', valueType: 'boolean', defaultValue: false },\r\n        { displayName: 'Center Slide Percentage', name: 'centerSlidePercentage', valueType: 'number', defaultValue: 70, minValue: 1, maxValue: 100, stepSize: 1 },\r\n        { displayName: 'Axis', name: 'axis', valueType: 'boolean', defaultValue: 'horizontal', values: [{ value: 'horizontal', text: 'horizontal' }, { value: 'vertical', text: 'vertical' }] },\r\n      ],\r\n      inputControl: (props: IInputComponentProps<CarouselProps>) => {\r\n        const interval = props.value && props.value.interval;\r\n        return <span>interval {interval} ms</span>;\r\n      }\r\n    },\r\n    { displayName: 'Content', name: 'items', valueType: 'webComponent', isArray: true },\r\n    { displayName: 'Carousel Style', name: 'style', valueType: 'style' },\r\n  ]\r\n};","import * as React from 'react';\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport { ICarouselLayoutOptions } from './ICarouselLayoutOptions';\r\nimport { IReactronComponentContext } from '@schirkan/reactron-interfaces';\r\n\r\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\r\nimport './CarouselLayout.scss';\r\n\r\nexport default class CarouselLayout extends React.Component<ICarouselLayoutOptions> {\r\n  public context!: IReactronComponentContext;\r\n\r\n  public render() {\r\n    return (\r\n      <section className=\"CarouselLayout\" style={this.props.style}>\r\n        <Carousel autoPlay={true} infiniteLoop={true} showThumbs={false} showArrows={false} showStatus={false} {...this.props.options}>\r\n          {this.props.items.map(id => this.context.renderComponent({ id }))}\r\n        </Carousel>\r\n      </section>\r\n    );\r\n  }\r\n}","import { IReactronComponentDefinition, IInputComponentProps } from \"@schirkan/reactron-interfaces\";\r\nimport GridLayout from \"./GridLayout\";\r\nimport * as React from 'react';\r\nimport { IGridLayoutTileOptions } from \"./IGridLayoutTileOptions\";\r\n\r\nexport const gridLayoutDefinition: IReactronComponentDefinition = {\r\n  component: GridLayout,\r\n  description: 'Grid Layout',\r\n  displayName: 'Grid Layout',\r\n  name: 'GridLayout',\r\n  type: 'layout',\r\n  fields: [\r\n    { displayName: 'Grid Style', name: 'gridStyle', valueType: 'style' },\r\n    { displayName: 'Tile Style', name: 'tileStyle', valueType: 'style' },\r\n    {\r\n      displayName: 'Grid tiles',\r\n      name: 'tiles',\r\n      valueType: 'object',\r\n      isArray: true,\r\n      fields: [\r\n        { displayName: 'Row', name: 'row', valueType: 'number', defaultValue: 1, stepSize: 1, minValue: 1, maxValue: 20 },\r\n        { displayName: 'Column', name: 'col', valueType: 'number', defaultValue: 1, stepSize: 1, minValue: 1, maxValue: 20 },\r\n        { displayName: 'Row span', name: 'rowspan', valueType: 'number', defaultValue: 1, stepSize: 1, minValue: 1, maxValue: 20 },\r\n        { displayName: 'Column span', name: 'colspan', valueType: 'number', defaultValue: 1, stepSize: 1, minValue: 1, maxValue: 20 },\r\n        { displayName: 'Content', name: 'content', valueType: 'webComponent' },\r\n        { displayName: 'Style', name: 'style', valueType: 'style' }\r\n      ],\r\n      inputControl: (props: IInputComponentProps<IGridLayoutTileOptions>) => {\r\n        const tile = props.value || {};\r\n        const style = { width: '100%', textOverflow: 'ellipsis', overflow: 'hidden' };\r\n        const WebComponentTitle: any = props.getDefaultInputControl({ displayName: 'Content', name: 'content', valueType: 'webComponent' });\r\n        return <div style={style}>[ {tile.row} | {tile.col} | <WebComponentTitle {...props} value={tile.content} /> ]</div>;\r\n      }\r\n    }\r\n  ]\r\n};","import * as React from 'react';\r\nimport { IGridLayoutOptions, IGridLayoutTileOptions } from './IGridLayoutTileOptions';\r\nimport { IReactronComponentContext } from '@schirkan/reactron-interfaces';\r\n\r\nimport './GridLayout.scss';\r\n\r\nexport default class GridLayout extends React.Component<IGridLayoutOptions> {\r\n  public context!: IReactronComponentContext;\r\n  \r\n  constructor(props: IGridLayoutOptions) {\r\n    super(props);\r\n\r\n    this.renderTile = this.renderTile.bind(this);\r\n  }\r\n\r\n  private renderTile(tile: IGridLayoutTileOptions, index: number) {\r\n    const style = { ...this.props.tileStyle, ...tile.style };\r\n    style.gridColumn = tile.col.toString();\r\n    if (tile.colspan > 1) {\r\n      style.gridColumn += ' / span ' + tile.colspan;\r\n    }\r\n\r\n    style.gridRow = tile.row.toString();\r\n    if (tile.rowspan > 1) {\r\n      style.gridRow += ' / span ' + tile.rowspan;\r\n    }\r\n    return (\r\n      <div className=\"GridTile\" key={index} style={style}>\r\n        {this.context.renderComponent({ id: tile.content })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <section className=\"GridLayout\" style={this.props.gridStyle}>\r\n        {this.props.tiles.map(this.renderTile)}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport IFrame from \"./IFrame\";\r\n\r\nexport const iFrameDefinition: IReactronComponentDefinition = {\r\n    component: IFrame,\r\n    description: 'IFrame Component',\r\n    displayName: 'IFrame',\r\n    name: 'IFrame',\r\n    fields: [\r\n        { displayName: 'URL', name: 'url', valueType: 'string' }\r\n    ]\r\n};","import * as React from 'react';\r\nimport { IIFrameOptions } from './IIFrameOptions';\r\n\r\nimport './IFrame.scss';\r\n\r\nexport default class IFrame extends React.Component<IIFrameOptions> {\r\n  public render() {\r\n    return <iframe className=\"ui-iframe\" src={this.props.url} />;\r\n  }\r\n}\r\n","import { IReactronComponentDefinition, IInputComponentProps } from \"@schirkan/reactron-interfaces\";\r\nimport ListLayout from \"./ListLayout\";\r\nimport * as React from 'react';\r\nimport { IListLayoutItemOptions } from \"./IListLayoutItemOptions\";\r\n\r\nexport const listLayoutDefinition: IReactronComponentDefinition = {\r\n  component: ListLayout,\r\n  description: 'List Layout',\r\n  displayName: 'List Layout',\r\n  name: 'ListLayout',\r\n  type: 'layout',\r\n  fields: [\r\n    { displayName: 'List Style', name: 'listStyle', valueType: 'style' },\r\n    { displayName: 'Item Style', name: 'itemStyle', valueType: 'style' },\r\n    {\r\n      displayName: 'List items',\r\n      name: 'items',\r\n      valueType: 'object',\r\n      isArray: true,\r\n      fields: [\r\n        { displayName: 'Content', name: 'content', valueType: 'webComponent' },\r\n        { displayName: 'Style', name: 'style', valueType: 'style' }\r\n      ],\r\n      inputControl: (props: IInputComponentProps<IListLayoutItemOptions>) => {\r\n        const item = props.value || {};\r\n        const WebComponentTitle: any = props.getDefaultInputControl({ displayName: 'Content', name: 'content', valueType: 'webComponent' });\r\n        return <WebComponentTitle {...props} value={item.content} />;\r\n      }\r\n    }\r\n  ]\r\n};","import * as React from 'react';\r\nimport { IListLayoutItemOptions } from \"./IListLayoutItemOptions\";\r\nimport { IListLayoutOptions } from \"./IListLayoutOptions\";\r\nimport { IReactronComponentContext } from '@schirkan/reactron-interfaces';\r\n\r\nimport './ListLayout.scss';\r\n\r\nexport default class ListLayout extends React.Component<IListLayoutOptions> {\r\n  public context!: IReactronComponentContext;\r\n\r\n  constructor(props: IListLayoutOptions) {\r\n    super(props);\r\n\r\n    this.renderListItem = this.renderListItem.bind(this);\r\n  }\r\n\r\n  private renderListItem(item: IListLayoutItemOptions, index: number) {\r\n    const style = { ...this.props.itemStyle, ...item.style };\r\n\r\n    return (\r\n      <div className=\"ListItem\" key={index} style={style}>\r\n        {this.context.renderComponent({ id: item.content })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <section className=\"ListLayout\">\r\n        {this.props.items.map(this.renderListItem)}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport MarkDown from \"./MarkDown\";\r\n\r\nexport const markDownDefinition: IReactronComponentDefinition = {\r\n  component: MarkDown,\r\n  description: 'MarkDown Component',\r\n  displayName: 'MarkDown',\r\n  name: 'MarkDown',\r\n  fields: [\r\n    { displayName: 'Text', name: 'text', valueType: 'string', textRows: 10 },\r\n    { displayName: 'Style', name: 'style', valueType: 'style' }\r\n  ]\r\n};","import * as React from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport { IMarkDownOptions } from './IMarkDownOptions';\r\n\r\nimport './MarkDown.scss';\r\n\r\nexport default class MarkDown extends React.Component<IMarkDownOptions> {\r\n  public render() {\r\n    return (\r\n      <section className=\"MarkDown\" style={this.props.style}>\r\n        <ReactMarkdown source={this.props.text} />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport Notifications from \"./Notifications\";\r\n\r\nexport const notificationsDefinition: IReactronComponentDefinition = {\r\n    component: Notifications,\r\n    description: 'Notifications',\r\n    displayName: 'Notifications',\r\n    name: 'Notifications',\r\n    fields: []\r\n};","import * as React from 'react';\r\n\r\nimport './Notifications.scss';\r\n\r\nexport default class Notifications extends React.Component<any, any> {\r\n  constructor(props: any) {\r\n    super(props);\r\n  }\r\n\r\n  public render() {\r\n    return <section className=\"Notifications\">Notifications</section>;\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { IRoundButtonProps } from './IRoundButtonProps';\r\nimport './RoundButton.scss';\r\n\r\nexport default class RoundButton extends React.Component<IRoundButtonProps> {\r\n  public render() {\r\n    return <Link className=\"RoundButton\" to={this.props.to} role=\"button\">{this.props.children}</Link>;\r\n  }\r\n}\r\n","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport { carouselLayoutDefinition } from \"./CarouselLayout/CarouselLayoutDefinition\";\r\nimport { gridLayoutDefinition } from \"./GridLayout/GridLayoutDefinition\";\r\nimport { iFrameDefinition } from \"./IFrame/IFrameDefinition\";\r\nimport { listLayoutDefinition } from \"./ListLayout/ListLayoutDefinition\";\r\nimport { markDownDefinition } from \"./MarkDown/MarkDownDefinition\";\r\nimport { notificationsDefinition } from \"./Notifications/NotificationsDefinition\";\r\nimport { welcomeDefinition } from \"./Welcome/WelcomeDefinition\";\r\n\r\nexport const components: IReactronComponentDefinition[] = [\r\n    listLayoutDefinition,\r\n    carouselLayoutDefinition,\r\n    gridLayoutDefinition,\r\n    welcomeDefinition,\r\n    markDownDefinition,\r\n    notificationsDefinition,\r\n    iFrameDefinition\r\n];","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport Welcome from \"./Welcome\";\r\n\r\nexport const welcomeDefinition: IReactronComponentDefinition = {\r\n    component: Welcome,\r\n    description: 'Welcome Component',\r\n    displayName: 'Welcome',\r\n    name: 'Welcome',\r\n    fields: []\r\n};","import * as SvgIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport { IServerInfo } from '@schirkan/reactron-interfaces';\r\nimport * as React from 'react';\r\nimport RoundButton from '../../components/RoundButton/RoundButton';\r\nimport logo from './logo.svg';\r\nimport { services } from '../../ReactronServicesFrontend';\r\n\r\nimport './Welcome.scss';\r\n\r\ninterface IWelcomeState {\r\n  info?: IServerInfo;\r\n}\r\n\r\nexport default class Welcome extends React.Component<any, IWelcomeState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  public componentDidMount() {\r\n    services.application.getServerInfo().then(info => {\r\n      this.setState({ info });\r\n    });\r\n  }\r\n\r\n  public render() {\r\n    let info;\r\n\r\n    if (this.state.info) {\r\n      info = (<div className=\"info\">\r\n        To edit this page click Admin-Button or visit<br /><br />\r\n        <i>http://{this.state.info.ip}:3000/admin</i>\r\n      </div>);\r\n    }\r\n    return (\r\n      <section className=\"Welcome\">\r\n        <RoundButton to=\"/admin\">\r\n          <FontAwesome.FontAwesomeIcon icon={SvgIcons.faCog} />\r\n          Admin\r\n        </RoundButton>\r\n        <img src={logo} className=\"logo\" alt=\"logo\" />\r\n        <div className=\"title\">Welcome to Reactron</div>\r\n        {info}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import * as SvgCore from '@fortawesome/fontawesome-svg-core';\r\nimport * as BrandIcons from '@fortawesome/free-brands-svg-icons';\r\nimport * as RegularIcons from '@fortawesome/free-regular-svg-icons';\r\nimport * as SolidIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport { IComponentLoader, IModuleRepositoryItem, IReactronComponentDefinition } from '@schirkan/reactron-interfaces';\r\nimport * as reactronInterfaces from '@schirkan/reactron-interfaces';\r\nimport moment from 'moment';\r\nimport momentTimezone from 'moment-timezone';\r\nimport numeral from 'numeral';\r\nimport * as React from 'react';\r\nimport * as ReactDom from 'react-dom';\r\nimport * as ReactRouterDom from 'react-router-dom';\r\nimport { components as internalComponents } from './internalModule';\r\nimport { services } from './ReactronServicesFrontend';\r\n\r\n// tslint:disable:no-string-literal\r\n\r\nconst SystemJS = (window as any).System as SystemJSLoader.System;\r\n\r\nconst externalModules = {};\r\nexternalModules['react'] = React;\r\nexternalModules['react-dom'] = ReactDom;\r\nexternalModules['react-router-dom'] = ReactRouterDom;\r\nexternalModules['numeral'] = { default: numeral };\r\nexternalModules['moment'] = { default: moment };\r\nexternalModules['moment-timezone'] = { default: momentTimezone };\r\nexternalModules['@fortawesome/fontawesome-svg-core'] = SvgCore;\r\nexternalModules['@fortawesome/free-solid-svg-icons'] = SolidIcons;\r\nexternalModules['@fortawesome/free-regular-svg-icons'] = RegularIcons;\r\nexternalModules['@fortawesome/free-brands-svg-icons'] = BrandIcons;\r\nexternalModules['@fortawesome/react-fontawesome'] = FontAwesome;\r\nexternalModules['@schirkan/reactron-interfaces'] = reactronInterfaces;\r\n\r\nif ((window as any).require) {\r\n  externalModules['electron'] = (window as any).require('electron');\r\n}\r\n\r\nObject.keys(externalModules).forEach(key => {\r\n  const moduleExport = externalModules[key];\r\n  SystemJS.register(key, [], exports => ({ execute: () => exports(moduleExport) }));\r\n});\r\n\r\nexport class ComponentLoader implements IComponentLoader {\r\n  private allComponentsLoaded = false;\r\n  private moduleComponents: { [moduleName: string]: IReactronComponentDefinition[] } = {\r\n    'reactron': internalComponents\r\n  };\r\n\r\n  public async getModuleComponents(moduleName: string): Promise<IReactronComponentDefinition[] | undefined> {\r\n    if (!this.moduleComponents[moduleName]) {      \r\n      const modules = await services.modules.getModules();\r\n      const m = modules.find(x => x.name === moduleName);\r\n\r\n      if (!m) {\r\n        console.error('Module not found: ' + moduleName);\r\n        return;\r\n      }\r\n\r\n      await this.registerModuleComponents(m);\r\n    }\r\n\r\n    return this.moduleComponents[moduleName];\r\n  }\r\n\r\n  private async registerModuleComponents(m: IModuleRepositoryItem): Promise<void> {\r\n    if (!m.browserFile) {\r\n      console.log('Module has no browserFile: ' + m.name);\r\n      return;\r\n    }\r\n\r\n    if (this.moduleComponents[m.name]) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      console.log(m.browserFile);\r\n\r\n      const browserFileContent = await SystemJS.import('\\\\' + m.browserFile);\r\n      // tslint:disable-next-line:no-string-literal\r\n      const components = browserFileContent['components'];\r\n\r\n      if (components && typeof components === 'object' && Array.isArray(components)) {\r\n        this.moduleComponents[m.name] = components;\r\n      }\r\n      console.log('Components loaded for module: ' + m.name);\r\n    } catch (error) {\r\n      console.error('Error loading components for module: ' + m.name, error);\r\n    }\r\n  }\r\n\r\n  public async getAllComponents(): Promise<{ [moduleName: string]: IReactronComponentDefinition[] }> {\r\n    if (this.allComponentsLoaded) {\r\n      return this.moduleComponents;\r\n    }\r\n    \r\n    const modules = await services.modules.getModules();\r\n\r\n    for (const m of modules) {\r\n      await this.registerModuleComponents(m);\r\n    }\r\n    this.allComponentsLoaded = true;\r\n    return this.moduleComponents;\r\n  }\r\n}\r\n\r\nexport const componentLoader = new ComponentLoader();","import * as SvgIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport classname from 'classnames';\r\nimport * as React from 'react';\r\nimport { ILoadingProps } from './ILoadingProps';\r\n\r\nimport './Loading.scss';\r\n\r\nexport default class Loading extends React.Component<ILoadingProps> {\r\n  public static defaultProps: Partial<ILoadingProps> = {\r\n    iconSize: \"4x\"\r\n  };\r\n\r\n  public render() {\r\n    return (\r\n      <section className={classname('Loading', { 'center': this.props.center })}>\r\n        <FontAwesome.FontAwesomeIcon icon={SvgIcons.faSpinner} size={this.props.iconSize} spin={true} />\r\n        {this.props.text && (\r\n          <div className=\"text\">{this.props.text}</div>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import * as SvgIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport RoundButton from '../RoundButton/RoundButton';\r\nimport { IPageNotFoundProps } from './IPageNotFoundProps';\r\n\r\nimport './PageNotFound.scss'\r\n\r\nexport default class PageNotFound extends React.Component<IPageNotFoundProps> {\r\n  public render() {\r\n    return (\r\n      <div className=\"PageNotFound\">\r\n        <h1><FontAwesome.FontAwesomeIcon icon={SvgIcons.faQuestionCircle} /> 404</h1>\r\n        <h2>No page defined for path: {this.props.location.pathname}</h2>\r\n        <RoundButton to=\"/admin\">\r\n          <FontAwesome.FontAwesomeIcon icon={SvgIcons.faCog} /> Admin\r\n        </RoundButton>\r\n        <RoundButton to=\"/\">\r\n          <FontAwesome.FontAwesomeIcon icon={SvgIcons.faHome} /> Home\r\n        </RoundButton>\r\n      </div >\r\n    );\r\n  }\r\n}","import { ILogWriter, IPubSub, topicNames, Severity } from \"@schirkan/reactron-interfaces\";\r\n\r\nexport class LogWriter implements ILogWriter {\r\n  constructor(private topics: IPubSub, public readonly source: string) { }\r\n\r\n  private log(severity: Severity, message: string, data?: any): void {\r\n    this.topics && this.topics.publish(topicNames.log, { source: this.source, severity, message, data });\r\n  }\r\n\r\n  public error(message: string, data?: any): void {\r\n    this.log('error', message, LogWriter.prepareData(data));\r\n  }\r\n\r\n  public warning(message: string, data?: any): void {\r\n    this.log('warning', message, LogWriter.prepareData(data));\r\n  }\r\n\r\n  public info(message: string, data?: any): void {\r\n    this.log('information', message, LogWriter.prepareData(data));\r\n  }\r\n\r\n  public debug(message: string, data?: any): void {\r\n    this.log('debug', message, LogWriter.prepareData(data));\r\n  }\r\n\r\n  private static prepareData(data?: any) {\r\n    if (data instanceof Error) {\r\n      return {\r\n        // Pull all enumerable properties, supporting properties on custom Errors\r\n        ...data,\r\n        // Explicitly pull Error's non-enumerable properties\r\n        name: data.name,\r\n        message: data.message,\r\n        stack: data.stack\r\n      };\r\n    }\r\n    return data;\r\n  }\r\n}","import { SizeProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { IReactronComponentContext, ILogWriter, IWebComponentOptions } from '@schirkan/reactron-interfaces';\r\nimport React from 'react';\r\nimport { BrowserModuleContext } from \"./BrowserModuleContext\";\r\nimport { componentLoader } from './ComponentLoader';\r\nimport Loading from \"./components/Loading/Loading\";\r\nimport WebComponent, { IWebComponentProps } from \"./components/WebComponent/WebComponent\";\r\nimport { LogWriter } from '../common/LogWriter';\r\n\r\nexport class WebComponentContext extends BrowserModuleContext implements IReactronComponentContext {\r\n  public readonly renderLoading: (text?: string, iconSize?: SizeProp) => any;\r\n  public readonly renderComponent: (props: IWebComponentProps) => any;\r\n  public readonly componentLoader = componentLoader;\r\n  public readonly log: ILogWriter;\r\n  public readonly componentName: string;\r\n\r\n  constructor(props: IWebComponentOptions) {\r\n    super(props.moduleName);\r\n\r\n    const logSource = props.id || (props.moduleName + '.' + props.componentName);\r\n    this.log = new LogWriter(this.topics, logSource);\r\n    this.componentName = props.componentName;\r\n\r\n    this.renderComponent = (props: IWebComponentProps) => {\r\n      const key = props.id + '.' + props.moduleName + '.' + props.componentName;\r\n      return <WebComponent {...props} key={key} />;\r\n    };\r\n\r\n    this.renderLoading = (text?: string, iconSize?: SizeProp) => {\r\n      return <Loading text={text} iconSize={iconSize} />;\r\n    };\r\n  }\r\n}\r\n\r\nexport const WebComponentContextType = React.createContext<IReactronComponentContext>(new WebComponentContext({ moduleName: '', parentId: '', componentName: '', id: '' }));","import * as SvgIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport RoundButton from '../RoundButton/RoundButton';\r\nimport { IComponentNotFoundProps } from './IComponentNotFoundProps';\r\n\r\nimport './ComponentNotFound.scss';\r\n\r\nexport default class ComponentNotFound extends React.Component<IComponentNotFoundProps> {\r\n  public static defaultProps: Partial<IComponentNotFoundProps> = {\r\n    iconSize: \"4x\"\r\n  };\r\n\r\n  public render() {\r\n    const text = [];\r\n    if (this.props.id) {\r\n      text.push('Id: ' + this.props.id);\r\n    }\r\n    if (this.props.componentName) {\r\n      text.push('Component: ' + this.props.componentName);\r\n    }\r\n    if (this.props.moduleName) {\r\n      text.push('Module: ' + this.props.moduleName);\r\n    }\r\n\r\n    return (\r\n      <section className=\"ComponentNotFound\">\r\n        <FontAwesome.FontAwesomeIcon icon={SvgIcons.faExclamationTriangle} size={this.props.iconSize} />\r\n        <div className=\"text\">Component not found: {text.join(' | ')}</div>\r\n        <RoundButton to=\"/admin\">\r\n          <FontAwesome.FontAwesomeIcon icon={SvgIcons.faCog} /> Admin\r\n        </RoundButton>\r\n      </section>\r\n    );\r\n  }\r\n}","import * as React from 'react';\r\n\r\ninterface IErrorBoundaryState {\r\n  error: any;\r\n}\r\n\r\nexport default class ErrorBoundary extends React.Component<any, IErrorBoundaryState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = { error: null };\r\n  }\r\n\r\n  public componentDidCatch(error: any, info: any) {\r\n    console.log(error);\r\n    console.log(info);\r\n    this.setState({ error });\r\n  }\r\n\r\n  public render() {\r\n    if (this.state.error) {\r\n      return <span style={{ color: 'red' }}>Something went wrong.</span>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}","import { IExtraWebComponentProps, IReactronComponentContext, IReactronComponentDefinition, IWebComponentOptions } from '@schirkan/reactron-interfaces';\r\nimport classname from 'classnames';\r\nimport * as React from 'react';\r\nimport { services } from '../../ReactronServicesFrontend';\r\nimport { componentLoader } from '../../ComponentLoader';\r\nimport { WebComponentContext } from '../../WebComponentContext';\r\nimport { WebComponentContextType } from '../../WebComponentContext';\r\nimport ComponentNotFound from '../ComponentNotFound/ComponentNotFound';\r\nimport ErrorBoundary from '../ErrorBoundary/ErrorBoundary';\r\nimport Loading from '../Loading/Loading';\r\n\r\nimport './WebComponent.scss';\r\n\r\nexport interface IWebComponentProps extends Partial<IWebComponentOptions>, IExtraWebComponentProps {\r\n}\r\n\r\ninterface IWebComponentState {\r\n  componentFound?: boolean;\r\n  componentContext?: IReactronComponentContext;\r\n  componentDefinition?: IReactronComponentDefinition;\r\n  componentOptions?: IWebComponentOptions;\r\n}\r\n\r\nexport default class WebComponent extends React.Component<IWebComponentProps, IWebComponentState> {\r\n  constructor(props: IWebComponentProps) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: IWebComponentProps) {\r\n    if (this.props.id !== prevProps.id ||\r\n      this.props.moduleName !== prevProps.moduleName ||\r\n      this.props.componentName !== prevProps.componentName ||\r\n      this.props.options !== prevProps.options) {\r\n      this.loadComponent();\r\n    }\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this.loadComponent();\r\n  }\r\n\r\n  private async loadComponent() {\r\n    try {\r\n      let webComponentOptions: IWebComponentOptions | undefined;\r\n\r\n      if (this.props.id) {\r\n        // nur mit der ID lesen\r\n        const allComponentOptions = await services.components.getWebComponentOptions();\r\n        webComponentOptions = allComponentOptions.find(x => x.id === this.props.id);\r\n      } else if (this.props.moduleName && this.props.componentName) {\r\n        webComponentOptions = {\r\n          id: '',\r\n          parentId: '',\r\n          moduleName: this.props.moduleName,\r\n          componentName: this.props.componentName,\r\n          options: this.props.options,\r\n        };\r\n      }\r\n\r\n      if (!webComponentOptions) {\r\n        this.setState({ componentFound: false });\r\n        return;\r\n      }\r\n\r\n      const moduleComponents = await componentLoader.getModuleComponents(webComponentOptions.moduleName);\r\n      if (!moduleComponents) {\r\n        this.setState({ componentFound: false });\r\n        return;\r\n      }\r\n\r\n      const componentName = webComponentOptions.componentName;\r\n      const componentDefinition = moduleComponents.find(x => x.name === componentName);\r\n      if (!componentDefinition || !componentDefinition.component) {\r\n        this.setState({ componentFound: false });\r\n        return;\r\n      }\r\n\r\n      this.setState({\r\n        componentContext: new WebComponentContext(webComponentOptions),\r\n        componentDefinition,\r\n        componentOptions: webComponentOptions,\r\n        componentFound: true\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      this.setState({ componentFound: false });\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    let content = <Loading center={true} />;\r\n\r\n    if (this.state.componentFound === false) {\r\n      content = <ComponentNotFound {...this.props} />;\r\n    }\r\n\r\n    if (this.state.componentDefinition && this.state.componentDefinition.component && this.state.componentContext) {\r\n      const Component = this.state.componentDefinition.component as typeof React.Component;\r\n\r\n      // set contextType\r\n      if (!Component.contextType) {\r\n        Component.contextType = WebComponentContextType;\r\n      }\r\n\r\n      const props = this.state.componentOptions && this.state.componentOptions.options || {};\r\n\r\n      // render context and component\r\n      content = (\r\n        <WebComponentContextType.Provider value={this.state.componentContext}>\r\n          <Component {...props} />\r\n        </WebComponentContextType.Provider>\r\n      );\r\n    }\r\n\r\n    const className = classname(\"WebComponent\", this.props.className);\r\n\r\n    return (\r\n      <section className={className} style={this.props.style}>\r\n        <ErrorBoundary>\r\n          {content}\r\n        </ErrorBoundary>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import { IWebPageOptions, topicNames } from '@schirkan/reactron-interfaces';\r\nimport moment from 'moment';\r\nimport numeral from 'numeral';\r\nimport * as React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport { BrowserModuleContext } from '../../BrowserModuleContext';\r\nimport { componentLoader } from '../../ComponentLoader';\r\nimport { services } from '../../ReactronServicesFrontend';\r\nimport Loading from '../Loading/Loading';\r\nimport PageNotFound from '../PageNotFound/PageNotFound';\r\nimport WebComponent from '../WebComponent/WebComponent';\r\n\r\n// load moment & numeral locales\r\nimport 'moment/min/locales.min';\r\nimport 'numeral/min/locales.min';\r\n\r\nimport './App.scss';\r\n\r\nexport interface IAppState {\r\n  pages?: IWebPageOptions[];\r\n}\r\n\r\nexport default class App extends React.Component<any, IAppState> {\r\n  private reloadTimer: number | undefined;\r\n  private reloadWait: number = 2000;\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {};\r\n    this.reload = this.reload.bind(this);\r\n    this.triggerReload = this.triggerReload.bind(this);\r\n    this.onKeyDown = this.onKeyDown.bind(this);\r\n  }\r\n\r\n  public async componentDidMount() {\r\n    await this.init();\r\n    this.subscribeTopics();\r\n    document.addEventListener('keydown', this.onKeyDown);\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    this.unsubscribeTopics();\r\n    document.removeEventListener('keydown', this.onKeyDown);\r\n  }\r\n\r\n  private onKeyDown(e: KeyboardEvent) {\r\n    const evtobj = window.event ? window.event as KeyboardEvent : e;\r\n    if (evtobj.keyCode === 65 && evtobj.ctrlKey && evtobj.altKey) {\r\n      window.location.href = '/admin';\r\n    }\r\n  }\r\n\r\n  private subscribeTopics() {\r\n    // register page/component change event\r\n    if (BrowserModuleContext.inernalModuleContext.topics) {\r\n      BrowserModuleContext.inernalModuleContext.topics.subscribe(topicNames.pagesUpdated, this.triggerReload);\r\n      BrowserModuleContext.inernalModuleContext.topics.subscribe(topicNames.componentsUpdated, this.triggerReload);\r\n      BrowserModuleContext.inernalModuleContext.topics.subscribe(topicNames.systemSettingsUpdated, this.triggerReload);\r\n    }\r\n  }\r\n\r\n  private unsubscribeTopics() {\r\n    if (BrowserModuleContext.inernalModuleContext.topics) {\r\n      BrowserModuleContext.inernalModuleContext.topics.unsubscribe(topicNames.pagesUpdated, this.triggerReload);\r\n      BrowserModuleContext.inernalModuleContext.topics.unsubscribe(topicNames.componentsUpdated, this.triggerReload);\r\n      BrowserModuleContext.inernalModuleContext.topics.unsubscribe(topicNames.systemSettingsUpdated, this.triggerReload);\r\n    }\r\n  }\r\n\r\n  private async init() {\r\n    // init BrowserModuleContext\r\n    await BrowserModuleContext.init();\r\n\r\n    // load settings\r\n    moment.locale(BrowserModuleContext.inernalModuleContext.settings.lang);\r\n    numeral.locale(BrowserModuleContext.inernalModuleContext.settings.lang);\r\n\r\n    // load all modules\r\n    await componentLoader.getAllComponents();\r\n\r\n    // load pages\r\n    const pages = await services.pages.getWebPages();\r\n    return this.setState({ pages });\r\n  }\r\n\r\n  private triggerReload() {\r\n    window.clearTimeout(this.reloadTimer);\r\n    this.reloadTimer = window.setTimeout(this.reload, this.reloadWait);\r\n  }\r\n\r\n  private reload() {\r\n    console.log('reload');\r\n    services.clearCache();\r\n    this.init();\r\n  }\r\n\r\n  public renderPage(id: string, style: any) {\r\n    return () => (\r\n      <section className=\"WebPage\" style={style}>\r\n        <WebComponent id={id} />\r\n      </section>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    let content = <Loading text=\"Loading Reactron...\" center={true} />;\r\n\r\n    if (this.state.pages) {\r\n      content = (\r\n        <Router>\r\n          <Switch>\r\n            {this.state.pages.map(item =>\r\n              (<Route key={item.path} path={item.path} exact={item.path === '/'} component={this.renderPage(item.webComponentId, item.style)} />)\r\n            )}\r\n            <Route component={PageNotFound} />\r\n          </Switch>\r\n        </Router>\r\n      );\r\n    }\r\n\r\n    return <section className=\"App\">{content}</section>;\r\n  }\r\n}\r\n","// main entry file for react\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport App from './browser/components/App/App';\r\nimport ErrorBoundary from './browser/components/ErrorBoundary/ErrorBoundary';\r\n\r\nimport './index.scss';\r\n\r\nReactDOM.render(\r\n  <ErrorBoundary><App /></ErrorBoundary>,\r\n  document.getElementById('root') as HTMLElement\r\n);","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";"],"sourceRoot":""}