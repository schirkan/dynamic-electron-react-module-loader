{"version":3,"sources":["browser/BrowserModuleContext.ts","common/apiRoutes.ts","browser/ApiClient.ts","browser/inernalModuleContext.ts","browser/components/Loading/Loading.tsx","browser/components/RoundButton/RoundButton.tsx","browser/components/PageNotFound/PageNotFound.tsx","browser/internalModule/CarouselLayout/CarouselLayoutDefinition.tsx","browser/internalModule/CarouselLayout/CarouselLayout.tsx","browser/internalModule/GridLayout/GridLayoutDefinition.tsx","browser/internalModule/GridLayout/GridLayout.tsx","browser/internalModule/GridLayout/GridLayoutTileHeader.tsx","browser/internalModule/GridLayout/GridLayoutTileHeaderDefinition.tsx","browser/internalModule/IFrame/IFrameDefinition.tsx","browser/internalModule/IFrame/IFrame.tsx","browser/internalModule/ListLayout/ListLayoutDefinition.tsx","browser/internalModule/ListLayout/ListLayout.tsx","browser/internalModule/ListLayout/ListLayoutItemHeader.tsx","browser/internalModule/ListLayout/ListLayoutItemHeaderDefinition.tsx","browser/internalModule/MarkDown/MarkDownDefinition.tsx","browser/internalModule/MarkDown/MarkDown.tsx","browser/internalModule/Notifications/NotificationsDefinition.tsx","browser/internalModule/Notifications/Notifications.tsx","browser/internalModule/index.ts","browser/internalModule/Welcome/WelcomeDefinition.tsx","browser/internalModule/Welcome/Welcome.tsx","browser/ComponentLoader.ts","browser/WebComponentContext.tsx","browser/components/ComponentNotFound/ComponentNotFound.tsx","browser/components/ErrorBoundary/ErrorBoundary.tsx","browser/components/WebComponent/WebComponent.tsx","browser/components/App/App.tsx","index.tsx","browser/internalModule/Welcome/logo.svg"],"names":["electron","backendService","topics","Store","ApiRoute","path","method","this","routes","getServices","getServiceOptions","setServiceOptions","getModules","addModule","deleteModule","rebuildModule","updateModule","checkUpdates","getWebPages","setWebPage","deleteWebPage","getServerInfo","exitApplication","restartApplication","shutdownSystem","rebootSystem","resetApplication","getSettings","setSettings","getWebComponentOptions","setWebComponentOptions","deleteWebComponentOptions","ApiClient_ApiClient","ApiClient","getAllServices","apiCall","prototype","clearCache","_this","Object","keys","forEach","key","route","cacheResponse","cache","toLocaleLowerCase","call","params","data","Promise","resolve","replace","fetch","inernalModuleContext","moduleApiPath","body","JSON","stringify","headers","Content-Type","then","response","__awaiter","undefined","text","_a","sent","status","toString","startsWith","parse","console","log","Error","apiClient","window","require","remote","BackendService","instance","subscribe","event","BrowserModuleContext_settings","moduleStoreCache","serviceCache","x","BrowserModuleContext","moduleName","moduleStoreKey","name","moduleStorage","escapedModuleName","getService","serviceName","explicitModuleName","serviceKey","serviceManager","get","defineProperty","components_Loading_Loading","_super","Loading","__extends","render","react","className","classnames","center","props","react_fontawesome_index_es","icon","index_es","size","iconSize","spin","defaultProps","RoundButton","RoundButton_extends","Link","to","role","children","PageNotFound","PageNotFound_extends","location","pathname","components_RoundButton_RoundButton","carouselLayoutDefinition","component","CarouselLayout","CarouselLayout_extends","description","displayName","type","fields","gridLayoutDefinition","GridLayout","renderTile","bind","GridLayout_extends","tile","index","style","__assign","tileStyle","gridColumn","col","colspan","gridRow","row","rowspan","context","renderComponent","id","content","gridStyle","tiles","map","valueType","isArray","defaultValue","stepSize","minValue","maxValue","inputControl","module","GridLayoutTileHeader_style","width","textOverflow","overflow","gridLayoutTileHeaderDefinition","GridLayoutTileHeader","GridLayoutTileHeader_extends","value","react_default","a","createElement","Component","iFrameDefinition","IFrame","IFrame_extends","src","url","listLayoutDefinition","ListLayout","renderListItem","ListLayout_extends","item","ListLayout_assign","itemStyle","items","ListLayoutItemHeader_style","listLayoutItemHeaderDefinition","ListLayoutItemHeader","ListLayoutItemHeader_extends","markDownDefinition","MarkDown","MarkDown_extends","react_markdown","source","textRows","notificationsDefinition","Notifications","Notifications_extends","components","Welcome","state","Welcome_extends","componentDidMount","info","setState","ip","logo_default","alt","SystemJS","System","externalModules","react_dom","es","default","numeral_default","moment_default","moment_timezone_default","fontawesome_svg_core_index_es","free_regular_svg_icons_index_es","free_brands_svg_icons_index_es","moduleExport","register","exports","execute","componentLoader","ComponentLoader","allComponentsLoaded","moduleComponents","reactron","getModuleComponents","modules","m","find","registerModuleComponents","error","browserFile","import","browserFileContent","Array","error_1","getAllComponents","modules_1","_i","length","WebComponentContext_WebComponentContext","WebComponentContext","componentName","components_WebComponent_WebComponent","WebComponentContext_assign","renderLoading","WebComponentContext_extends","WebComponentContextType","createContext","components_ComponentNotFound_ComponentNotFound","ComponentNotFound","ComponentNotFound_extends","push","join","ErrorBoundary","ErrorBoundary_extends","componentDidCatch","WebComponent","WebComponent_extends","componentDidUpdate","prevProps","prevState","options","loadComponent","webComponentOptions","allComponentOptions","componentFound","componentName_1","componentDefinition","componentContext","componentOptions","WebComponent_assign","contextType","Provider","components_ErrorBoundary_ErrorBoundary","App","reloadWait","reload","triggerReload","App_extends","init","settings","locale","lang","pages","clearTimeout","reloadTimer","setTimeout","renderPage","BrowserRouter","Switch","Route","exact","webComponentId","components_PageNotFound_PageNotFound","components_App_App","document","getElementById","__webpack_require__","p"],"mappings":"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","file":"static/js/main.0a3cd77d.chunk.js","sourcesContent":["import { IBackendService, IModuleContext, IPubSub, ISystemSettings } from \"@schirkan/reactron-interfaces\";\r\nimport { apiClient } from \"./ApiClient\";\r\n\r\nlet electron: Electron.AllElectron;\r\nlet backendService: IBackendService;\r\nlet topics: IPubSub | undefined;\r\nlet Store: typeof ElectronStore;\r\n\r\n// check if env is electron\r\nif ((window as any).require) {\r\n  electron = (window as any).require('electron');\r\n  backendService = electron.remote.require('./dist/server/BackendService').BackendService.instance;\r\n  topics = backendService.topics;\r\n  Store = electron.remote.require('electron-store');\r\n  \r\n  // on settings change\r\n  topics.subscribe('system-settings-updated', (event, data: ISystemSettings) => {\r\n    settings = data\r\n  });\r\n}\r\n\r\nconst moduleStoreCache: { [key: string]: ElectronStore } = {};\r\nconst serviceCache: { [key: string]: any } = {};\r\nlet settings: ISystemSettings;\r\n\r\n// load settings\r\napiClient.getSettings().then(x => settings = x); // TODO\r\n\r\nexport class BrowserModuleContext implements IModuleContext {\r\n  public readonly electron: Electron.AllElectron;\r\n  public readonly backendService: IBackendService;\r\n  public readonly topics: IPubSub;\r\n  public readonly moduleStorage: ElectronStore;\r\n  public readonly moduleApiPath: string;\r\n  public getService: <TService = any>(serviceName: string, moduleName?: string | undefined) => TService | undefined;\r\n  public get settings(): Readonly<ISystemSettings> {\r\n    return settings;\r\n  }\r\n\r\n  constructor(public moduleName: string) {\r\n    this.electron = electron;\r\n    this.backendService = backendService;\r\n    this.topics = topics!;\r\n\r\n    const moduleStoreKey = 'module.' + moduleName;\r\n    if (Store && !moduleStoreCache[moduleStoreKey]) {\r\n      moduleStoreCache[moduleStoreKey] = new Store({ name: 'module.' + moduleName });\r\n    }\r\n    this.moduleStorage = moduleStoreCache[moduleStoreKey];\r\n\r\n    const escapedModuleName = moduleName.replace('/', '@');\r\n    this.moduleApiPath = '/api/modules/' + escapedModuleName;\r\n\r\n    this.getService = <TService>(serviceName: string, explicitModuleName?: string) => {\r\n      if (!this.backendService) {\r\n        console.log('Method getService() is not supported in browser environment.');\r\n        return undefined;\r\n      }\r\n      const serviceKey = (explicitModuleName || moduleName) + '.' + serviceName;\r\n      if (!serviceCache[serviceKey]) {\r\n        serviceCache[serviceKey] = this.backendService.serviceManager.get(explicitModuleName || moduleName, serviceName);\r\n      }\r\n      return serviceCache[serviceKey] as TService | undefined;\r\n    }\r\n  }\r\n}\r\n\r\n","import { ICommandResult, IModuleRepositoryItem, IServerInfo, IServiceRepositoryItem, ISystemSettings, IWebComponentOptions, IWebPageOptions } from '@schirkan/reactron-interfaces';\r\n\r\nexport class ApiRoute<TParams, TBody, TResponse = void>{\r\n    constructor(public path: string, public method: string) { }\r\n}\r\n\r\nexport const routes = {\r\n    getServices: new ApiRoute<undefined, undefined, IServiceRepositoryItem[]>('/service/', 'get'),\r\n    getServiceOptions: new ApiRoute<{ moduleName: string, serviceName: string }, undefined, object>('/service/:moduleName/:serviceName', 'get'),\r\n    setServiceOptions: new ApiRoute<{ moduleName: string, serviceName: string }, object>('/service/:moduleName/:serviceName', 'post'),\r\n\r\n    getModules: new ApiRoute<undefined, undefined, IModuleRepositoryItem[]>('/modules/', 'get'),\r\n    addModule: new ApiRoute<undefined, { repository: string }, ICommandResult[]>('/modules/', 'post'),\r\n    deleteModule: new ApiRoute<{ moduleName: string }, undefined, ICommandResult[]>('/modules/:moduleName', 'delete'),\r\n    rebuildModule: new ApiRoute<{ moduleName: string }, undefined, ICommandResult[]>('/modules/:moduleName/rebuild', 'post'),\r\n    updateModule: new ApiRoute<{ moduleName: string }, undefined, ICommandResult[]>('/modules/:moduleName/update', 'post'),\r\n    checkUpdates: new ApiRoute<{ moduleName: string }, undefined, ICommandResult[]>('/modules/checkUpdates/update', 'get'),\r\n\r\n    getWebPages: new ApiRoute<undefined, undefined, IWebPageOptions[]>('/pages/', 'get'),\r\n    setWebPage: new ApiRoute<undefined, IWebPageOptions, IWebPageOptions>('/pages/', 'post'),\r\n    deleteWebPage: new ApiRoute<{ id: string }, undefined>('/pages/:id', 'delete'),\r\n\r\n    getServerInfo: new ApiRoute<undefined, undefined, IServerInfo>('/app/', 'get'),\r\n    exitApplication: new ApiRoute<undefined, undefined>('/app/exitApplication', 'post'),\r\n    restartApplication: new ApiRoute<undefined, undefined>('/app/restartApplication', 'post'),\r\n    shutdownSystem: new ApiRoute<undefined, undefined>('/app/shutdownSystem', 'post'),\r\n    rebootSystem: new ApiRoute<undefined, undefined>('/app/restartSystem', 'post'),\r\n    resetApplication: new ApiRoute<undefined, undefined>('/app/resetApplication', 'post'),\r\n\r\n    getSettings: new ApiRoute<undefined, undefined, ISystemSettings>('/settings/', 'get'),\r\n    setSettings: new ApiRoute<undefined, ISystemSettings>('/settings/', 'post'),\r\n\r\n    getWebComponentOptions: new ApiRoute<undefined, undefined, IWebComponentOptions[]>('/components/', 'get'),\r\n    setWebComponentOptions: new ApiRoute<undefined, IWebComponentOptions, IWebComponentOptions>('/components/', 'post'),\r\n    deleteWebComponentOptions: new ApiRoute<{ id: string }, undefined>('/components/:id', 'delete'),\r\n};","import { ApiRoute, routes } from '../common/apiRoutes';\r\nimport { inernalModuleContext } from './inernalModuleContext';\r\n\r\nexport class ApiClient {\r\n    public getAllServices = apiCall(routes.getServices, true);\r\n    public getServiceOptions = apiCall(routes.getServiceOptions);\r\n    public setServiceOptions = apiCall(routes.setServiceOptions);\r\n\r\n    public getModules = apiCall(routes.getModules, true);\r\n    public addModule = apiCall(routes.addModule);\r\n    public checkUpdates = apiCall(routes.checkUpdates);\r\n    public deleteModule = apiCall(routes.deleteModule);\r\n    public rebuildModule = apiCall(routes.rebuildModule);\r\n    public updateModule = apiCall(routes.updateModule);\r\n\r\n    public getWebPages = apiCall(routes.getWebPages, true);\r\n    public setWebPage = apiCall(routes.setWebPage);\r\n    public deleteWebPage = apiCall(routes.deleteWebPage);\r\n\r\n    public getServerInfo = apiCall(routes.getServerInfo);\r\n    public exitApplication = apiCall(routes.exitApplication);\r\n    public restartApplication = apiCall(routes.restartApplication);\r\n    public shutdownSystem = apiCall(routes.shutdownSystem);\r\n    public rebootSystem = apiCall(routes.rebootSystem);\r\n    public resetApplication = apiCall(routes.resetApplication);\r\n\r\n    public getSettings = apiCall(routes.getSettings, true);\r\n    public setSettings = apiCall(routes.setSettings);\r\n\r\n    public getWebComponentOptions = apiCall(routes.getWebComponentOptions, true);\r\n    public setWebComponentOptions = apiCall(routes.setWebComponentOptions);\r\n    public deleteWebComponentOptions = apiCall(routes.deleteWebComponentOptions);\r\n\r\n    public clearCache() {\r\n        Object.keys(this).forEach(key => {\r\n            if (this[key] && this[key].clearCache) {\r\n                this[key].clearCache();\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\ninterface IApiCall<TParams, TBody, TResponse> {\r\n    (params?: TParams, body?: TBody): Promise<TResponse>;\r\n    clearCache: () => void;\r\n}\r\n\r\nconst apiCall = <TParams, TBody, TResponse>(\r\n    route: ApiRoute<TParams, TBody, TResponse>,\r\n    cacheResponse: boolean = false) => {\r\n    let cache: any;\r\n    const method = route.method.toLocaleLowerCase();\r\n\r\n    const call: any = (params: TParams, data: TBody): Promise<TResponse> => {\r\n        if (cacheResponse && cache) {\r\n            return Promise.resolve(cache);\r\n        }\r\n\r\n        let path = route.path;\r\n        // replace params in path\r\n        if (params) {\r\n            Object.keys(params).forEach(key => {\r\n                path = path.replace(':' + key, params[key]);\r\n            });\r\n        }\r\n        return fetch(inernalModuleContext.moduleApiPath + path, {\r\n            method,\r\n            body: data && JSON.stringify(data),\r\n            headers: {\r\n                \"Content-Type\": \"application/json; charset=utf-8\",\r\n            }\r\n        })\r\n            .then(async response => {\r\n                const text = await response.text();\r\n\r\n                if (response.status.toString().startsWith('2')) {\r\n                    if (!text) {\r\n                        return undefined;\r\n                    }\r\n                    return JSON.parse(text);\r\n                }\r\n\r\n                console.log(text);\r\n                throw Error(text);\r\n            })\r\n            .then(response => {\r\n                if (cacheResponse) {\r\n                    cache = response;\r\n                }\r\n                return response;\r\n            });\r\n    };\r\n\r\n    call.clearCache = () => {\r\n        cache = undefined;\r\n    };\r\n\r\n    return call as IApiCall<TParams, TBody, TResponse>;\r\n};\r\n\r\nexport const apiClient = new ApiClient();","import { BrowserModuleContext } from './BrowserModuleContext';\r\nexport const inernalModuleContext = new BrowserModuleContext('reactron'); // internal module\r\n","import * as SvgIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport * as classname from 'classnames';\r\nimport * as React from 'react';\r\nimport { ILoadingProps } from './ILoadingProps';\r\n\r\nimport './Loading.css';\r\n\r\nexport default class Loading extends React.Component<ILoadingProps> {\r\n  public static defaultProps: Partial<ILoadingProps> = {\r\n    iconSize: \"4x\"\r\n  };\r\n\r\n  public render() {\r\n    return (\r\n      <section className={classname('Loading', { 'center': this.props.center })}>\r\n        <FontAwesome.FontAwesomeIcon icon={SvgIcons.faSpinner} size={this.props.iconSize} spin={true} />\r\n        {this.props.text && (\r\n          <div className=\"text\">{this.props.text}</div>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { IRoundButtonProps } from './IRoundButtonProps';\r\nimport './RoundButton.css';\r\n\r\nexport default class RoundButton extends React.Component<IRoundButtonProps> {\r\n  public render() {\r\n    return <Link className=\"RoundButton\" to={this.props.to} role=\"button\">{this.props.children}</Link>;\r\n  }\r\n}\r\n","import * as SvgIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport RoundButton from '../RoundButton/RoundButton';\r\nimport { IPageNotFoundProps } from './IPageNotFoundProps';\r\n\r\nimport './PageNotFound.css'\r\n\r\nexport default class PageNotFound extends React.Component<IPageNotFoundProps> {\r\n  public render() {\r\n    return (\r\n      <div className=\"PageNotFound\">\r\n        <h1><FontAwesome.FontAwesomeIcon icon={SvgIcons.faQuestionCircle} /> 404</h1>\r\n        <h2>No page defined for path: {this.props.location.pathname}</h2>\r\n        <RoundButton to=\"/admin\">\r\n          <FontAwesome.FontAwesomeIcon icon={SvgIcons.faCog} /> Admin\r\n        </RoundButton>\r\n        <RoundButton to=\"/\">\r\n          <FontAwesome.FontAwesomeIcon icon={SvgIcons.faHome} /> Home\r\n        </RoundButton>\r\n      </div >\r\n    );\r\n  }\r\n}","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport CarouselLayout from \"./CarouselLayout\";\r\n\r\nexport const carouselLayoutDefinition: IReactronComponentDefinition = {\r\n    component: CarouselLayout,\r\n    description: 'Carousel Layout',\r\n    displayName: 'Carousel Layout',\r\n    name: 'CarouselLayout',\r\n    type: 'layout',\r\n    fields: []\r\n};","import * as React from 'react';\r\n\r\nimport './CarouselLayout.css';\r\n\r\nexport default class CarouselLayout extends React.Component<any, any> {\r\n  constructor(props: any) {\r\n    super(props);\r\n  }\r\n\r\n  public render() {\r\n    return <section className=\"CarouselLayout\">CarouselLayout</section>;\r\n  }\r\n}\r\n","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport GridLayout from \"./GridLayout\";\r\n\r\nexport const gridLayoutDefinition: IReactronComponentDefinition = {\r\n  component: GridLayout,\r\n  description: 'Grid Layout',\r\n  displayName: 'Grid Layout',\r\n  name: 'GridLayout',\r\n  type: 'layout',\r\n  fields: [\r\n    { displayName: 'Grid Style', name: 'gridStyle', valueType: 'style' },\r\n    { displayName: 'Tile Style', name: 'tileStyle', valueType: 'style' },\r\n    {\r\n      displayName: 'Grid tiles',\r\n      name: 'tiles',\r\n      valueType: 'object',\r\n      isArray: true,\r\n      fields: [\r\n        { displayName: 'Row', name: 'row', valueType: 'number', defaultValue: 1, stepSize: 1, minValue: 1, maxValue: 20 },\r\n        { displayName: 'Column', name: 'col', valueType: 'number', defaultValue: 1, stepSize: 1, minValue: 1, maxValue: 20 },\r\n        { displayName: 'Row span', name: 'rowspan', valueType: 'number', defaultValue: 1, stepSize: 1, minValue: 1, maxValue: 20 },\r\n        { displayName: 'Column span', name: 'colspan', valueType: 'number', defaultValue: 1, stepSize: 1, minValue: 1, maxValue: 20 },\r\n        { displayName: 'Content', name: 'content', valueType: 'webComponent' },\r\n        { displayName: 'Style', name: 'style', valueType: 'style' }\r\n      ],\r\n      inputControl: { module: 'reactron', component: 'GridLayoutTileHeader' }\r\n    }\r\n  ]\r\n};","import * as React from 'react';\r\nimport { IGridLayoutOptions, IGridLayoutTileOptions } from './IGridLayoutTileOptions';\r\n\r\nimport './GridLayout.css';\r\n\r\nexport default class GridLayout extends React.Component<IGridLayoutOptions> {\r\n  constructor(props: IGridLayoutOptions) {\r\n    super(props);\r\n\r\n    this.renderTile = this.renderTile.bind(this);\r\n  }\r\n\r\n  private renderTile(tile: IGridLayoutTileOptions, index: number) {\r\n    const style = { ...this.props.tileStyle, ...tile.style };\r\n    style.gridColumn = tile.col.toString();\r\n    if (tile.colspan > 1) {\r\n      style.gridColumn += ' / span ' + tile.colspan;\r\n    }\r\n\r\n    style.gridRow = tile.row.toString();\r\n    if (tile.rowspan > 1) {\r\n      style.gridRow += ' / span ' + tile.rowspan;\r\n    }\r\n    return (\r\n      <div className=\"GridTile\" key={index} style={style}>\r\n        {this.context.renderComponent({ id: tile.content })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <section className=\"GridLayout\" style={this.props.gridStyle}>\r\n        {this.props.tiles.map(this.renderTile)}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import { IInputComponentProps } from \"@schirkan/reactron-interfaces\";\r\nimport React from \"react\";\r\nimport { IGridLayoutTileOptions } from \"./IGridLayoutTileOptions\";\r\n\r\nconst style = {\r\n  width: '100%',\r\n  textOverflow: 'ellipsis',\r\n  overflow: 'hidden'\r\n};\r\n\r\nexport class GridLayoutTileHeader extends React.Component<IInputComponentProps> {\r\n  public render() {\r\n    const tile = this.props.value as IGridLayoutTileOptions || {};\r\n    return (<div style={style}>[ {tile.row} | {tile.col} | {tile.content} ]</div>);\r\n  }\r\n}","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport { GridLayoutTileHeader } from \"./GridLayoutTileHeader\";\r\n\r\nexport const gridLayoutTileHeaderDefinition: IReactronComponentDefinition = {\r\n  component: GridLayoutTileHeader,\r\n  displayName: 'GridLayoutTileHeader',\r\n  name: 'GridLayoutTileHeader',\r\n  type: 'admin-input'\r\n};","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport IFrame from \"./IFrame\";\r\n\r\nexport const iFrameDefinition: IReactronComponentDefinition = {\r\n    component: IFrame,\r\n    description: 'IFrame Component',\r\n    displayName: 'IFrame',\r\n    name: 'IFrame',\r\n    fields: [\r\n        { displayName: 'URL', name: 'url', valueType: 'string' }\r\n    ]\r\n};","import * as React from 'react';\r\nimport { IIFrameOptions } from './IIFrameOptions';\r\n\r\nimport './IFrame.css';\r\n\r\nexport default class IFrame extends React.Component<IIFrameOptions> {\r\n  public render() {\r\n    return <iframe className=\"ui-iframe\" src={this.props.url} />;\r\n  }\r\n}\r\n","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport ListLayout from \"./ListLayout\";\r\n\r\nexport const listLayoutDefinition: IReactronComponentDefinition = {\r\n  component: ListLayout,\r\n  description: 'List Layout',\r\n  displayName: 'List Layout',\r\n  name: 'ListLayout',\r\n  type: 'layout',\r\n  fields: [\r\n    { displayName: 'List Style', name: 'listStyle', valueType: 'style' },\r\n    { displayName: 'Item Style', name: 'itemStyle', valueType: 'style' },\r\n    {\r\n      displayName: 'List items',\r\n      name: 'items',\r\n      valueType: 'object',\r\n      isArray: true,\r\n      fields: [\r\n        { displayName: 'Content', name: 'content', valueType: 'webComponent' },\r\n        { displayName: 'Style', name: 'style', valueType: 'style' }\r\n      ],\r\n      inputControl: { module: 'reactron', component: 'ListLayoutItemHeader' }\r\n    }\r\n  ]\r\n};","import * as React from 'react';\r\nimport { IListLayoutItemOptions } from \"./IListLayoutItemOptions\";\r\nimport { IListLayoutOptions } from \"./IListLayoutOptions\";\r\n\r\nimport './ListLayout.css';\r\n\r\nexport default class ListLayout extends React.Component<IListLayoutOptions> {\r\n  constructor(props: IListLayoutOptions) {\r\n    super(props);\r\n\r\n    this.renderListItem = this.renderListItem.bind(this);\r\n  }\r\n\r\n  private renderListItem(item: IListLayoutItemOptions, index: number) {\r\n    const style = { ...this.props.itemStyle, ...item.style };\r\n\r\n    return (\r\n      <div className=\"ListItem\" key={index} style={style}>\r\n        {this.context.renderComponent({ id: item.content })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <section className=\"ListLayout\">\r\n        {this.props.items.map(this.renderListItem)}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import { IInputComponentProps } from \"@schirkan/reactron-interfaces\";\r\nimport React from \"react\";\r\nimport { IListLayoutItemOptions } from \"./IListLayoutItemOptions\";\r\n\r\nconst style = {\r\n  width: '100%',\r\n  textOverflow: 'ellipsis',\r\n  overflow: 'hidden'\r\n};\r\n\r\nexport class ListLayoutItemHeader extends React.Component<IInputComponentProps> {\r\n  public render() {\r\n    const item = this.props.value as IListLayoutItemOptions || {};\r\n    return (<div style={style}>[ {item.content} ]</div>);\r\n  }\r\n}","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport { ListLayoutItemHeader } from \"./ListLayoutItemHeader\";\r\n\r\nexport const listLayoutItemHeaderDefinition: IReactronComponentDefinition = {\r\n  component: ListLayoutItemHeader,\r\n  displayName: 'ListLayoutItemHeader',\r\n  name: 'ListLayoutItemHeader',\r\n  type: 'admin-input'\r\n};","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport MarkDown from \"./MarkDown\";\r\n\r\nexport const markDownDefinition: IReactronComponentDefinition = {\r\n  component: MarkDown,\r\n  description: 'MarkDown Component',\r\n  displayName: 'MarkDown',\r\n  name: 'MarkDown',\r\n  fields: [\r\n    { displayName: 'Text', name: 'text', valueType: 'string', textRows: 10 }\r\n  ]\r\n};","import * as React from 'react';\r\nimport * as ReactMarkdown from 'react-markdown';\r\nimport { IMarkDownOptions } from './IMarkDownProps';\r\n\r\nimport './MarkDown.css';\r\n\r\nexport default class MarkDown extends React.Component<IMarkDownOptions> {\r\n  public render() {\r\n    return (\r\n      <section className=\"MarkDown\">\r\n        <ReactMarkdown source={this.props.text} />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport Notifications from \"./Notifications\";\r\n\r\nexport const notificationsDefinition: IReactronComponentDefinition = {\r\n    component: Notifications,\r\n    description: 'Notifications',\r\n    displayName: 'Notifications',\r\n    name: 'Notifications',\r\n    fields: []\r\n};","import * as React from 'react';\r\n\r\nimport './Notifications.css';\r\n\r\nexport default class Notifications extends React.Component<any, any> {\r\n  constructor(props: any) {\r\n    super(props);\r\n  }\r\n\r\n  public render() {\r\n    return <section className=\"Notifications\">Notifications</section>;\r\n  }\r\n}\r\n","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport { carouselLayoutDefinition } from \"./CarouselLayout/CarouselLayoutDefinition\";\r\nimport { gridLayoutDefinition } from \"./GridLayout/GridLayoutDefinition\";\r\nimport { gridLayoutTileHeaderDefinition } from \"./GridLayout/GridLayoutTileHeaderDefinition\";\r\nimport { iFrameDefinition } from \"./IFrame/IFrameDefinition\";\r\nimport { listLayoutDefinition } from \"./ListLayout/ListLayoutDefinition\";\r\nimport { listLayoutItemHeaderDefinition } from \"./ListLayout/ListLayoutItemHeaderDefinition\";\r\nimport { markDownDefinition } from \"./MarkDown/MarkDownDefinition\";\r\nimport { notificationsDefinition } from \"./Notifications/NotificationsDefinition\";\r\nimport { welcomeDefinition } from \"./Welcome/WelcomeDefinition\";\r\n\r\nexport const components: IReactronComponentDefinition[] = [\r\n    listLayoutDefinition,\r\n    listLayoutItemHeaderDefinition,\r\n    carouselLayoutDefinition,\r\n    gridLayoutDefinition,\r\n    gridLayoutTileHeaderDefinition,\r\n    welcomeDefinition,\r\n    markDownDefinition,\r\n    notificationsDefinition,\r\n    iFrameDefinition\r\n];","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport Welcome from \"./Welcome\";\r\n\r\nexport const welcomeDefinition: IReactronComponentDefinition = {\r\n    component: Welcome,\r\n    description: 'Welcome Component',\r\n    displayName: 'Welcome',\r\n    name: 'Welcome',\r\n    fields: []\r\n};","import * as SvgIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport { IServerInfo } from '@schirkan/reactron-interfaces';\r\nimport * as React from 'react';\r\nimport { apiClient } from '../../ApiClient';\r\nimport RoundButton from '../../components/RoundButton/RoundButton';\r\nimport logo from './logo.svg';\r\n\r\nimport './Welcome.css';\r\n\r\ninterface IWelcomeState {\r\n  info?: IServerInfo;\r\n}\r\n\r\nexport default class Welcome extends React.Component<any, IWelcomeState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  public componentDidMount() {\r\n    apiClient.getServerInfo().then(info => {\r\n      this.setState({ info });\r\n    });\r\n  }\r\n\r\n  public render() {\r\n    let info;\r\n\r\n    if (this.state.info) {\r\n      info = (<div className=\"info\">\r\n        To edit this page click Admin-Button or visit<br /><br />\r\n        <i>http://{this.state.info.ip}:3000/admin</i>\r\n      </div>);\r\n    }\r\n    return (\r\n      <section className=\"Welcome\">\r\n        <RoundButton to=\"/admin\">\r\n          <FontAwesome.FontAwesomeIcon icon={SvgIcons.faCog} />\r\n          Admin\r\n        </RoundButton>\r\n        <img src={logo} className=\"logo\" alt=\"logo\" />\r\n        <div className=\"title\">Welcome to Reactron</div>\r\n        {info}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import * as SvgCore from '@fortawesome/fontawesome-svg-core';\r\nimport * as BrandIcons from '@fortawesome/free-brands-svg-icons';\r\nimport * as RegularIcons from '@fortawesome/free-regular-svg-icons';\r\nimport * as SolidIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport { IComponentLoader, IModuleRepositoryItem, IReactronComponentDefinition } from '@schirkan/reactron-interfaces';\r\nimport moment from 'moment';\r\nimport momentTimezone from 'moment-timezone';\r\nimport numeral from 'numeral';\r\nimport * as React from 'react';\r\nimport * as ReactDom from 'react-dom';\r\nimport * as ReactRouterDom from 'react-router-dom';\r\nimport { apiClient } from './ApiClient';\r\nimport { inernalModuleContext } from './inernalModuleContext';\r\nimport { components as internalComponents } from \"./internalModule\";\r\n\r\n// tslint:disable:no-string-literal\r\n\r\nconst SystemJS = (window as any).System as SystemJSLoader.System;\r\n\r\nconst externalModules = {};\r\nexternalModules['react'] = React;\r\nexternalModules['react-dom'] = ReactDom;\r\nexternalModules['react-router-dom'] = ReactRouterDom;\r\nexternalModules['numeral'] = { default: numeral };\r\nexternalModules['moment'] = { default: moment };\r\nexternalModules['moment-timezone'] = { default: momentTimezone };\r\nexternalModules['@fortawesome/fontawesome-svg-core'] = SvgCore;\r\nexternalModules['@fortawesome/free-solid-svg-icons'] = SolidIcons;\r\nexternalModules['@fortawesome/free-regular-svg-icons'] = RegularIcons;\r\nexternalModules['@fortawesome/free-brands-svg-icons'] = BrandIcons;\r\nexternalModules['@fortawesome/react-fontawesome'] = FontAwesome;\r\n\r\nif (inernalModuleContext.electron) {\r\n  externalModules['electron'] = inernalModuleContext.electron;\r\n}\r\n\r\nObject.keys(externalModules).forEach(key => {\r\n  const moduleExport = externalModules[key];\r\n  SystemJS.register(key, [], exports => ({ execute: () => exports(moduleExport) }));\r\n});\r\n\r\nexport class ComponentLoader implements IComponentLoader {\r\n  private allComponentsLoaded = false;\r\n  private moduleComponents: { [moduleName: string]: IReactronComponentDefinition[] } = {\r\n    'reactron': internalComponents\r\n  };\r\n\r\n  public async getModuleComponents(moduleName: string): Promise<IReactronComponentDefinition[] | undefined> {\r\n    if (!this.moduleComponents[moduleName]) {\r\n      const modules = await apiClient.getModules();\r\n      const m = modules.find(x => x.name === moduleName);\r\n\r\n      if (!m) {\r\n        console.error('Module not found: ' + moduleName);\r\n        return;\r\n      }\r\n\r\n      await this.registerModuleComponents(m);\r\n    }\r\n\r\n    return this.moduleComponents[moduleName];\r\n  }\r\n\r\n  private async registerModuleComponents(m: IModuleRepositoryItem): Promise<void> {\r\n    if (!m.browserFile) {\r\n      console.log('Module has no browserFile: ' + m.name);\r\n      return;\r\n    }\r\n\r\n    if (this.moduleComponents[m.name]) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      console.log(m.browserFile);\r\n\r\n      const browserFileContent = await SystemJS.import('\\\\' + m.browserFile);\r\n      // tslint:disable-next-line:no-string-literal\r\n      const components = browserFileContent['components'];\r\n\r\n      if (components && typeof components === 'object' && Array.isArray(components)) {\r\n        this.moduleComponents[m.name] = components;\r\n      }\r\n      console.log('Components loaded for module: ' + m.name);\r\n    } catch (error) {\r\n      console.error('Error loading components for module: ' + m.name, error);\r\n    }\r\n  }\r\n\r\n  public async getAllComponents(): Promise<{ [moduleName: string]: IReactronComponentDefinition[] }> {\r\n    if (this.allComponentsLoaded) {\r\n      return this.moduleComponents;\r\n    }\r\n    const modules = await apiClient.getModules();\r\n    for (const m of modules) {\r\n      await this.registerModuleComponents(m);\r\n    }\r\n    this.allComponentsLoaded = true;\r\n    return this.moduleComponents;\r\n  }\r\n}\r\n\r\nexport const componentLoader = new ComponentLoader();","import { SizeProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { IReactronComponentContext } from '@schirkan/reactron-interfaces';\r\nimport React from 'react';\r\nimport { BrowserModuleContext } from \"./BrowserModuleContext\";\r\nimport { componentLoader } from './ComponentLoader';\r\nimport Loading from \"./components/Loading/Loading\";\r\nimport WebComponent, { IWebComponentProps } from \"./components/WebComponent/WebComponent\";\r\n\r\nexport class WebComponentContext extends BrowserModuleContext implements IReactronComponentContext {\r\n    public renderLoading: (text?: string, iconSize?: SizeProp) => any;\r\n    public renderComponent: (props: IWebComponentProps) => any;\r\n    public readonly componentLoader = componentLoader;\r\n\r\n    constructor(moduleName: string, public readonly componentName: string) {\r\n        super(moduleName);\r\n\r\n        this.renderComponent = (props: IWebComponentProps) => {\r\n            return <WebComponent {...props} />;\r\n        };\r\n\r\n        this.renderLoading = (text?: string, iconSize?: SizeProp) => {\r\n            return <Loading text={text} iconSize={iconSize} />;\r\n        };\r\n    }\r\n}\r\n\r\nexport const WebComponentContextType = React.createContext<IReactronComponentContext>(new WebComponentContext('', ''));","import * as SvgIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport RoundButton from '../RoundButton/RoundButton';\r\nimport { IComponentNotFoundProps } from './IComponentNotFoundProps';\r\n\r\nimport './ComponentNotFound.css';\r\n\r\nexport default class ComponentNotFound extends React.Component<IComponentNotFoundProps> {\r\n  public static defaultProps: Partial<IComponentNotFoundProps> = {\r\n    iconSize: \"4x\"\r\n  };\r\n\r\n  public render() {\r\n    const text = [];\r\n    if (this.props.id) {\r\n      text.push('Id: ' + this.props.id);\r\n    }\r\n    if (this.props.componentName) {\r\n      text.push('Component: ' + this.props.componentName);\r\n    }\r\n    if (this.props.moduleName) {\r\n      text.push('Module: ' + this.props.moduleName);\r\n    }\r\n\r\n    return (\r\n      <section className=\"ComponentNotFound\">\r\n        <FontAwesome.FontAwesomeIcon icon={SvgIcons.faExclamationTriangle} size={this.props.iconSize} />\r\n        <div className=\"text\">Component not found: {text.join(' | ')}</div>\r\n        <RoundButton to=\"/admin\">\r\n          <FontAwesome.FontAwesomeIcon icon={SvgIcons.faCog} /> Admin\r\n        </RoundButton>\r\n      </section>\r\n    );\r\n  }\r\n}","import * as React from 'react';\r\n\r\ninterface IErrorBoundaryState {\r\n  error: any;\r\n}\r\n\r\nexport default class ErrorBoundary extends React.Component<any, IErrorBoundaryState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = { error: null };\r\n  }\r\n\r\n  public componentDidCatch(error: any, info: any) {\r\n    console.log(error);\r\n    console.log(info);\r\n    this.setState({ error });\r\n  }\r\n\r\n  public render() {\r\n    if (this.state.error) {\r\n      return <h1>Something went wrong.</h1>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}","import { IReactronComponentContext, IReactronComponentDefinition, IWebComponentOptions } from '@schirkan/reactron-interfaces';\r\nimport * as React from 'react';\r\nimport { WebComponentContext } from 'src/browser/WebComponentContext';\r\nimport { apiClient } from '../../ApiClient';\r\nimport { componentLoader } from '../../ComponentLoader';\r\nimport { WebComponentContextType } from '../../WebComponentContext';\r\nimport ComponentNotFound from '../ComponentNotFound/ComponentNotFound';\r\nimport ErrorBoundary from '../ErrorBoundary/ErrorBoundary';\r\nimport Loading from '../Loading/Loading';\r\n\r\nimport './WebComponent.css';\r\n\r\nexport interface IWebComponentProps {\r\n  id?: string;\r\n  moduleName?: string;\r\n  componentName?: string;\r\n  options?: any;\r\n}  \r\n\r\ninterface IWebComponentState {\r\n  componentFound?: boolean;\r\n  componentContext?: IReactronComponentContext;\r\n  componentDefinition?: IReactronComponentDefinition;\r\n  componentOptions?: IWebComponentOptions;\r\n}\r\n\r\nexport default class WebComponent extends React.Component<IWebComponentProps, IWebComponentState> {\r\n  constructor(props: IWebComponentProps) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: IWebComponentProps, prevState: IWebComponentState) {\r\n    if (this.props.id !== prevProps.id ||\r\n      this.props.moduleName !== prevProps.moduleName ||\r\n      this.props.componentName !== prevProps.componentName ||\r\n      this.props.options !== prevProps.options) {\r\n      this.loadComponent();\r\n    }\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this.loadComponent();\r\n  }\r\n\r\n  private async loadComponent() {\r\n    try {\r\n      let webComponentOptions: IWebComponentOptions | undefined;\r\n\r\n      // nur mit der ID lesen\r\n      if (this.props.id) {\r\n        const allComponentOptions = await apiClient.getWebComponentOptions();\r\n        webComponentOptions = allComponentOptions.find(x => x.id === this.props.id);\r\n      } else if (this.props.moduleName && this.props.componentName) {\r\n        webComponentOptions = {\r\n          id: '',\r\n          moduleName: this.props.moduleName,\r\n          componentName: this.props.componentName,\r\n          options: this.props.options,\r\n        };\r\n      }\r\n\r\n      if (!webComponentOptions) {\r\n        this.setState({ componentFound: false });\r\n        return;\r\n      }\r\n\r\n      const moduleComponents = await componentLoader.getModuleComponents(webComponentOptions.moduleName);\r\n      if (!moduleComponents) {\r\n        this.setState({ componentFound: false });\r\n        return;\r\n      }\r\n\r\n      const componentName = webComponentOptions.componentName;\r\n      const componentDefinition = moduleComponents.find(x => x.name === componentName);\r\n      if (!componentDefinition || !componentDefinition.component) {\r\n        this.setState({ componentFound: false });\r\n        return;\r\n      }\r\n\r\n      this.setState({\r\n        componentContext: new WebComponentContext(webComponentOptions.moduleName, webComponentOptions.componentName),\r\n        componentDefinition,\r\n        componentOptions: webComponentOptions,\r\n        componentFound: true\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      this.setState({ componentFound: false });\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    let content = <Loading center={true} />;\r\n\r\n    if (this.state.componentFound === false) {\r\n      content = <ComponentNotFound {...this.props} />;\r\n    }\r\n\r\n    if (this.state.componentDefinition && this.state.componentDefinition.component && this.state.componentContext) {\r\n      const Component = this.state.componentDefinition.component as typeof React.Component;\r\n\r\n      // set contextType\r\n      if(!Component.contextType){\r\n        Component.contextType = WebComponentContextType;\r\n      }\r\n\r\n      const props = this.state.componentOptions && this.state.componentOptions.options || {}; \r\n\r\n      // render context and component\r\n      content = (\r\n        <WebComponentContextType.Provider value={this.state.componentContext}>\r\n          <Component {...props} />\r\n        </WebComponentContextType.Provider>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <section className=\"WebComponent\">\r\n        <ErrorBoundary>\r\n          {content}\r\n        </ErrorBoundary>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import { IWebPageOptions } from '@schirkan/reactron-interfaces';\r\nimport moment from 'moment';\r\nimport numeral from 'numeral';\r\nimport * as React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport { inernalModuleContext } from 'src/browser/inernalModuleContext';\r\nimport { apiClient } from '../../ApiClient';\r\nimport Loading from '../Loading/Loading';\r\nimport PageNotFound from '../PageNotFound/PageNotFound';\r\nimport WebComponent from '../WebComponent/WebComponent';\r\n\r\nimport './App.css';\r\n\r\n// load moment locales\r\nimport 'moment/locale/de';\r\nimport 'moment/locale/es';\r\nimport 'moment/locale/fr';\r\nimport 'moment/locale/it';\r\nimport 'moment/locale/ru';\r\n\r\n// load numeral locales\r\nimport 'numeral/min/locales.min';\r\n\r\nexport interface IAppState {\r\n  pages?: IWebPageOptions[];\r\n}\r\n\r\nexport default class App extends React.Component<{}, IAppState> {\r\n  private reloadTimer: number;\r\n  private reloadWait: number = 2000;\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {};\r\n    this.reload = this.reload.bind(this);\r\n    this.triggerReload = this.triggerReload.bind(this);\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this.init();\r\n\r\n    // register page/component change event\r\n    if (inernalModuleContext.topics) {\r\n      inernalModuleContext.topics.subscribe('pages-updated', this.triggerReload);\r\n      inernalModuleContext.topics.subscribe('components-updated', this.triggerReload);\r\n      inernalModuleContext.topics.subscribe('system-settings-updated', this.triggerReload);\r\n    }\r\n  }\r\n\r\n  private async init() {\r\n    // load settings\r\n    const settings = await apiClient.getSettings();\r\n    moment.locale(settings.lang);\r\n    numeral.locale(settings.lang);\r\n\r\n    // load pages\r\n    const pages = await apiClient.getWebPages();\r\n    return this.setState({ pages });\r\n  }\r\n\r\n  private triggerReload() {\r\n    window.clearTimeout(this.reloadTimer);\r\n    this.reloadTimer = window.setTimeout(this.reload, this.reloadWait);\r\n  }\r\n\r\n  private reload() {\r\n    console.log('reload');\r\n    apiClient.clearCache();\r\n    this.init();\r\n  }\r\n\r\n  public renderPage(id: string, style: any) {\r\n    return () => (\r\n      <section className=\"WebPage\" style={style}>\r\n        <WebComponent id={id} />\r\n      </section>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    let content = <Loading text=\"Loading Reactron...\" center={true} />;\r\n\r\n    if (this.state.pages) {\r\n      content = (\r\n        <Router>\r\n          <Switch>\r\n            {this.state.pages.map(item =>\r\n              (<Route key={item.path} path={item.path} exact={item.path === '/'} component={this.renderPage(item.webComponentId, item.style)} />)\r\n            )}\r\n            <Route component={PageNotFound} />\r\n          </Switch>\r\n        </Router>\r\n      );\r\n    }\r\n\r\n    return <section className=\"App\">{content}</section>;\r\n  }\r\n}\r\n","// main entry file for react\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport App from './browser/components/App/App';\r\nimport ErrorBoundary from './browser/components/ErrorBoundary/ErrorBoundary';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <ErrorBoundary><App /></ErrorBoundary>,\r\n  document.getElementById('root') as HTMLElement\r\n);","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";"],"sourceRoot":""}