{"version":3,"sources":["browser/BrowserModuleContext.ts","common/apiRoutes.ts","browser/ApiClient.ts","browser/inernalModuleContext.ts","browser/components/Loading/Loading.tsx","browser/components/RoundButton/RoundButton.tsx","browser/components/PageNotFound/PageNotFound.tsx","browser/internalModule/CarouselLayout/CarouselLayoutDefinition.tsx","browser/internalModule/CarouselLayout/CarouselLayout.tsx","browser/internalModule/GridLayout/GridLayoutDefinition.tsx","browser/internalModule/GridLayout/GridLayout.tsx","browser/internalModule/IFrame/IFrameDefinition.tsx","browser/internalModule/IFrame/IFrame.tsx","browser/internalModule/ListLayout/ListLayoutDefinition.tsx","browser/internalModule/ListLayout/ListLayout.tsx","browser/internalModule/MarkDown/MarkDownDefinition.tsx","browser/internalModule/MarkDown/MarkDown.tsx","browser/internalModule/Notifications/NotificationsDefinition.tsx","browser/internalModule/Notifications/Notifications.tsx","browser/internalModule/index.ts","browser/internalModule/Welcome/WelcomeDefinition.tsx","browser/internalModule/Welcome/Welcome.tsx","browser/ComponentLoader.ts","common/LogWriter.ts","browser/WebComponentContext.tsx","browser/components/ComponentNotFound/ComponentNotFound.tsx","browser/components/ErrorBoundary/ErrorBoundary.tsx","browser/components/WebComponent/WebComponent.tsx","browser/components/App/App.tsx","index.tsx","browser/internalModule/Welcome/logo.svg"],"names":["electron","backendService","topics","Store","settings","ApiRoute","path","method","Object","classCallCheck","this","routes","getServices","getServiceOptions","setServiceOptions","getModules","addModule","deleteModule","rebuildModule","updateModule","checkUpdates","getWebPages","setWebPage","deleteWebPage","getServerInfo","exitApplication","restartApplication","shutdownSystem","rebootSystem","resetApplication","getSettings","setSettings","getWebComponentOptions","setWebComponentOptions","deleteWebComponentOptions","getLogEntries","ApiClient","getAllServices","apiCall","createClass","key","value","_this","keys","forEach","clearCache","route","cache","cacheResponse","arguments","length","undefined","toLocaleLowerCase","call","params","data","Promise","resolve","replace","fetch","inernalModuleContext","instance","moduleApiPath","body","JSON","stringify","headers","Content-Type","then","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","response","text","wrap","_context","prev","next","sent","status","toString","startsWith","abrupt","parse","console","log","Error","stop","_x","apply","apiClient","moduleStoreCache","serviceCache","initSettings","initModuleContext","_ref2","_callee2","_context2","window","require","remote","BackendService","subscribe","topicNames","systemSettingsUpdated","event","BrowserModuleContext","moduleName","moduleStorage","getService","moduleStoreKey","name","escapedModuleName","serviceName","explicitModuleName","serviceKey","serviceManager","get","obj","init","_init","Loading","react","className","classname","center","props","react_fontawesome_index_es","icon","SvgIcons","size","iconSize","spin","React","defaultProps","RoundButton","Link","to","role","children","PageNotFound","location","pathname","RoundButton_RoundButton_RoundButton","carouselLayoutDefinition","component","context","_this2","style","lib","assign","autoPlay","infiniteLoop","showThumbs","showArrows","showStatus","options","items","map","id","renderComponent","description","displayName","type","fields","valueType","defaultValue","minValue","stepSize","maxValue","values","inputControl","interval","isArray","gridLayoutDefinition","GridLayout","possibleConstructorReturn","getPrototypeOf","renderTile","bind","assertThisInitialized","tile","index","objectSpread","tileStyle","gridColumn","col","colspan","gridRow","row","rowspan","content","gridStyle","tiles","width","textOverflow","overflow","iFrameDefinition","src","url","listLayoutDefinition","ListLayout","renderListItem","item","itemStyle","markDownDefinition","react_markdown_default","source","textRows","notificationsDefinition","Notifications","components","Welcome","state","info","setState","ip","logo","alt","SystemJS","System","externalModules","ReactDom","ReactRouterDom","default","numeral","moment","momentTimezone","SvgCore","SolidIcons","RegularIcons","BrandIcons","FontAwesome","reactronInterfaces","moduleExport","register","exports","execute","componentLoader","ComponentLoader","allComponentsLoaded","moduleComponents","reactron","internalComponents","_getModuleComponents","modules","m","find","x","error","registerModuleComponents","_registerModuleComponents","browserFileContent","browserFile","import","Array","t0","_x2","_getAllComponents","_callee3","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_context3","Symbol","iterator","done","return","finish","LogWriter","severity","message","publish","WebComponentContext","_BrowserModuleContext","componentName","renderLoading","react_default","createElement","WebComponent_WebComponent_WebComponent","Loading_Loading_Loading","inherits","WebComponentContextType","createContext","ComponentNotFound","push","join","ErrorBoundary","color","WebComponent","prevProps","loadComponent","allComponentOptions","webComponentOptions","parentId","componentFound","getModuleComponents","componentDefinition","componentContext","componentOptions","ComponentNotFound_ComponentNotFound_ComponentNotFound","Component","contextType","Provider","ErrorBoundary_ErrorBoundary","App","reloadTimer","reloadWait","reload","triggerReload","onKeyDown","subscribeTopics","document","addEventListener","unsubscribeTopics","removeEventListener","e","evtobj","keyCode","ctrlKey","altKey","href","pagesUpdated","componentsUpdated","unsubscribe","locale","lang","pages","clearTimeout","setTimeout","BrowserRouter","Switch","Route","exact","renderPage","webComponentId","ReactDOM","App_App_App","getElementById","module","__webpack_require__","p"],"mappings":"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","file":"static/js/main.50de01a3.chunk.js","sourcesContent":["import { IBackendService, IModuleContext, IPubSub, ISystemSettings, ElectronStore, topicNames } from \"@schirkan/reactron-interfaces\";\r\nimport { apiClient } from \"./ApiClient\";\r\n\r\nlet electron: Electron.AllElectron;\r\nlet backendService: IBackendService;\r\nlet topics: IPubSub | undefined;\r\nlet Store: new (options?: any) => ElectronStore;\r\n\r\nconst moduleStoreCache: { [key: string]: ElectronStore } = {};\r\nconst serviceCache: { [key: string]: any } = {};\r\nlet settings: ISystemSettings;\r\n\r\nexport const initSettings = async () => {\r\n  if (!settings) {\r\n    settings = await apiClient.getSettings();\r\n  }\r\n}\r\n\r\nexport const initModuleContext = async () => {\r\n  // check if env is electron\r\n  if (!electron && (window as any).require) {\r\n    electron = (window as any).require('electron');\r\n    backendService = electron.remote.require('./dist/server/BackendService').BackendService.instance;\r\n    topics = backendService.topics;\r\n    Store = electron.remote.require('electron-store');\r\n\r\n    // on settings change\r\n    topics.subscribe(topicNames.systemSettingsUpdated, (event, data: ISystemSettings) => {\r\n      settings = data;\r\n    });\r\n  }\r\n}\r\n\r\nexport class BrowserModuleContext implements IModuleContext {\r\n  public readonly electron: Electron.AllElectron;\r\n  public readonly backendService: IBackendService;\r\n  public readonly topics: IPubSub;\r\n  public readonly moduleStorage: ElectronStore;\r\n  public readonly moduleApiPath: string;\r\n  public getService: <TService = any>(serviceName: string, moduleName?: string | undefined) => TService | undefined;\r\n  public get settings(): Readonly<ISystemSettings> {\r\n    return settings;\r\n  }\r\n\r\n  constructor(public moduleName: string) {\r\n    this.electron = electron;\r\n    this.backendService = backendService;\r\n    this.topics = topics!;\r\n\r\n    const moduleStoreKey = 'module.' + moduleName;\r\n    if (Store && !moduleStoreCache[moduleStoreKey]) {\r\n      moduleStoreCache[moduleStoreKey] = new Store({ name: 'module.' + moduleName });\r\n    }\r\n    this.moduleStorage = moduleStoreCache[moduleStoreKey];\r\n\r\n    const escapedModuleName = moduleName.replace('/', '@');\r\n    this.moduleApiPath = '/api/modules/' + escapedModuleName;\r\n\r\n    this.getService = <TService>(serviceName: string, explicitModuleName?: string) => {\r\n      if (!this.backendService) {\r\n        console.log('Method getService() is not supported in browser environment.');\r\n        return undefined;\r\n      }\r\n      const serviceKey = (explicitModuleName || moduleName) + '.' + serviceName;\r\n      if (!serviceCache[serviceKey]) {\r\n        serviceCache[serviceKey] = this.backendService.serviceManager.get(explicitModuleName || moduleName, serviceName);\r\n      }\r\n      return serviceCache[serviceKey] as TService | undefined;\r\n    }\r\n  }\r\n}\r\n\r\n","import { ICommandResult, IModuleRepositoryItem, IServerInfo, IServiceRepositoryItem, ISystemSettings, IWebComponentOptions, IWebPageOptions, ILogEntry } from '@schirkan/reactron-interfaces';\r\n\r\nexport class ApiRoute<TParams, TBody, TResponse = void>{\r\n    constructor(public path: string, public method: string) { }\r\n}\r\n\r\nexport const routes = {\r\n    getServices: new ApiRoute<undefined, undefined, IServiceRepositoryItem[]>('/service/', 'get'),\r\n    getServiceOptions: new ApiRoute<{ moduleName: string, serviceName: string }, undefined, object>('/service/:moduleName/:serviceName', 'get'),\r\n    setServiceOptions: new ApiRoute<{ moduleName: string, serviceName: string }, object>('/service/:moduleName/:serviceName', 'post'),\r\n\r\n    getModules: new ApiRoute<undefined, undefined, IModuleRepositoryItem[]>('/modules/', 'get'),\r\n    addModule: new ApiRoute<undefined, { repository: string }, ICommandResult[]>('/modules/', 'post'),\r\n    deleteModule: new ApiRoute<{ moduleName: string }, undefined, ICommandResult[]>('/modules/:moduleName', 'delete'),\r\n    rebuildModule: new ApiRoute<{ moduleName: string }, undefined, ICommandResult[]>('/modules/:moduleName/rebuild', 'post'),\r\n    updateModule: new ApiRoute<{ moduleName: string }, undefined, ICommandResult[]>('/modules/:moduleName/update', 'post'),\r\n    checkUpdates: new ApiRoute<{ moduleName: string }, undefined, ICommandResult[]>('/modules/checkUpdates/update', 'get'),\r\n\r\n    getWebPages: new ApiRoute<undefined, undefined, IWebPageOptions[]>('/pages/', 'get'),\r\n    setWebPage: new ApiRoute<undefined, IWebPageOptions, IWebPageOptions>('/pages/', 'post'),\r\n    deleteWebPage: new ApiRoute<{ id: string }, undefined>('/pages/:id', 'delete'),\r\n\r\n    getServerInfo: new ApiRoute<undefined, undefined, IServerInfo>('/app/', 'get'),\r\n    exitApplication: new ApiRoute<undefined, undefined>('/app/exitApplication', 'post'),\r\n    restartApplication: new ApiRoute<undefined, undefined>('/app/restartApplication', 'post'),\r\n    shutdownSystem: new ApiRoute<undefined, undefined>('/app/shutdownSystem', 'post'),\r\n    rebootSystem: new ApiRoute<undefined, undefined>('/app/restartSystem', 'post'),\r\n    resetApplication: new ApiRoute<undefined, undefined>('/app/resetApplication', 'post'),\r\n\r\n    getSettings: new ApiRoute<undefined, undefined, ISystemSettings>('/settings/', 'get'),\r\n    setSettings: new ApiRoute<undefined, ISystemSettings>('/settings/', 'post'),\r\n\r\n    getWebComponentOptions: new ApiRoute<undefined, undefined, IWebComponentOptions[]>('/components/', 'get'),\r\n    setWebComponentOptions: new ApiRoute<undefined, IWebComponentOptions, IWebComponentOptions>('/components/', 'post'),\r\n    deleteWebComponentOptions: new ApiRoute<{ id: string }, undefined>('/components/:id', 'delete'),\r\n\r\n    getLogEntries: new ApiRoute<{ source?: string }, undefined, ILogEntry[]>('/log/:source', 'get'),\r\n};","import { ApiRoute, routes } from '../common/apiRoutes';\r\nimport inernalModuleContext from './inernalModuleContext';\r\n\r\nexport class ApiClient {\r\n  public getAllServices = apiCall(routes.getServices, true);\r\n  public getServiceOptions = apiCall(routes.getServiceOptions);\r\n  public setServiceOptions = apiCall(routes.setServiceOptions);\r\n\r\n  public getModules = apiCall(routes.getModules, true);\r\n  public addModule = apiCall(routes.addModule);\r\n  public checkUpdates = apiCall(routes.checkUpdates);\r\n  public deleteModule = apiCall(routes.deleteModule);\r\n  public rebuildModule = apiCall(routes.rebuildModule);\r\n  public updateModule = apiCall(routes.updateModule);\r\n\r\n  public getWebPages = apiCall(routes.getWebPages, true);\r\n  public setWebPage = apiCall(routes.setWebPage);\r\n  public deleteWebPage = apiCall(routes.deleteWebPage);\r\n\r\n  public getServerInfo = apiCall(routes.getServerInfo);\r\n  public exitApplication = apiCall(routes.exitApplication);\r\n  public restartApplication = apiCall(routes.restartApplication);\r\n  public shutdownSystem = apiCall(routes.shutdownSystem);\r\n  public rebootSystem = apiCall(routes.rebootSystem);\r\n  public resetApplication = apiCall(routes.resetApplication);\r\n\r\n  public getSettings = apiCall(routes.getSettings, true);\r\n  public setSettings = apiCall(routes.setSettings);\r\n\r\n  public getWebComponentOptions = apiCall(routes.getWebComponentOptions, true);\r\n  public setWebComponentOptions = apiCall(routes.setWebComponentOptions);\r\n  public deleteWebComponentOptions = apiCall(routes.deleteWebComponentOptions);\r\n\r\n  public getLogEntries = apiCall(routes.getLogEntries);\r\n\r\n  public clearCache() {\r\n    Object.keys(this).forEach(key => {\r\n      if (this[key] && this[key].clearCache) {\r\n        this[key].clearCache();\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\ninterface IApiCall<TParams, TBody, TResponse> {\r\n  (params?: TParams, body?: TBody): Promise<TResponse>;\r\n  clearCache: () => void;\r\n}\r\n\r\nconst apiCall = <TParams, TBody, TResponse>(\r\n  route: ApiRoute<TParams, TBody, TResponse>,\r\n  cacheResponse: boolean = false) => {\r\n  let cache: any;\r\n  const method = route.method.toLocaleLowerCase();\r\n\r\n  const call: any = (params: TParams, data: TBody): Promise<TResponse> => {\r\n    if (cacheResponse && cache) {\r\n      return Promise.resolve(cache);\r\n    }\r\n\r\n    let path = route.path;\r\n    // replace params in path\r\n    if (params) {\r\n      Object.keys(params).forEach(key => {\r\n        path = path.replace(':' + key, params[key]);\r\n      });\r\n    }\r\n    return fetch(inernalModuleContext.instance.moduleApiPath + path, {\r\n      method,\r\n      body: data && JSON.stringify(data),\r\n      headers: {\r\n        \"Content-Type\": \"application/json; charset=utf-8\",\r\n      }\r\n    })\r\n      .then(async response => {\r\n        const text = await response.text();\r\n\r\n        if (response.status.toString().startsWith('2')) {\r\n          if (!text) {\r\n            return undefined;\r\n          }\r\n          return JSON.parse(text);\r\n        }\r\n\r\n        console.log(text);\r\n        throw Error(text);\r\n      })\r\n      .then(response => {\r\n        if (cacheResponse) {\r\n          cache = response;\r\n        }\r\n        return response;\r\n      });\r\n  };\r\n\r\n  call.clearCache = () => {\r\n    cache = undefined;\r\n  };\r\n\r\n  return call as IApiCall<TParams, TBody, TResponse>;\r\n};\r\n\r\nexport const apiClient = new ApiClient();","import { BrowserModuleContext, initModuleContext, initSettings } from './BrowserModuleContext';\r\n\r\nconst obj = {\r\n    init: async () => {\r\n        await initModuleContext();\r\n        // internal module\r\n        obj.instance = new BrowserModuleContext('reactron');\r\n        await initSettings();\r\n    },\r\n    instance: undefined as unknown as BrowserModuleContext\r\n};\r\n\r\nexport default obj;","import * as SvgIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport classname from 'classnames';\r\nimport * as React from 'react';\r\nimport { ILoadingProps } from './ILoadingProps';\r\n\r\nimport './Loading.css';\r\n\r\nexport default class Loading extends React.Component<ILoadingProps> {\r\n  public static defaultProps: Partial<ILoadingProps> = {\r\n    iconSize: \"4x\"\r\n  };\r\n\r\n  public render() {\r\n    return (\r\n      <section className={classname('Loading', { 'center': this.props.center })}>\r\n        <FontAwesome.FontAwesomeIcon icon={SvgIcons.faSpinner} size={this.props.iconSize} spin={true} />\r\n        {this.props.text && (\r\n          <div className=\"text\">{this.props.text}</div>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { IRoundButtonProps } from './IRoundButtonProps';\r\nimport './RoundButton.css';\r\n\r\nexport default class RoundButton extends React.Component<IRoundButtonProps> {\r\n  public render() {\r\n    return <Link className=\"RoundButton\" to={this.props.to} role=\"button\">{this.props.children}</Link>;\r\n  }\r\n}\r\n","import * as SvgIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport RoundButton from '../RoundButton/RoundButton';\r\nimport { IPageNotFoundProps } from './IPageNotFoundProps';\r\n\r\nimport './PageNotFound.css'\r\n\r\nexport default class PageNotFound extends React.Component<IPageNotFoundProps> {\r\n  public render() {\r\n    return (\r\n      <div className=\"PageNotFound\">\r\n        <h1><FontAwesome.FontAwesomeIcon icon={SvgIcons.faQuestionCircle} /> 404</h1>\r\n        <h2>No page defined for path: {this.props.location.pathname}</h2>\r\n        <RoundButton to=\"/admin\">\r\n          <FontAwesome.FontAwesomeIcon icon={SvgIcons.faCog} /> Admin\r\n        </RoundButton>\r\n        <RoundButton to=\"/\">\r\n          <FontAwesome.FontAwesomeIcon icon={SvgIcons.faHome} /> Home\r\n        </RoundButton>\r\n      </div >\r\n    );\r\n  }\r\n}","import * as React from 'react';\r\nimport { IReactronComponentDefinition, IInputComponentProps } from \"@schirkan/reactron-interfaces\";\r\nimport CarouselLayout from \"./CarouselLayout\";\r\nimport { CarouselProps } from 'react-responsive-carousel';\r\nimport { ICarouselLayoutOptions } from './ICarouselLayoutOptions';\r\n\r\nexport const carouselLayoutDefinition: IReactronComponentDefinition<ICarouselLayoutOptions> = {\r\n  component: CarouselLayout,\r\n  description: 'Carousel Layout',\r\n  displayName: 'Carousel Layout',\r\n  name: 'CarouselLayout',\r\n  type: 'layout',\r\n  fields: [\r\n    {\r\n      displayName: 'Options', name: 'options', valueType: 'object', fields: [\r\n        { displayName: 'Interval in ms', name: 'interval', valueType: 'number', defaultValue: 5000, minValue: 1000, stepSize: 50 },\r\n        { displayName: 'Transition Time in ms', name: 'transitionTime', valueType: 'number', defaultValue: 500, minValue: 100, stepSize: 50 },\r\n        { displayName: 'Show Indicators', name: 'showIndicators', valueType: 'boolean', defaultValue: true },\r\n        { displayName: 'Show Arrows', name: 'showArrows', valueType: 'boolean', defaultValue: false },\r\n        { displayName: 'Show Status', name: 'showStatus', valueType: 'boolean', defaultValue: false },\r\n        { displayName: 'Center Mode', name: 'centerMode', valueType: 'boolean', defaultValue: false },\r\n        { displayName: 'Center Slide Percentage', name: 'centerSlidePercentage', valueType: 'number', defaultValue: 70, minValue: 1, maxValue: 100, stepSize: 1 },\r\n        { displayName: 'Axis', name: 'axis', valueType: 'boolean', defaultValue: 'horizontal', values: [{ value: 'horizontal', text: 'horizontal' }, { value: 'vertical', text: 'vertical' }] },\r\n      ],\r\n      inputControl: (props: IInputComponentProps<CarouselProps>) => {\r\n        const interval = props.value && props.value.interval;\r\n        return <span>interval {interval} ms</span>;\r\n      }\r\n    },\r\n    { displayName: 'Content', name: 'items', valueType: 'webComponent', isArray: true },\r\n    { displayName: 'Carousel Style', name: 'style', valueType: 'style' },\r\n  ]\r\n};","import * as React from 'react';\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport { ICarouselLayoutOptions } from './ICarouselLayoutOptions';\r\nimport { IReactronComponentContext } from '@schirkan/reactron-interfaces';\r\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\r\n\r\nimport './CarouselLayout.css';\r\n\r\nexport default class CarouselLayout extends React.Component<ICarouselLayoutOptions> {\r\n  public context!: IReactronComponentContext;\r\n\r\n  public render() {\r\n    return (\r\n      <section className=\"CarouselLayout\" style={this.props.style}>\r\n        <Carousel autoPlay={true} infiniteLoop={true} showThumbs={false} showArrows={false} showStatus={false} {...this.props.options}>\r\n          {this.props.items.map(id => this.context.renderComponent({ id }))}\r\n        </Carousel>\r\n      </section>\r\n    );\r\n  }\r\n}","import { IReactronComponentDefinition, IInputComponentProps } from \"@schirkan/reactron-interfaces\";\r\nimport GridLayout from \"./GridLayout\";\r\nimport * as React from 'react';\r\nimport { IGridLayoutTileOptions } from \"./IGridLayoutTileOptions\";\r\n\r\nexport const gridLayoutDefinition: IReactronComponentDefinition = {\r\n  component: GridLayout,\r\n  description: 'Grid Layout',\r\n  displayName: 'Grid Layout',\r\n  name: 'GridLayout',\r\n  type: 'layout',\r\n  fields: [\r\n    { displayName: 'Grid Style', name: 'gridStyle', valueType: 'style' },\r\n    { displayName: 'Tile Style', name: 'tileStyle', valueType: 'style' },\r\n    {\r\n      displayName: 'Grid tiles',\r\n      name: 'tiles',\r\n      valueType: 'object',\r\n      isArray: true,\r\n      fields: [\r\n        { displayName: 'Row', name: 'row', valueType: 'number', defaultValue: 1, stepSize: 1, minValue: 1, maxValue: 20 },\r\n        { displayName: 'Column', name: 'col', valueType: 'number', defaultValue: 1, stepSize: 1, minValue: 1, maxValue: 20 },\r\n        { displayName: 'Row span', name: 'rowspan', valueType: 'number', defaultValue: 1, stepSize: 1, minValue: 1, maxValue: 20 },\r\n        { displayName: 'Column span', name: 'colspan', valueType: 'number', defaultValue: 1, stepSize: 1, minValue: 1, maxValue: 20 },\r\n        { displayName: 'Content', name: 'content', valueType: 'webComponent' },\r\n        { displayName: 'Style', name: 'style', valueType: 'style' }\r\n      ],\r\n      inputControl: (props: IInputComponentProps<IGridLayoutTileOptions>) => {\r\n        const tile = props.value || {};\r\n        const style = { width: '100%', textOverflow: 'ellipsis', overflow: 'hidden' };\r\n        return (<div style={style}>[ {tile.row} | {tile.col} | {tile.content} ]</div>);\r\n      }\r\n    }\r\n  ]\r\n};","import * as React from 'react';\r\nimport { IGridLayoutOptions, IGridLayoutTileOptions } from './IGridLayoutTileOptions';\r\nimport { IReactronComponentContext } from '@schirkan/reactron-interfaces';\r\n\r\nimport './GridLayout.css';\r\n\r\nexport default class GridLayout extends React.Component<IGridLayoutOptions> {\r\n  public context!: IReactronComponentContext;\r\n  \r\n  constructor(props: IGridLayoutOptions) {\r\n    super(props);\r\n\r\n    this.renderTile = this.renderTile.bind(this);\r\n  }\r\n\r\n  private renderTile(tile: IGridLayoutTileOptions, index: number) {\r\n    const style = { ...this.props.tileStyle, ...tile.style };\r\n    style.gridColumn = tile.col.toString();\r\n    if (tile.colspan > 1) {\r\n      style.gridColumn += ' / span ' + tile.colspan;\r\n    }\r\n\r\n    style.gridRow = tile.row.toString();\r\n    if (tile.rowspan > 1) {\r\n      style.gridRow += ' / span ' + tile.rowspan;\r\n    }\r\n    return (\r\n      <div className=\"GridTile\" key={index} style={style}>\r\n        {this.context.renderComponent({ id: tile.content })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <section className=\"GridLayout\" style={this.props.gridStyle}>\r\n        {this.props.tiles.map(this.renderTile)}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport IFrame from \"./IFrame\";\r\n\r\nexport const iFrameDefinition: IReactronComponentDefinition = {\r\n    component: IFrame,\r\n    description: 'IFrame Component',\r\n    displayName: 'IFrame',\r\n    name: 'IFrame',\r\n    fields: [\r\n        { displayName: 'URL', name: 'url', valueType: 'string' }\r\n    ]\r\n};","import * as React from 'react';\r\nimport { IIFrameOptions } from './IIFrameOptions';\r\n\r\nimport './IFrame.css';\r\n\r\nexport default class IFrame extends React.Component<IIFrameOptions> {\r\n  public render() {\r\n    return <iframe className=\"ui-iframe\" src={this.props.url} />;\r\n  }\r\n}\r\n","import { IReactronComponentDefinition, IInputComponentProps } from \"@schirkan/reactron-interfaces\";\r\nimport ListLayout from \"./ListLayout\";\r\nimport * as React from 'react';\r\nimport { IListLayoutItemOptions } from \"./IListLayoutItemOptions\";\r\n\r\nexport const listLayoutDefinition: IReactronComponentDefinition = {\r\n  component: ListLayout,\r\n  description: 'List Layout',\r\n  displayName: 'List Layout',\r\n  name: 'ListLayout',\r\n  type: 'layout',\r\n  fields: [\r\n    { displayName: 'List Style', name: 'listStyle', valueType: 'style' },\r\n    { displayName: 'Item Style', name: 'itemStyle', valueType: 'style' },\r\n    {\r\n      displayName: 'List items',\r\n      name: 'items',\r\n      valueType: 'object',\r\n      isArray: true,\r\n      fields: [\r\n        { displayName: 'Content', name: 'content', valueType: 'webComponent' },\r\n        { displayName: 'Style', name: 'style', valueType: 'style' }\r\n      ],\r\n      inputControl: (props: IInputComponentProps<IListLayoutItemOptions>) => {\r\n        const item = props.value || {};\r\n        const style = { width: '100%', textOverflow: 'ellipsis', overflow: 'hidden' };\r\n        return (<div style={style}>[ {item.content} ]</div>);\r\n      }\r\n    }\r\n  ]\r\n};","import * as React from 'react';\r\nimport { IListLayoutItemOptions } from \"./IListLayoutItemOptions\";\r\nimport { IListLayoutOptions } from \"./IListLayoutOptions\";\r\nimport { IReactronComponentContext } from '@schirkan/reactron-interfaces';\r\n\r\nimport './ListLayout.css';\r\n\r\nexport default class ListLayout extends React.Component<IListLayoutOptions> {\r\n  public context!: IReactronComponentContext;\r\n\r\n  constructor(props: IListLayoutOptions) {\r\n    super(props);\r\n\r\n    this.renderListItem = this.renderListItem.bind(this);\r\n  }\r\n\r\n  private renderListItem(item: IListLayoutItemOptions, index: number) {\r\n    const style = { ...this.props.itemStyle, ...item.style };\r\n\r\n    return (\r\n      <div className=\"ListItem\" key={index} style={style}>\r\n        {this.context.renderComponent({ id: item.content })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <section className=\"ListLayout\">\r\n        {this.props.items.map(this.renderListItem)}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport MarkDown from \"./MarkDown\";\r\n\r\nexport const markDownDefinition: IReactronComponentDefinition = {\r\n  component: MarkDown,\r\n  description: 'MarkDown Component',\r\n  displayName: 'MarkDown',\r\n  name: 'MarkDown',\r\n  fields: [\r\n    { displayName: 'Text', name: 'text', valueType: 'string', textRows: 10 },\r\n    { displayName: 'Style', name: 'style', valueType: 'style' }\r\n  ]\r\n};","import * as React from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport { IMarkDownOptions } from './IMarkDownOptions';\r\n\r\nimport './MarkDown.css';\r\n\r\nexport default class MarkDown extends React.Component<IMarkDownOptions> {\r\n  public render() {\r\n    return (\r\n      <section className=\"MarkDown\" style={this.props.style}>\r\n        <ReactMarkdown source={this.props.text} />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport Notifications from \"./Notifications\";\r\n\r\nexport const notificationsDefinition: IReactronComponentDefinition = {\r\n    component: Notifications,\r\n    description: 'Notifications',\r\n    displayName: 'Notifications',\r\n    name: 'Notifications',\r\n    fields: []\r\n};","import * as React from 'react';\r\n\r\nimport './Notifications.css';\r\n\r\nexport default class Notifications extends React.Component<any, any> {\r\n  constructor(props: any) {\r\n    super(props);\r\n  }\r\n\r\n  public render() {\r\n    return <section className=\"Notifications\">Notifications</section>;\r\n  }\r\n}\r\n","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport { carouselLayoutDefinition } from \"./CarouselLayout/CarouselLayoutDefinition\";\r\nimport { gridLayoutDefinition } from \"./GridLayout/GridLayoutDefinition\";\r\nimport { iFrameDefinition } from \"./IFrame/IFrameDefinition\";\r\nimport { listLayoutDefinition } from \"./ListLayout/ListLayoutDefinition\";\r\nimport { markDownDefinition } from \"./MarkDown/MarkDownDefinition\";\r\nimport { notificationsDefinition } from \"./Notifications/NotificationsDefinition\";\r\nimport { welcomeDefinition } from \"./Welcome/WelcomeDefinition\";\r\n\r\nexport const components: IReactronComponentDefinition[] = [\r\n    listLayoutDefinition,\r\n    carouselLayoutDefinition,\r\n    gridLayoutDefinition,\r\n    welcomeDefinition,\r\n    markDownDefinition,\r\n    notificationsDefinition,\r\n    iFrameDefinition\r\n];","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport Welcome from \"./Welcome\";\r\n\r\nexport const welcomeDefinition: IReactronComponentDefinition = {\r\n    component: Welcome,\r\n    description: 'Welcome Component',\r\n    displayName: 'Welcome',\r\n    name: 'Welcome',\r\n    fields: []\r\n};","import * as SvgIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport { IServerInfo } from '@schirkan/reactron-interfaces';\r\nimport * as React from 'react';\r\nimport { apiClient } from '../../ApiClient';\r\nimport RoundButton from '../../components/RoundButton/RoundButton';\r\nimport logo from './logo.svg';\r\n\r\nimport './Welcome.css';\r\n\r\ninterface IWelcomeState {\r\n  info?: IServerInfo;\r\n}\r\n\r\nexport default class Welcome extends React.Component<any, IWelcomeState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  public componentDidMount() {\r\n    apiClient.getServerInfo().then(info => {\r\n      this.setState({ info });\r\n    });\r\n  }\r\n\r\n  public render() {\r\n    let info;\r\n\r\n    if (this.state.info) {\r\n      info = (<div className=\"info\">\r\n        To edit this page click Admin-Button or visit<br /><br />\r\n        <i>http://{this.state.info.ip}:3000/admin</i>\r\n      </div>);\r\n    }\r\n    return (\r\n      <section className=\"Welcome\">\r\n        <RoundButton to=\"/admin\">\r\n          <FontAwesome.FontAwesomeIcon icon={SvgIcons.faCog} />\r\n          Admin\r\n        </RoundButton>\r\n        <img src={logo} className=\"logo\" alt=\"logo\" />\r\n        <div className=\"title\">Welcome to Reactron</div>\r\n        {info}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import * as SvgCore from '@fortawesome/fontawesome-svg-core';\r\nimport * as BrandIcons from '@fortawesome/free-brands-svg-icons';\r\nimport * as RegularIcons from '@fortawesome/free-regular-svg-icons';\r\nimport * as SolidIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport { IComponentLoader, IModuleRepositoryItem, IReactronComponentDefinition } from '@schirkan/reactron-interfaces';\r\nimport * as reactronInterfaces from '@schirkan/reactron-interfaces';\r\nimport moment from 'moment';\r\nimport momentTimezone from 'moment-timezone';\r\nimport numeral from 'numeral';\r\nimport * as React from 'react';\r\nimport * as ReactDom from 'react-dom';\r\nimport * as ReactRouterDom from 'react-router-dom';\r\nimport { apiClient } from './ApiClient';\r\nimport { components as internalComponents } from './internalModule';\r\n\r\n// tslint:disable:no-string-literal\r\n\r\nconst SystemJS = (window as any).System as SystemJSLoader.System;\r\n\r\nconst externalModules = {};\r\nexternalModules['react'] = React;\r\nexternalModules['react-dom'] = ReactDom;\r\nexternalModules['react-router-dom'] = ReactRouterDom;\r\nexternalModules['numeral'] = { default: numeral };\r\nexternalModules['moment'] = { default: moment };\r\nexternalModules['moment-timezone'] = { default: momentTimezone };\r\nexternalModules['@fortawesome/fontawesome-svg-core'] = SvgCore;\r\nexternalModules['@fortawesome/free-solid-svg-icons'] = SolidIcons;\r\nexternalModules['@fortawesome/free-regular-svg-icons'] = RegularIcons;\r\nexternalModules['@fortawesome/free-brands-svg-icons'] = BrandIcons;\r\nexternalModules['@fortawesome/react-fontawesome'] = FontAwesome;\r\nexternalModules['@schirkan/reactron-interfaces'] = reactronInterfaces;\r\n\r\nif ((window as any).require) {\r\n  externalModules['electron'] = (window as any).require('electron');\r\n}\r\n\r\nObject.keys(externalModules).forEach(key => {\r\n  const moduleExport = externalModules[key];\r\n  SystemJS.register(key, [], exports => ({ execute: () => exports(moduleExport) }));\r\n});\r\n\r\nexport class ComponentLoader implements IComponentLoader {\r\n  private allComponentsLoaded = false;\r\n  private moduleComponents: { [moduleName: string]: IReactronComponentDefinition[] } = {\r\n    'reactron': internalComponents\r\n  };\r\n\r\n  public async getModuleComponents(moduleName: string): Promise<IReactronComponentDefinition[] | undefined> {\r\n    if (!this.moduleComponents[moduleName]) {\r\n      const modules = await apiClient.getModules();\r\n      const m = modules.find(x => x.name === moduleName);\r\n\r\n      if (!m) {\r\n        console.error('Module not found: ' + moduleName);\r\n        return;\r\n      }\r\n\r\n      await this.registerModuleComponents(m);\r\n    }\r\n\r\n    return this.moduleComponents[moduleName];\r\n  }\r\n\r\n  private async registerModuleComponents(m: IModuleRepositoryItem): Promise<void> {\r\n    if (!m.browserFile) {\r\n      console.log('Module has no browserFile: ' + m.name);\r\n      return;\r\n    }\r\n\r\n    if (this.moduleComponents[m.name]) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      console.log(m.browserFile);\r\n\r\n      const browserFileContent = await SystemJS.import('\\\\' + m.browserFile);\r\n      // tslint:disable-next-line:no-string-literal\r\n      const components = browserFileContent['components'];\r\n\r\n      if (components && typeof components === 'object' && Array.isArray(components)) {\r\n        this.moduleComponents[m.name] = components;\r\n      }\r\n      console.log('Components loaded for module: ' + m.name);\r\n    } catch (error) {\r\n      console.error('Error loading components for module: ' + m.name, error);\r\n    }\r\n  }\r\n\r\n  public async getAllComponents(): Promise<{ [moduleName: string]: IReactronComponentDefinition[] }> {\r\n    if (this.allComponentsLoaded) {\r\n      return this.moduleComponents;\r\n    }\r\n    const modules = await apiClient.getModules();\r\n    for (const m of modules) {\r\n      await this.registerModuleComponents(m);\r\n    }\r\n    this.allComponentsLoaded = true;\r\n    return this.moduleComponents;\r\n  }\r\n}\r\n\r\nexport const componentLoader = new ComponentLoader();","import { ILogWriter, IPubSub, topicNames, Severity } from \"@schirkan/reactron-interfaces\";\r\n\r\nexport class LogWriter implements ILogWriter {\r\n  constructor(private topics: IPubSub, public readonly source: string) { }\r\n\r\n  private log(severity: Severity, message: string, data?: any): void {\r\n    this.topics && this.topics.publish(topicNames.log, { source: this.source, severity, message, data });\r\n  }\r\n\r\n  public error(message: string, data?: any): void {\r\n    this.log('error', message, data);\r\n  }\r\n\r\n  public warning(message: string, data?: any): void {\r\n    this.log('warning', message, data);\r\n  }\r\n\r\n  public info(message: string, data?: any): void {\r\n    this.log('information', message, data);\r\n  }\r\n\r\n  public debug(message: string, data?: any): void {\r\n    this.log('debug', message, data);\r\n  }\r\n}","import { SizeProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { IReactronComponentContext, ILogWriter } from '@schirkan/reactron-interfaces';\r\nimport React from 'react';\r\nimport { BrowserModuleContext } from \"./BrowserModuleContext\";\r\nimport { componentLoader } from './ComponentLoader';\r\nimport Loading from \"./components/Loading/Loading\";\r\nimport WebComponent, { IWebComponentProps } from \"./components/WebComponent/WebComponent\";\r\nimport { LogWriter } from '../common/LogWriter';\r\n\r\nexport class WebComponentContext extends BrowserModuleContext implements IReactronComponentContext {\r\n  public renderLoading: (text?: string, iconSize?: SizeProp) => any;\r\n  public renderComponent: (props: IWebComponentProps) => any;\r\n  public readonly componentLoader = componentLoader;\r\n  public readonly log: ILogWriter;\r\n\r\n  constructor(moduleName: string, public readonly componentName: string) {\r\n    super(moduleName);\r\n\r\n    this.renderComponent = (props: IWebComponentProps) => {\r\n      const key = props.id + '.' + props.moduleName + '.' + props.componentName;\r\n      return <WebComponent {...props} key={key} />;\r\n    };\r\n\r\n    this.renderLoading = (text?: string, iconSize?: SizeProp) => {\r\n      return <Loading text={text} iconSize={iconSize} />;\r\n    };\r\n\r\n    this.log = new LogWriter(this.backendService && this.backendService.topics, moduleName + '.' + componentName);\r\n  }\r\n}\r\n\r\nexport const WebComponentContextType = React.createContext<IReactronComponentContext>(new WebComponentContext('', ''));","import * as SvgIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport RoundButton from '../RoundButton/RoundButton';\r\nimport { IComponentNotFoundProps } from './IComponentNotFoundProps';\r\n\r\nimport './ComponentNotFound.css';\r\n\r\nexport default class ComponentNotFound extends React.Component<IComponentNotFoundProps> {\r\n  public static defaultProps: Partial<IComponentNotFoundProps> = {\r\n    iconSize: \"4x\"\r\n  };\r\n\r\n  public render() {\r\n    const text = [];\r\n    if (this.props.id) {\r\n      text.push('Id: ' + this.props.id);\r\n    }\r\n    if (this.props.componentName) {\r\n      text.push('Component: ' + this.props.componentName);\r\n    }\r\n    if (this.props.moduleName) {\r\n      text.push('Module: ' + this.props.moduleName);\r\n    }\r\n\r\n    return (\r\n      <section className=\"ComponentNotFound\">\r\n        <FontAwesome.FontAwesomeIcon icon={SvgIcons.faExclamationTriangle} size={this.props.iconSize} />\r\n        <div className=\"text\">Component not found: {text.join(' | ')}</div>\r\n        <RoundButton to=\"/admin\">\r\n          <FontAwesome.FontAwesomeIcon icon={SvgIcons.faCog} /> Admin\r\n        </RoundButton>\r\n      </section>\r\n    );\r\n  }\r\n}","import * as React from 'react';\r\n\r\ninterface IErrorBoundaryState {\r\n  error: any;\r\n}\r\n\r\nexport default class ErrorBoundary extends React.Component<any, IErrorBoundaryState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = { error: null };\r\n  }\r\n\r\n  public componentDidCatch(error: any, info: any) {\r\n    console.log(error);\r\n    console.log(info);\r\n    this.setState({ error });\r\n  }\r\n\r\n  public render() {\r\n    if (this.state.error) {\r\n      return <span style={{ color: 'red' }}>Something went wrong.</span>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}","import { IExtraWebComponentProps, IReactronComponentContext, IReactronComponentDefinition, IWebComponentOptions } from '@schirkan/reactron-interfaces';\r\nimport classname from 'classnames';\r\nimport * as React from 'react';\r\nimport { apiClient } from '../../ApiClient';\r\nimport { componentLoader } from '../../ComponentLoader';\r\nimport { WebComponentContext } from '../../WebComponentContext';\r\nimport { WebComponentContextType } from '../../WebComponentContext';\r\nimport ComponentNotFound from '../ComponentNotFound/ComponentNotFound';\r\nimport ErrorBoundary from '../ErrorBoundary/ErrorBoundary';\r\nimport Loading from '../Loading/Loading';\r\n\r\nimport './WebComponent.css';\r\n\r\nexport interface IWebComponentProps extends Partial<IWebComponentOptions>, IExtraWebComponentProps {\r\n}\r\n\r\ninterface IWebComponentState {\r\n  componentFound?: boolean;\r\n  componentContext?: IReactronComponentContext;\r\n  componentDefinition?: IReactronComponentDefinition;\r\n  componentOptions?: IWebComponentOptions;\r\n}\r\n\r\nexport default class WebComponent extends React.Component<IWebComponentProps, IWebComponentState> {\r\n  constructor(props: IWebComponentProps) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: IWebComponentProps) {\r\n    if (this.props.id !== prevProps.id ||\r\n      this.props.moduleName !== prevProps.moduleName ||\r\n      this.props.componentName !== prevProps.componentName ||\r\n      this.props.options !== prevProps.options) {\r\n      this.loadComponent();\r\n    }\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this.loadComponent();\r\n  }\r\n\r\n  private async loadComponent() {\r\n    try {\r\n      let webComponentOptions: IWebComponentOptions | undefined;\r\n\r\n      if (this.props.id) {\r\n        // nur mit der ID lesen\r\n        const allComponentOptions = await apiClient.getWebComponentOptions();\r\n        webComponentOptions = allComponentOptions.find(x => x.id === this.props.id);\r\n      } else if (this.props.moduleName && this.props.componentName) {\r\n        webComponentOptions = {\r\n          id: '',\r\n          parentId: '',\r\n          moduleName: this.props.moduleName,\r\n          componentName: this.props.componentName,\r\n          options: this.props.options,\r\n        };\r\n      }\r\n\r\n      if (!webComponentOptions) {\r\n        this.setState({ componentFound: false });\r\n        return;\r\n      }\r\n\r\n      const moduleComponents = await componentLoader.getModuleComponents(webComponentOptions.moduleName);\r\n      if (!moduleComponents) {\r\n        this.setState({ componentFound: false });\r\n        return;\r\n      }\r\n\r\n      const componentName = webComponentOptions.componentName;\r\n      const componentDefinition = moduleComponents.find(x => x.name === componentName);\r\n      if (!componentDefinition || !componentDefinition.component) {\r\n        this.setState({ componentFound: false });\r\n        return;\r\n      }\r\n\r\n      this.setState({\r\n        componentContext: new WebComponentContext(webComponentOptions.moduleName, webComponentOptions.componentName),\r\n        componentDefinition,\r\n        componentOptions: webComponentOptions,\r\n        componentFound: true\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      this.setState({ componentFound: false });\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    let content = <Loading center={true} />;\r\n\r\n    if (this.state.componentFound === false) {\r\n      content = <ComponentNotFound {...this.props} />;\r\n    }\r\n\r\n    if (this.state.componentDefinition && this.state.componentDefinition.component && this.state.componentContext) {\r\n      const Component = this.state.componentDefinition.component as typeof React.Component;\r\n\r\n      // set contextType\r\n      if (!Component.contextType) {\r\n        Component.contextType = WebComponentContextType;\r\n      }\r\n\r\n      const props = this.state.componentOptions && this.state.componentOptions.options || {};\r\n\r\n      // render context and component\r\n      content = (\r\n        <WebComponentContextType.Provider value={this.state.componentContext}>\r\n          <Component {...props} />\r\n        </WebComponentContextType.Provider>\r\n      );\r\n    }\r\n\r\n    const className = classname(\"WebComponent\", this.props.className);\r\n\r\n    return (\r\n      <section className={className} style={this.props.style}>\r\n        <ErrorBoundary>\r\n          {content}\r\n        </ErrorBoundary>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import { IWebPageOptions, topicNames } from '@schirkan/reactron-interfaces';\r\nimport moment from 'moment';\r\nimport numeral from 'numeral';\r\nimport * as React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport inernalModuleContext from '../../inernalModuleContext';\r\nimport { apiClient } from '../../ApiClient';\r\nimport Loading from '../Loading/Loading';\r\nimport PageNotFound from '../PageNotFound/PageNotFound';\r\nimport WebComponent from '../WebComponent/WebComponent';\r\n\r\n// load moment & numeral locales\r\nimport 'moment/min/locales.min';\r\nimport 'numeral/min/locales.min';\r\n\r\nimport './App.css';\r\n\r\nexport interface IAppState {\r\n  pages?: IWebPageOptions[];\r\n}\r\n\r\nexport default class App extends React.Component<any, IAppState> {\r\n  private reloadTimer: number | undefined;\r\n  private reloadWait: number = 2000;\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {};\r\n    this.reload = this.reload.bind(this);\r\n    this.triggerReload = this.triggerReload.bind(this);\r\n    this.onKeyDown = this.onKeyDown.bind(this);\r\n  }\r\n\r\n  public async componentDidMount() {\r\n    await this.init();\r\n    this.subscribeTopics();\r\n    document.addEventListener('keydown', this.onKeyDown);\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    this.unsubscribeTopics();\r\n    document.removeEventListener('keydown', this.onKeyDown);\r\n  }\r\n\r\n  private onKeyDown(e: KeyboardEvent) {\r\n    const evtobj = window.event ? window.event as KeyboardEvent : e;\r\n    if (evtobj.keyCode === 65 && evtobj.ctrlKey && evtobj.altKey) {\r\n      window.location.href = '/admin';\r\n    }\r\n  }\r\n\r\n  private subscribeTopics() {\r\n    // register page/component change event\r\n    if (inernalModuleContext.instance.topics) {\r\n      inernalModuleContext.instance.topics.subscribe(topicNames.pagesUpdated, this.triggerReload);\r\n      inernalModuleContext.instance.topics.subscribe(topicNames.componentsUpdated, this.triggerReload);\r\n      inernalModuleContext.instance.topics.subscribe(topicNames.systemSettingsUpdated, this.triggerReload);\r\n    }\r\n  }\r\n\r\n  private unsubscribeTopics() {\r\n    if (inernalModuleContext.instance.topics) {\r\n      inernalModuleContext.instance.topics.unsubscribe(topicNames.pagesUpdated, this.triggerReload);\r\n      inernalModuleContext.instance.topics.unsubscribe(topicNames.componentsUpdated, this.triggerReload);\r\n      inernalModuleContext.instance.topics.unsubscribe(topicNames.systemSettingsUpdated, this.triggerReload);\r\n    }\r\n  }\r\n\r\n  private async init() {\r\n    // init inernalModuleContext\r\n    await inernalModuleContext.init();\r\n\r\n    // load settings\r\n    moment.locale(inernalModuleContext.instance.settings.lang);\r\n    numeral.locale(inernalModuleContext.instance.settings.lang);\r\n\r\n    // load pages\r\n    const pages = await apiClient.getWebPages();\r\n    return this.setState({ pages });\r\n  }\r\n\r\n  private triggerReload() {\r\n    window.clearTimeout(this.reloadTimer);\r\n    this.reloadTimer = window.setTimeout(this.reload, this.reloadWait);\r\n  }\r\n\r\n  private reload() {\r\n    console.log('reload');\r\n    apiClient.clearCache();\r\n    this.init();\r\n  }\r\n\r\n  public renderPage(id: string, style: any) {\r\n    return () => (\r\n      <section className=\"WebPage\" style={style}>\r\n        <WebComponent id={id} />\r\n      </section>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    let content = <Loading text=\"Loading Reactron...\" center={true} />;\r\n\r\n    if (this.state.pages) {\r\n      content = (\r\n        <Router>\r\n          <Switch>\r\n            {this.state.pages.map(item =>\r\n              (<Route key={item.path} path={item.path} exact={item.path === '/'} component={this.renderPage(item.webComponentId, item.style)} />)\r\n            )}\r\n            <Route component={PageNotFound} />\r\n          </Switch>\r\n        </Router>\r\n      );\r\n    }\r\n\r\n    return <section className=\"App\">{content}</section>;\r\n  }\r\n}\r\n","// main entry file for react\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport App from './browser/components/App/App';\r\nimport ErrorBoundary from './browser/components/ErrorBoundary/ErrorBoundary';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <ErrorBoundary><App /></ErrorBoundary>,\r\n  document.getElementById('root') as HTMLElement\r\n);","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";"],"sourceRoot":""}