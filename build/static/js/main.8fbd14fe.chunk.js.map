{"version":3,"sources":["browser/BrowserModuleContext.ts","browser/RpcClient.ts","common/rpc.ts","browser/ReactronServicesFrontend.ts","browser/internalModule/CarouselLayout/CarouselLayoutDefinition.tsx","browser/internalModule/CarouselLayout/CarouselLayout.tsx","browser/internalModule/GridLayout/GridLayoutDefinition.tsx","browser/internalModule/GridLayout/GridLayout.tsx","browser/internalModule/IFrame/IFrameDefinition.tsx","browser/internalModule/IFrame/IFrame.tsx","browser/internalModule/ListLayout/ListLayoutDefinition.tsx","browser/internalModule/ListLayout/ListLayout.tsx","browser/internalModule/MarkDown/MarkDownDefinition.tsx","browser/internalModule/MarkDown/MarkDown.tsx","browser/internalModule/Notifications/NotificationsDefinition.tsx","browser/internalModule/Notifications/Notifications.tsx","browser/components/RoundButton/RoundButton.tsx","browser/internalModule/index.ts","browser/internalModule/Welcome/WelcomeDefinition.tsx","browser/internalModule/Welcome/Welcome.tsx","browser/ComponentLoader.ts","browser/components/Loading/Loading.tsx","browser/components/PageNotFound/PageNotFound.tsx","common/LogWriter.ts","browser/WebComponentContext.tsx","browser/components/ComponentNotFound/ComponentNotFound.tsx","browser/components/ErrorBoundary/ErrorBoundary.tsx","browser/components/WebComponent/WebComponent.tsx","browser/components/App/App.tsx","index.tsx","browser/internalModule/Welcome/logo.svg"],"names":["electron","settings","Store","cache","getOrCreate","key","creator","now","Date","validCacheTime","timestamp","console","log","result","callServiceMethod","data","a","async","id","moduleName","serviceName","methodName","urlId","replace","url","BrowserModuleContext","inernalModuleContext","moduleApiPath","options","method","body","JSON","stringify","headers","text","undefined","fetch","response","status","toString","startsWith","parse","error","Error","args","message","createRemoteService","Proxy","get","target","prop","request","services","moduleController","appController","logController","serviceController","webComponentController","webPageController","_modulesCache","_settingsCache","_servicesCache","_serviceOptionsCache","_pagesCache","_componentsCache","modules","getAll","add","repository","remove","update","updateAll","checkUpdates","this","application","getServerInfo","exitApplication","restartApplication","shutdownSystem","rebootSystem","resetApplication","getSettings","setSettings","getLogEntries","getAllServices","getServiceOptions","setServiceOptions","components","createOrUpdate","delete","pages","topics","clearAllSubscriptions","once","publish","subscribe","unsubscribe","escapedModuleName","explicitModuleName","serviceKey","serviceCache","Promise","resolve","moduleStoreKey","moduleStoreCache","name","window","require","backendService","remote","BackendService","instance","topicNames","systemSettingsUpdated","event","carouselLayoutDefinition","component","context","className","style","props","autoPlay","infiniteLoop","showThumbs","showArrows","showStatus","items","map","renderComponent","React","description","displayName","type","fields","valueType","defaultValue","minValue","stepSize","maxValue","values","value","inputControl","interval","isArray","gridLayoutDefinition","renderTile","bind","tile","index","tileStyle","gridColumn","col","colspan","gridRow","row","rowspan","content","gridStyle","tiles","definition","getComponentDefinition","componentTitle","width","textOverflow","overflow","iFrameDefinition","src","listLayoutDefinition","renderListItem","item","itemStyle","listStyle","markDownDefinition","source","textRows","notificationsDefinition","RoundButton","to","role","children","state","then","info","setState","port","location","ip","icon","SvgIcons","logo","alt","SystemJS","System","externalModules","default","ReactDom","ReactRouterDom","numeral","moment","momentTimezone","SvgCore","SolidIcons","RegularIcons","BrandIcons","FontAwesome","reactronInterfaces","Object","keys","forEach","moduleExport","register","exports","execute","componentLoader","allComponentsLoaded","moduleComponents","internalComponents","m","find","x","registerModuleComponents","browserFile","import","browserFileContent","Array","tasks","all","Loading","classname","center","size","iconSize","spin","defaultProps","PageNotFound","pathname","LogWriter","severity","prepareData","stack","WebComponentContext","renderLoading","componentName","logSource","WebComponentContextType","createContext","parentId","ComponentNotFound","push","ErrorBoundary","color","WebComponent","prevProps","loadComponent","newState","componentFound","allComponentOptions","componentOptions","getModuleComponents","componentDefinition","componentContext","Component","contextType","Provider","App","reloadTimer","reloadWait","reload","triggerReload","onKeyDown","init","subscribeTopics","document","addEventListener","unsubscribeTopics","removeEventListener","e","evtobj","keyCode","ctrlKey","altKey","href","pagesUpdated","componentsUpdated","locale","lang","getAllComponents","clearTimeout","setTimeout","clearCache","path","exact","renderPage","webComponentId","ReactDOM","getElementById","module"],"mappings":"6UAIIA,EACAC,EAQAC,E,6ICNEC,EAAuC,GAGvCC,EAAc,SAACC,EAAaC,GAChC,IAAMC,EAAMC,KAAKD,MACXE,EAAiBF,EAJH,IAmBpB,OAZIJ,EAAME,IAAQF,EAAME,GAAKK,UAAYD,UAC/BN,EAAME,GAGXF,EAAME,GAMTM,QAAQC,IAAI,gBAAiBP,GAL7BF,EAAME,GAAO,CACXK,UAAWH,EACXM,OAAQP,KAKLH,EAAME,GAAKQ,QAGdC,EAAoB,SAAOC,GAAP,6BAAAC,EAAAC,OAAA,uDAClBC,EAAKH,EAAKI,WAAa,IAAMJ,EAAKK,YAAc,IAAML,EAAKM,WAC3DC,EAAQJ,EAAGK,QAAQ,IAAK,KACxBC,EAAMC,EAAqBC,qBAAqBC,cCrBjC,gBDqBiEL,EAChFM,EAAuB,CAC3BC,OAAQ,OACRC,KAAMf,GAAQgB,KAAKC,UAAUjB,GAC7BkB,QAAS,CAAE,eAAgB,oCAGzBC,OAA2BC,EAC3BtB,OAAmCsB,EAXf,oBAAAnB,EAAA,MAeCoB,MAAMZ,EAAKI,IAfZ,cAehBS,EAfgB,mBAAArB,EAAA,MAgBTqB,EAASH,QAhBA,QAgBtBA,EAhBsB,OAiBlBG,EAASC,OAAOC,WAAWC,WAAW,MACxC3B,EAASqB,EAAOH,KAAKU,MAAMP,QAAQC,IACrBtB,EAAO6B,QACnBA,EAAQ,IAAIC,MAAM9B,EAAO6B,QAG3BA,EAAQ,IAAIC,MAAMT,GAvBE,kDA0BtBQ,EAAK,KA1BiB,YA6BpBA,EA7BoB,uBA8BlB7B,EACFF,QAAQ+B,MAAM,OAASxB,EAAI,CAAE0B,KAAM7B,EAAK6B,KAAM/B,WAE9CF,QAAQ+B,MAAM,OAASxB,EAAI,CAAE0B,KAAM7B,EAAK6B,KAAM/B,OAAQqB,EAAMQ,MAAOA,GAASA,EAAMG,SAAWH,IAEzFA,EAnCgB,eAqCtB/B,QAAQC,IAAI,OAASM,EAAI,CAAE0B,KAAM7B,EAAK6B,KAAM/B,WArCtB,kBAsCfA,GAAUA,EAAOA,QAtCF,0DA0CbiC,EAAsB,SAAW1B,EAAqBD,GAajE,OAZc,IAAI4B,MAAM,GAAI,CAC1BC,IAAK,SAACC,EAAQC,GACZ,MAAa,SAATA,EACK,KAGF,WAAqB,IAAD,uBAAhBN,EAAgB,yBAAhBA,EAAgB,gBACzB,IAAMO,EAAuB,CAAE/B,cAAaD,aAAYE,WAAY6B,EAAMN,QAC1E,OAAOxC,EAAY2B,KAAKC,UAAUmB,IAAU,kBAAMrC,EAAkBqC,WEiC/DC,EAAqC,IA/GlD,4DACUC,iBAAmBP,EAAuC,mBAAoB,YADxF,KAEUQ,cAAgBR,EAAoC,gBAAiB,YAF/E,KAGUS,cAAgBT,EAAoC,gBAAiB,YAH/E,KAIUU,kBAAoBV,EAAwC,oBAAqB,YAJ3F,KAKUW,uBAAyBX,EAA6C,yBAA0B,YAL1G,KAMUY,kBAAoBZ,EAAwC,oBAAqB,YAN3F,KAQUa,mBARV,OASUC,oBATV,OAUUC,oBAVV,OAWUC,qBAA+C,GAXzD,KAYUC,iBAZV,OAaUC,sBAbV,OAwBkBC,QAA6B,CAC3CC,OAAQ,WACN,OAAO,EAAKP,gBAAkB,EAAKA,cAAgB,EAAKN,iBAAiBa,WAE3EC,IAAK,SAACC,GAEJ,cADO,EAAKT,cACL,EAAKN,iBAAiBc,IAAIC,IAEnCC,OAAQ,SAAClD,GAEP,cADO,EAAKwC,cACL,EAAKN,iBAAiBgB,OAAOlD,IAEtCmD,OAAQ,SAACnD,GAEP,cADO,EAAKwC,cACL,EAAKN,iBAAiBiB,OAAOnD,IAEtCoD,UAAW,WAET,cADO,EAAKZ,cACL,EAAKN,iBAAiBkB,aAE/BC,aAAcC,KAAKpB,iBAAiBmB,cA5CxC,KA+CkBE,YAA8B,CAC5CC,cAAeF,KAAKnB,cAAcqB,cAClCC,gBAAiBH,KAAKnB,cAAcsB,gBACpCC,mBAAoBJ,KAAKnB,cAAcuB,mBACvCC,eAAgBL,KAAKnB,cAAcwB,eACnCC,aAAcN,KAAKnB,cAAcyB,aACjCC,iBAAkBP,KAAKnB,cAAc0B,iBACrCC,YAAa,WACX,OAAO,EAAKrB,iBAAmB,EAAKA,eAAiB,EAAKN,cAAc2B,gBAE1EC,YAAa,SAACjF,GAEZ,OADA,EAAK2D,eAAiB3D,EACf,EAAKqD,cAAc4B,YAAYjF,KA3D5C,KA+DkBW,IAAsB,CACpCuE,cAAeV,KAAKlB,cAAc4B,eAhEtC,KAmEkB/B,SAA+B,CAC7CgC,eAAgB,WACd,OAAO,EAAKvB,iBAAmB,EAAKA,eAAiB,EAAKL,kBAAkB4B,mBAE9EC,kBAAmB,SAAClE,EAAoBC,GACtC,IAAMf,EAAMc,EAAa,IAAMC,EAC/B,OAAO,EAAK0C,qBAAqBzD,KAAS,EAAKyD,qBAAqBzD,GAAO,EAAKmD,kBAAkB6B,kBAAkBlE,EAAYC,KAElIkE,kBAAmB,SAACnE,EAAoBC,EAAqBQ,GAC3D,IAAMvB,EAAMc,EAAa,IAAMC,EAE/B,OADA,EAAK0C,qBAAqBzD,GAAOuB,EAC1B,EAAK4B,kBAAkB8B,kBAAkBnE,EAAYC,EAAaQ,KA9E/E,KAkFkB2D,WAAsC,CACpDrB,OAAQ,WACN,OAAO,EAAKF,mBAAqB,EAAKA,iBAAmB,EAAKP,uBAAuBS,WAEvFsB,eAAgB,SAAC5D,GAEf,cADO,EAAKoC,iBACL,EAAKP,uBAAuB+B,eAAe5D,IAEpD6D,OAAQ,SAACvE,GAEP,cADO,EAAK8C,iBACL,EAAKP,uBAAuBgC,OAAOvE,KA5FhD,KAgGkBwE,MAA4B,CAC1CxB,OAAQ,WACN,OAAO,EAAKH,cAAgB,EAAKA,YAAc,EAAKL,kBAAkBQ,WAExEsB,eAAgB,SAAC5D,GAEf,cADO,EAAKmC,YACL,EAAKL,kBAAkB8B,eAAe5D,IAE/C6D,OAAQ,SAACvE,GAEP,cADO,EAAK6C,YACL,EAAKL,kBAAkB+B,OAAOvE,KA1G3C,gEAgBWuD,KAAKd,qBACLc,KAAKb,sBACLa,KAAKZ,eACZY,KAAKX,qBAAuB,UACrBW,KAAKV,mBACLU,KAAKT,qBArBhB,MHGI2B,EAAkB,CACpBC,sBAAuB,aACvBC,KAAM,aACNC,QAAS,aACTC,UAAW,aACXC,YAAa,cAIFvE,EAAb,WAKE,WAAmBN,GAAqB,yBAArBA,aAAoB,KAKvBiC,SAAWA,EALY,KAMvBzB,mBANuB,EACrC,IAAMsE,GAAqB9E,GAAc,IAAII,QAAQ,IAAK,KAC1DkD,KAAK9C,cAAgB,QAAUsE,EAPnC,uDAwB0C7E,EAAqB8E,GAxB/D,iFAyBU/E,EAAa+E,GAAsBzB,KAAKtD,WACxCgF,EAAa/E,EAAc,IAAMD,EAClCM,EAAqB2E,aAAaD,KACrC1E,EAAqB2E,aAAaD,GAAcrD,EAA8B1B,EAAaD,IA5BjG,kBA8BWkF,QAAQC,QAAQ7E,EAAqB2E,aAAaD,KA9B7D,gFAYgD,OAAOnG,IAZvD,6BAaiC,OAAO2F,IAbxC,+BAcqD,OAAO1F,IAd5D,oCAiBI,IAAMsG,EAAiB,UAAY9B,KAAKtD,WAIxC,OAHIjB,IAAUuB,EAAqB+E,iBAAiBD,KAClD9E,EAAqB+E,iBAAiBD,GAAkB,IAAIrG,EAAM,CAAEuG,KAAMF,KAErE9E,EAAqB+E,iBAAiBD,MArBjD,0GAmCSvG,GAAa0G,OAAeC,UAC/B3G,EAAY0G,OAAeC,QAAQ,YAC7BC,EAAiB5G,EAAS6G,OAAOF,QAAQ,gCAAgCG,eAAeC,SAC9FpB,EAASiB,EAAejB,OACxBzF,EAAQF,EAAS6G,OAAOF,QAAQ,kBAGhChB,EAAOI,UAAUiB,aAAWC,uBAAuB,SAACC,EAAqBnG,GACvEd,EAAWc,MAKfU,EAAqBC,qBAAuB,IAAID,EAAqB,YAGhExB,EAnDT,0CAoDuBmD,EAASsB,YAAYO,eApD5C,OAoDMhF,EApDN,qDAAawB,EACGC,0B,EADHD,EAEI+E,iBAAqD,GAFzD/E,EAGI2E,aAAuC,G,4EIZ3Ce,G,YAAiF,CAC5FC,U,2MCEOC,a,0EAEU,IAAD,OACd,OACE,2BAASC,UAAU,iBAAiBC,MAAO9C,KAAK+C,MAAMD,OACpD,gBAAC,WAAD,eAAUE,UAAU,EAAMC,cAAc,EAAMC,YAAY,EAAOC,YAAY,EAAOC,YAAY,GAAWpD,KAAK+C,MAAM5F,SACnH6C,KAAK+C,MAAMM,MAAMC,KAAI,SAAA7G,GAAE,OAAI,EAAKmG,QAAQW,gBAAgB,CAAE9G,gB,GAPzB+G,aDA1CC,YAAa,kBACbC,YAAa,kBACb1B,KAAM,iBACN2B,KAAM,SACNC,OAAQ,CACN,CACEF,YAAa,UAAW1B,KAAM,UAAW6B,UAAW,SAAUD,OAAQ,CACpE,CAAEF,YAAa,iBAAkB1B,KAAM,WAAY6B,UAAW,SAAUC,aAAc,IAAMC,SAAU,IAAMC,SAAU,IACtH,CAAEN,YAAa,wBAAyB1B,KAAM,iBAAkB6B,UAAW,SAAUC,aAAc,IAAKC,SAAU,IAAKC,SAAU,IACjI,CAAEN,YAAa,kBAAmB1B,KAAM,iBAAkB6B,UAAW,UAAWC,cAAc,GAC9F,CAAEJ,YAAa,cAAe1B,KAAM,aAAc6B,UAAW,UAAWC,cAAc,GACtF,CAAEJ,YAAa,cAAe1B,KAAM,aAAc6B,UAAW,UAAWC,cAAc,GACtF,CAAEJ,YAAa,cAAe1B,KAAM,aAAc6B,UAAW,UAAWC,cAAc,GACtF,CAAEJ,YAAa,0BAA2B1B,KAAM,wBAAyB6B,UAAW,SAAUC,aAAc,GAAIC,SAAU,EAAGE,SAAU,IAAKD,SAAU,GACtJ,CAAEN,YAAa,OAAQ1B,KAAM,OAAQ6B,UAAW,UAAWC,aAAc,aAAcI,OAAQ,CAAC,CAAEC,MAAO,aAAc1G,KAAM,cAAgB,CAAE0G,MAAO,WAAY1G,KAAM,eAE1K2G,aAAc,SAACrB,GACb,IAAMsB,EAAWtB,EAAMoB,OAASpB,EAAMoB,MAAME,SAC5C,OAAO,wCAAgBA,EAAhB,SAGX,CAAEX,YAAa,UAAW1B,KAAM,QAAS6B,UAAW,eAAgBS,SAAS,GAC7E,CAAEZ,YAAa,iBAAkB1B,KAAM,QAAS6B,UAAW,YEzBlDU,G,MAAqD,CAChE5B,U,YCGA,WAAYI,GAA4B,IAAD,8BACrC,4CAAMA,KAHDH,aAEgC,EAGrC,EAAK4B,WAAa,EAAKA,WAAWC,KAAhB,gBAHmB,E,wEAMpBC,EAA8BC,GAC/C,IAAM7B,EAAK,eAAQ9C,KAAK+C,MAAM6B,UAAnB,GAAiCF,EAAK5B,OAUjD,OATAA,EAAM+B,WAAaH,EAAKI,IAAIhH,WACxB4G,EAAKK,QAAU,IACjBjC,EAAM+B,YAAc,WAAaH,EAAKK,SAGxCjC,EAAMkC,QAAUN,EAAKO,IAAInH,WACrB4G,EAAKQ,QAAU,IACjBpC,EAAMkC,SAAW,WAAaN,EAAKQ,SAGnC,uBAAKrC,UAAU,WAAWjH,IAAK+I,EAAO7B,MAAOA,GAC1C9C,KAAK4C,QAAQW,gBAAgB,CAAE9G,GAAIiI,EAAKS,a,+BAM7C,OACE,2BAAStC,UAAU,aAAaC,MAAO9C,KAAK+C,MAAMqC,WAC/CpF,KAAK+C,MAAMsC,MAAM/B,IAAItD,KAAKwE,iB,GA9BKhB,aDCtCC,YAAa,cACbC,YAAa,cACb1B,KAAM,aACN2B,KAAM,SACNC,OAAQ,CACN,CAAEF,YAAa,aAAc1B,KAAM,YAAa6B,UAAW,SAC3D,CAAEH,YAAa,aAAc1B,KAAM,YAAa6B,UAAW,SAC3D,CACEH,YAAa,aACb1B,KAAM,QACN6B,UAAW,SACXS,SAAS,EACTV,OAAQ,CACN,CAAEF,YAAa,MAAO1B,KAAM,MAAO6B,UAAW,SAAUC,aAAc,EAAGE,SAAU,EAAGD,SAAU,EAAGE,SAAU,IAC7G,CAAEP,YAAa,SAAU1B,KAAM,MAAO6B,UAAW,SAAUC,aAAc,EAAGE,SAAU,EAAGD,SAAU,EAAGE,SAAU,IAChH,CAAEP,YAAa,WAAY1B,KAAM,UAAW6B,UAAW,SAAUC,aAAc,EAAGE,SAAU,EAAGD,SAAU,EAAGE,SAAU,IACtH,CAAEP,YAAa,cAAe1B,KAAM,UAAW6B,UAAW,SAAUC,aAAc,EAAGE,SAAU,EAAGD,SAAU,EAAGE,SAAU,IACzH,CAAEP,YAAa,UAAW1B,KAAM,UAAW6B,UAAW,gBACtD,CAAEH,YAAa,QAAS1B,KAAM,QAAS6B,UAAW,UAEpDO,aAAc,SAACrB,GACb,IAAM2B,EAAO3B,EAAMoB,OAAS,GAEtBmB,EAAavC,EAAMwC,uBAAuBb,EAAKS,SAC/CK,EAAiBF,GAAcA,EAAW5B,YAChD,OAAO,uBAAKZ,MAHE,CAAE2C,MAAO,OAAQC,aAAc,WAAYC,SAAU,WAG5D,KAAsBjB,EAAKO,IAA3B,MAAmCP,EAAKI,IAAxC,MAAgDU,EAAhD,WE7BFI,G,MAAiD,CAC1DjD,U,iLCGA,OAAO,0BAAQE,UAAU,YAAYgD,IAAK7F,KAAK+C,MAAMhG,U,GAFrByG,aDAhCC,YAAa,mBACbC,YAAa,SACb1B,KAAM,SACN4B,OAAQ,CACJ,CAAEF,YAAa,MAAO1B,KAAM,MAAO6B,UAAW,aELzCiC,G,MAAqD,CAChEnD,U,YCKA,WAAYI,GAA4B,IAAD,8BACrC,4CAAMA,KAHDH,aAEgC,EAGrC,EAAKmD,eAAiB,EAAKA,eAAetB,KAApB,gBAHe,E,4EAMhBuB,EAA8BrB,GACnD,IAAM7B,EAAK,eAAQ9C,KAAK+C,MAAMkD,UAAnB,GAAiCD,EAAKlD,OAEjD,OACE,uBAAKD,UAAU,WAAWjH,IAAK+I,EAAO7B,MAAOA,GAC1C9C,KAAK4C,QAAQW,gBAAgB,CAAE9G,GAAIuJ,EAAKb,a,+BAM7C,OACE,2BAAStC,UAAU,aAAaC,MAAO9C,KAAK+C,MAAMmD,WAC/ClG,KAAK+C,MAAMM,MAAMC,IAAItD,KAAK+F,qB,GAtBKvC,aDDtCC,YAAa,cACbC,YAAa,cACb1B,KAAM,aACN2B,KAAM,SACNC,OAAQ,CACN,CAAEF,YAAa,aAAc1B,KAAM,YAAa6B,UAAW,SAC3D,CAAEH,YAAa,aAAc1B,KAAM,YAAa6B,UAAW,SAC3D,CACEH,YAAa,aACb1B,KAAM,QACN6B,UAAW,SACXS,SAAS,EACTV,OAAQ,CACN,CAAEF,YAAa,UAAW1B,KAAM,UAAW6B,UAAW,gBACtD,CAAEH,YAAa,QAAS1B,KAAM,QAAS6B,UAAW,UAEpDO,aAAc,SAACrB,GACb,IAAMiD,EAAOjD,EAAMoB,OAAS,GACtBmB,EAAavC,EAAMwC,uBAAuBS,EAAKb,SACrD,OAAOG,GAAcA,EAAW5B,aAAe,U,iBEtB1CyC,G,OAAmD,CAC9DxD,U,iLCIE,OACE,2BAASE,UAAU,WAAWC,MAAO9C,KAAK+C,MAAMD,OAC9C,gBAAC,IAAD,CAAesD,OAAQpG,KAAK+C,MAAMtF,Y,GAJJ+F,aDDpCC,YAAa,qBACbC,YAAa,WACb1B,KAAM,WACN4B,OAAQ,CACN,CAAEF,YAAa,OAAQ1B,KAAM,OAAQ6B,UAAW,SAAUwC,SAAU,IACpE,CAAE3C,YAAa,QAAS1B,KAAM,QAAS6B,UAAW,YEPzCyC,G,OAAwD,CACjE3D,U,YCCF,WAAYI,GAAa,qEACjBA,I,sEAIN,OAAO,2BAASF,UAAU,iBAAnB,qB,GANgCW,aDCvCC,YAAa,gBACbC,YAAa,gBACb1B,KAAM,gBACN4B,OAAQ,KECS2C,G,wLAEjB,OAAO,gBAAC,OAAD,CAAM1D,UAAU,cAAc2D,GAAIxG,KAAK+C,MAAMyD,GAAIC,KAAK,UAAUzG,KAAK+C,MAAM2D,c,GAF7ClD,c,iBCA5B1C,G,OAA6C,CACtDgF,EACApD,EACA6B,ECT2D,CAC3D5B,U,YCWF,WAAYI,GAAa,IAAD,8BACtB,4CAAMA,KACD4D,MAAQ,GAFS,E,iFAKI,IAAD,OACzBhI,EAASsB,YAAYC,gBAAgB0G,MAAK,SAAAC,GACxC,EAAKC,SAAS,CAAED,c,+BAKlB,IAAIA,EAEJ,GAAI7G,KAAK2G,MAAME,KAAM,CACnB,IAAME,EAAgC,OAAzB9E,OAAO+E,SAASD,KAAgB,GAAK,IAAM9E,OAAO+E,SAASD,KACxEF,EAAQ,uBAAKhE,UAAU,QAAf,gDACuC,2BAAM,2BACnD,mCAAW7C,KAAK2G,MAAME,KAAKI,GAAIF,EAA/B,WAGJ,OACE,2BAASlE,UAAU,WACjB,gBAAC,EAAD,CAAa2D,GAAG,UACd,gBAAC,kBAAD,CAA6BU,KAAMC,UADrC,SAIA,uBAAKtB,IAAKuB,IAAMvE,UAAU,OAAOwE,IAAI,SACrC,uBAAKxE,UAAU,SAAf,uBACCgE,O,GA9B4BrD,aDTjCC,YAAa,oBACbC,YAAa,UACb1B,KAAM,UACN4B,OAAQ,IDMRuC,EACAG,EACAV,IGEE0B,EAAYrF,OAAesF,OAE3BC,EAAkB,GAExBA,EAAe,MAAf,aAA6BC,QAASjE,GAAUA,GAChDgE,EAAgB,aAAeE,EAC/BF,EAAgB,oBAAsBG,EACtCH,EAAe,QAAc,CAAEC,QAASG,KACxCJ,EAAe,OAAa,CAAEC,QAASI,KACvCL,EAAgB,mBAAqB,CAAEC,QAASK,KAChDN,EAAgB,qCAAuCO,EACvDP,EAAgB,qCAAuCQ,EACvDR,EAAgB,uCAAyCS,EACzDT,EAAgB,sCAAwCU,EACxDV,EAAgB,kCAAoCW,EACpDX,EAAgB,iCAAmCY,EAE9CnG,OAAeC,UAClBsF,EAAe,SAAgBvF,OAAeC,QAAQ,aAGxDmG,OAAOC,KAAKd,GAAiBe,SAAQ,SAAA3M,GACnC,IAAM4M,EAAehB,EAAgB5L,GACrC0L,EAASmB,SAAS7M,EAAK,IAAI,SAAA8M,GAAO,MAAK,CAAEC,QAAS,kBAAMD,EAAQF,WAG3D,IAkEMI,GAAkB,IAlE/B,iDACUC,qBAAsB,EADhC,KAEUC,iBAA6E,CACnF,SAAYC,GAHhB,gEAMmCrM,GANnC,6EAOSsD,KAAK8I,iBAAiBpM,GAP/B,2CAQ4BiC,EAASa,QAAQC,UAR7C,UAQYD,EARZ,OASYwJ,EAAIxJ,EAAQyJ,MAAK,SAAAC,GAAC,OAAIA,EAAElH,OAAStF,KAT7C,uBAYQR,QAAQ+B,MAAM,qBAAuBvB,GAZ7C,qDAgBYsD,KAAKmJ,yBAAyBH,IAhB1C,iCAmBWhJ,KAAK8I,iBAAiBpM,IAnBjC,iGAsByCsM,GAtBzC,6EAuBSA,EAAEI,YAvBX,uBAwBMlN,QAAQC,IAAI,8BAAgC6M,EAAEhH,MAxBpD,8BA4BQhC,KAAK8I,iBAAiBE,EAAEhH,MA5BhC,iEAiCM9F,QAAQC,IAAI6M,EAAEI,aAjCpB,mBAmCuC9B,EAAS+B,OAAO,KAAOL,EAAEI,cAnChE,OAmCYE,EAnCZ,QAqCYxI,EAAawI,EAAkB,aAEG,kBAAfxI,GAA2ByI,MAAMjF,QAAQxD,KAChEd,KAAK8I,iBAAiBE,EAAEhH,MAAQlB,GAElC5E,QAAQC,IAAI,iCAAmC6M,EAAEhH,MA1CvD,kDA4CM9F,QAAQ+B,MAAM,wCAA0C+K,EAAEhH,KAA1D,MA5CN,yLAiDQhC,KAAK6I,oBAjDb,yCAkDa7I,KAAK8I,kBAlDlB,iCAqD0BnK,EAASa,QAAQC,UArD3C,cAqDUD,EArDV,OAuDUgK,EAAQhK,EAAQ8D,KAAI,SAAA0F,GAAC,OAAI,EAAKG,yBAAyBH,MAvDjE,mBAwDUpH,QAAQ6H,IAAID,IAxDtB,cA6DIxJ,KAAK6I,qBAAsB,EA7D/B,kBA8DW7I,KAAK8I,kBA9DhB,0D,oBC7BqBY,I,wLAMjB,OACE,2BAAS7G,UAAW8G,KAAU,UAAW,CAAE,OAAU3J,KAAK+C,MAAM6G,SAAW9G,MAAO9C,KAAK+C,MAAMD,OAC3F,gBAAC,kBAAD,CAA6BoE,KAAMC,YAAoB0C,KAAM7J,KAAK+C,MAAM+G,SAAUC,MAAM,IACvF/J,KAAK+C,MAAMtF,MAAS,uBAAKoF,UAAU,QAAQ7C,KAAK+C,MAAMtF,W,GAT1B+F,cAAhBkG,GACLM,aAAuC,CACnDF,SAAU,M,WCNOG,G,iLAEjB,OACE,uBAAKpH,UAAU,gBACb,0BAAI,gBAAC,kBAAD,CAA6BqE,KAAMC,qBAAvC,QACA,uDAA+BnH,KAAK+C,MAAMiE,SAASkD,UACnD,gBAAC,EAAD,CAAa1D,GAAG,UACd,gBAAC,kBAAD,CAA6BU,KAAMC,UADrC,UAGA,gBAAC,EAAD,CAAaX,GAAG,KACd,gBAAC,kBAAD,CAA6BU,KAAMC,WADrC,c,GATkC3D,aCT7B2G,GAAb,WACE,WAAoBjJ,EAAiCkF,GAAiB,yBAAlDlF,SAAiD,KAAhBkF,SADvD,gDAGcgE,EAAoBhM,EAAiB9B,GAC/C0D,KAAKkB,QAAUlB,KAAKkB,OAAOG,QAAQkB,aAAWpG,IAAK,CAAEiK,OAAQpG,KAAKoG,OAAQgE,WAAUhM,UAAS9B,WAJjG,4BAOe8B,EAAiB9B,GAC5B0D,KAAK7D,IAAI,QAASiC,EAAS+L,EAAUE,YAAY/N,MARrD,8BAWiB8B,EAAiB9B,GAC9B0D,KAAK7D,IAAI,UAAWiC,EAAS+L,EAAUE,YAAY/N,MAZvD,2BAec8B,EAAiB9B,GAC3B0D,KAAK7D,IAAI,cAAeiC,EAAS+L,EAAUE,YAAY/N,MAhB3D,4BAmBe8B,EAAiB9B,GAC5B0D,KAAK7D,IAAI,QAASiC,EAAS+L,EAAUE,YAAY/N,OApBrD,mCAuB6BA,GACzB,OAAIA,aAAgB4B,MACX,eAEF5B,EAFL,CAIE0F,KAAM1F,EAAK0F,KACX5D,QAAS9B,EAAK8B,QACdkM,MAAOhO,EAAKgO,QAGThO,MAlCX,KCOaiO,GAAb,YAOE,WAAYxH,GAA8B,IAAD,uBACvC,4CAAMA,EAAMrG,cAPE8N,mBAMyB,IALzBjH,qBAKyB,IAJzBqF,gBAAkBA,GAIO,EAHzBzM,SAGyB,IAFzBsO,mBAEyB,EAGvC,IAAMC,EAAY3H,EAAMtG,IAAOsG,EAAMrG,WAAa,IAAMqG,EAAM0H,cAHvB,OAIvC,EAAKtO,IAAM,IAAIgO,GAAU,EAAKjJ,OAAQwJ,GACtC,EAAKD,cAAgB1H,EAAM0H,cAE3B,EAAKlH,gBAAkB,SAACR,GACtB,IAAMnH,EAAMmH,EAAMtG,GAAK,IAAMsG,EAAMrG,WAAa,IAAMqG,EAAM0H,cAC5D,OAAO,kBAAC,GAAD,iBAAkB1H,EAAlB,CAAyBnH,IAAKA,MAGvC,EAAK4O,cAAgB,SAAC/M,EAAeqM,EAAqBhH,GACxD,OAAO,kBAAC,GAAD,CAASrF,KAAMA,EAAMqM,SAAUA,EAAUhH,MAAOA,KAblB,EAP3C,2BAAyC9F,GAyB5B2N,GAA0BnH,IAAMoH,cAAyC,IAAIL,GAAoB,CAAE7N,WAAY,GAAImO,SAAU,GAAIJ,cAAe,GAAIhO,GAAI,MCnBhJqO,I,wLAMjB,IAAMrN,EAAO,GAWb,OAVIuC,KAAK+C,MAAMtG,IACbgB,EAAKsN,KAAK,OAAS/K,KAAK+C,MAAMtG,IAE5BuD,KAAK+C,MAAM0H,eACbhN,EAAKsN,KAAK,cAAgB/K,KAAK+C,MAAM0H,eAEnCzK,KAAK+C,MAAMrG,YACbe,EAAKsN,KAAK,WAAa/K,KAAK+C,MAAMrG,YAIlC,2BAASmG,UAAU,qBACjB,uBAAKA,UAAU,UACb,gBAAC,kBAAD,CAA6BqE,KAAMC,wBAAgC0C,KAAM7J,KAAK+C,MAAM+G,WACpF,mDAEF,0BAAKrM,EAAK6F,KAAI,SAAA4F,GAAC,OAAI,0BAAKA,OACxB,gBAAC,EAAD,CAAa1C,GAAG,UACd,gBAAC,kBAAD,CAA6BU,KAAMC,UADrC,e,GAxBuC3D,cAA1BsH,GACLd,aAAiD,CAC7DF,SAAU,M,ICXOkB,G,YACnB,WAAYjI,GAAa,IAAD,8BACtB,4CAAMA,KACD4D,MAAQ,CAAE1I,MAAO,MAFA,E,+EAKCA,EAAY4I,GACnC3K,QAAQC,IAAI8B,GACZ/B,QAAQC,IAAI0K,GACZ7G,KAAK8G,SAAS,CAAE7I,Y,+BAIhB,OAAI+B,KAAK2G,MAAM1I,MACN,wBAAM6E,MAAO,CAAEmI,MAAO,QAAtB,yBAEFjL,KAAK+C,MAAM2D,a,GAhBqBlD,aCiBtB0H,I,mBACnB,WAAYnI,GAA4B,IAAD,8BACrC,4CAAMA,KACD4D,MAAQ,GAFwB,E,gFAKbwE,GACpBnL,KAAK+C,MAAMtG,KAAO0O,EAAU1O,IAC9BuD,KAAK+C,MAAMrG,aAAeyO,EAAUzO,YACpCsD,KAAK+C,MAAM0H,gBAAkBU,EAAUV,eACvCzK,KAAK+C,MAAM5F,UAAYgO,EAAUhO,SACjC6C,KAAKoL,kB,0CAKPpL,KAAKoL,kB,uIAKGC,EAA+B,CAAEC,gBAAgB,IAEnDtL,KAAK+C,MAAMtG,G,0CAEqBkC,EAASmC,WAAWrB,U,OAAhD8L,E,OACNF,EAASG,iBAAmBD,EAAoBtC,MAAK,SAAAC,GAAC,OAAIA,EAAEzM,KAAO,EAAKsG,MAAMtG,M,uBACrEuD,KAAK+C,MAAMrG,YAAcsD,KAAK+C,MAAM0H,gBAC7CY,EAASG,iBAAmB,CAC1B/O,GAAI,GACJoO,SAAU,GACVnO,WAAYsD,KAAK+C,MAAMrG,WACvB+N,cAAezK,KAAK+C,MAAM0H,cAC1BtN,QAAS6C,KAAK+C,MAAM5F,U,YAIpBkO,EAASG,iB,4CACoB5C,GAAgB6C,oBAAoBJ,EAASG,iBAAiB9O,a,SAAvFoM,E,UAEE2B,EAAgBY,EAASG,iBAAiBf,cAChDY,EAASK,oBAAsB5C,EAAiBG,MAAK,SAAAC,GAAC,OAAIA,EAAElH,OAASyI,KACjEY,EAASK,qBAAuBL,EAASK,oBAAoB/I,YAC/D0I,EAASM,iBAAmB,IAAIpB,GAAoBc,EAASG,kBAC7DH,EAASC,gBAAiB,I,QAKhCtL,KAAK8G,SAASuE,G,kDAEdnP,QAAQC,IAAR,MACA6D,KAAK8G,SAAS,CAAEwE,gBAAgB,I,0FAKlC,IAAInG,EAAU,gBAAC,GAAD,CAASyE,QAAQ,IAM/B,IAJkC,IAA9B5J,KAAK2G,MAAM2E,iBACbnG,EAAU,gBAAC,GAAD,iBAAuBnF,KAAK+C,MAAW/C,KAAK2G,MAAM6E,oBAG1DxL,KAAK2G,MAAM+E,qBAAuB1L,KAAK2G,MAAM+E,oBAAoB/I,WAAa3C,KAAK2G,MAAMgF,iBAAkB,CAC7G,IAAMC,EAAY5L,KAAK2G,MAAM+E,oBAAoB/I,UAG5CiJ,EAAUC,cACbD,EAAUC,YAAclB,IAG1B,IAAM5H,EAAQ/C,KAAK2G,MAAM6E,kBAAoBxL,KAAK2G,MAAM6E,iBAAiBrO,SAAW,GAGpFgI,EACE,gBAACwF,GAAwBmB,SAAzB,CAAkC3H,MAAOnE,KAAK2G,MAAMgF,kBAClD,gBAACC,EAAc7I,IAKrB,IAAMF,EAAY8G,KAAU,eAAgB3J,KAAK+C,MAAMF,WAEvD,OACE,2BAASA,UAAWA,EAAWC,MAAO9C,KAAK+C,MAAMD,OAC/C,gBAAC,GAAD,KACGqC,Q,GAtF+B3B,cCDrBuI,I,iCAInB,WAAYhJ,GAAa,IAAD,8BACtB,4CAAMA,KAJAiJ,iBAGgB,IAFhBC,WAAqB,IAI3B,EAAKtF,MAAQ,GACb,EAAKuF,OAAS,EAAKA,OAAOzH,KAAZ,gBACd,EAAK0H,cAAgB,EAAKA,cAAc1H,KAAnB,gBACrB,EAAK2H,UAAY,EAAKA,UAAU3H,KAAf,gBALK,E,6KAShBzE,KAAKqM,Q,OACXrM,KAAKsM,kBACLC,SAASC,iBAAiB,UAAWxM,KAAKoM,W,8FAI1CpM,KAAKyM,oBACLF,SAASG,oBAAoB,UAAW1M,KAAKoM,a,gCAI7BO,GAChB,IAAMC,EAAS3K,OAAOQ,MAAQR,OAAOQ,MAAyBkK,EACvC,KAAnBC,EAAOC,SAAkBD,EAAOE,SAAWF,EAAOG,SACpD9K,OAAO+E,SAASgG,KAAO,Y,wCAMrBhQ,EAAqBC,qBAAqBiE,SAC5ClE,EAAqBC,qBAAqBiE,OAAOI,UAAUiB,aAAW0K,aAAcjN,KAAKmM,eACzFnP,EAAqBC,qBAAqBiE,OAAOI,UAAUiB,aAAW2K,kBAAmBlN,KAAKmM,eAC9FnP,EAAqBC,qBAAqBiE,OAAOI,UAAUiB,aAAWC,sBAAuBxC,KAAKmM,kB,0CAKhGnP,EAAqBC,qBAAqBiE,SAC5ClE,EAAqBC,qBAAqBiE,OAAOK,YAAYgB,aAAW0K,aAAcjN,KAAKmM,eAC3FnP,EAAqBC,qBAAqBiE,OAAOK,YAAYgB,aAAW2K,kBAAmBlN,KAAKmM,eAChGnP,EAAqBC,qBAAqBiE,OAAOK,YAAYgB,aAAWC,sBAAuBxC,KAAKmM,kB,+HAMhGnP,EAAqBqP,Q,cAG3BxE,IAAOsF,OAAOnQ,EAAqBC,qBAAqBzB,SAAS4R,MACjExF,IAAQuF,OAAOnQ,EAAqBC,qBAAqBzB,SAAS4R,M,mBAG5DxE,GAAgByE,oB,iCAGF1O,EAASsC,MAAMxB,U,cAA7BwB,E,yBACCjB,KAAK8G,SAAS,CAAE7F,W,wFAIvBgB,OAAOqL,aAAatN,KAAKgM,aACzBhM,KAAKgM,YAAc/J,OAAOsL,WAAWvN,KAAKkM,OAAQlM,KAAKiM,c,+BAIvD/P,QAAQC,IAAI,UACZwC,EAAS6O,aACTxN,KAAKqM,S,iCAGW5P,EAAYqG,GAC5B,OAAO,kBACL,2BAASD,UAAU,UAAUC,MAAOA,GAClC,gBAAC,GAAD,CAAcrG,GAAIA,Q,+BAKP,IAAD,OACV0I,EAAU,gBAAC,GAAD,CAAS1H,KAAK,sBAAsBmM,QAAQ,IAe1D,OAbI5J,KAAK2G,MAAM1F,QACbkE,EACE,gBAAC,gBAAD,KACE,gBAAC,IAAD,KACGnF,KAAK2G,MAAM1F,MAAMqC,KAAI,SAAA0C,GAAI,OACvB,gBAAC,IAAD,CAAOpK,IAAKoK,EAAKyH,KAAMA,KAAMzH,EAAKyH,KAAMC,MAAqB,MAAd1H,EAAKyH,KAAc9K,UAAW,EAAKgL,WAAW3H,EAAK4H,eAAgB5H,EAAKlD,YAE1H,gBAAC,IAAD,CAAOH,UAAWsH,QAMnB,2BAASpH,UAAU,OAAOsC,O,GAnGJ3B,c,OCdjCqK,SACE,gBAAC,GAAD,KAAe,gBAAC,GAAD,OACftB,SAASuB,eAAe,U,mBCV1BC,EAAOrF,QAAU,IAA0B,kC","file":"static/js/main.8fbd14fe.chunk.js","sourcesContent":["import { IModuleContext, IPubSub, ISystemSettings, ElectronStore, topicNames, IPubSubEvent } from \"@schirkan/reactron-interfaces\";\r\nimport { createRemoteService } from \"./RpcClient\";\r\nimport { services } from \"./ReactronServicesFrontend\";\r\n\r\nlet electron: Electron.AllElectron;\r\nlet settings: ISystemSettings;\r\nlet topics: IPubSub = { // TODO: mock\r\n  clearAllSubscriptions: () => { },\r\n  once: () => { },\r\n  publish: () => { },\r\n  subscribe: () => { },\r\n  unsubscribe: () => { }\r\n};\r\nlet Store: new (options?: any) => ElectronStore;\r\n\r\nexport class BrowserModuleContext implements IModuleContext {\r\n  public static inernalModuleContext: BrowserModuleContext;\r\n  private static moduleStoreCache: { [key: string]: ElectronStore } = {};\r\n  private static serviceCache: { [key: string]: any } = {};\r\n\r\n  constructor(public moduleName: string) {\r\n    const escapedModuleName = (moduleName || '').replace('/', '@');\r\n    this.moduleApiPath = '/api/' + escapedModuleName;\r\n  }\r\n\r\n  public readonly services = services;\r\n  public readonly moduleApiPath: string;\r\n  public get electron(): Electron.AllElectron { return electron };\r\n  public get topics(): IPubSub { return topics; }\r\n  public get settings(): Readonly<ISystemSettings> { return settings; }\r\n\r\n  public get moduleStorage(): ElectronStore {\r\n    const moduleStoreKey = 'module.' + this.moduleName;\r\n    if (Store && !BrowserModuleContext.moduleStoreCache[moduleStoreKey]) {\r\n      BrowserModuleContext.moduleStoreCache[moduleStoreKey] = new Store({ name: moduleStoreKey });\r\n    }\r\n    return BrowserModuleContext.moduleStoreCache[moduleStoreKey];\r\n  }\r\n\r\n  public async getService<TService = any>(serviceName: string, explicitModuleName?: string): Promise<TService | undefined> {\r\n    const moduleName = explicitModuleName || this.moduleName;\r\n    const serviceKey = serviceName + '.' + moduleName;\r\n    if (!BrowserModuleContext.serviceCache[serviceKey]) {\r\n      BrowserModuleContext.serviceCache[serviceKey] = createRemoteService<TService>(serviceName, moduleName);\r\n    }\r\n    return Promise.resolve(BrowserModuleContext.serviceCache[serviceKey]);\r\n  }\r\n\r\n  public static async init(): Promise<void> {\r\n    // check if env is electron\r\n    if (!electron && (window as any).require) {\r\n      electron = (window as any).require('electron');\r\n      const backendService = electron.remote.require('./dist/server/BackendService').BackendService.instance;\r\n      topics = backendService.topics;\r\n      Store = electron.remote.require('electron-store');\r\n\r\n      // subscribe settings change\r\n      topics.subscribe(topicNames.systemSettingsUpdated, (event: IPubSubEvent, data: ISystemSettings) => {\r\n        settings = data;\r\n      });\r\n    }\r\n\r\n    // init internal module\r\n    BrowserModuleContext.inernalModuleContext = new BrowserModuleContext('reactron');\r\n\r\n    // load settings\r\n    if (!settings) {\r\n      settings = await services.application.getSettings();\r\n    }\r\n  }\r\n}","import { BrowserModuleContext } from \"./BrowserModuleContext\";\r\nimport { rpcPath, IRpcRequest, IRpcResponse } from \"../common/rpc\";\r\n\r\ninterface ICacheItem {\r\n  timestamp: number;\r\n  result: Promise<any>;\r\n}\r\nconst cache: { [key: string]: ICacheItem } = {};\r\nconst cacheDuration = 5000; // 5 seconds\r\n\r\nconst getOrCreate = (key: string, creator: () => Promise<any>): Promise<any> => {\r\n  const now = Date.now();\r\n  const validCacheTime = now - (cacheDuration);\r\n\r\n  // check timestamp\r\n  if (cache[key] && cache[key].timestamp < validCacheTime) {\r\n    delete (cache[key]);\r\n  }\r\n\r\n  if (!cache[key]) {\r\n    cache[key] = {\r\n      timestamp: now,\r\n      result: creator()\r\n    };\r\n  } else {\r\n    console.log('RPC cache hit', key);\r\n  }\r\n  return cache[key].result;\r\n};\r\n\r\nconst callServiceMethod = async (data: IRpcRequest): Promise<IRpcResponse> => {\r\n  const id = data.moduleName + '.' + data.serviceName + '.' + data.methodName;\r\n  const urlId = id.replace('/', '@');\r\n  const url = BrowserModuleContext.inernalModuleContext.moduleApiPath + rpcPath + '/' + urlId;\r\n  const options: RequestInit = {\r\n    method: 'POST',\r\n    body: data && JSON.stringify(data),\r\n    headers: { \"Content-Type\": \"application/json; charset=utf-8\" }\r\n  };\r\n\r\n  let text: string | undefined = undefined;\r\n  let result: IRpcResponse | undefined = undefined;\r\n  let error: any;\r\n\r\n  try {\r\n    const response = await fetch(url, options);\r\n    text = await response.text();\r\n    if (response.status.toString().startsWith('2')) {\r\n      result = text ? JSON.parse(text) : undefined;\r\n      if (result && result.error) {\r\n        error = new Error(result.error);\r\n      }\r\n    } else {\r\n      error = new Error(text);\r\n    }\r\n  } catch (err) {\r\n    error = err;\r\n  }\r\n\r\n  if (error) {\r\n    if (result) {\r\n      console.error('RPC ' + id, { args: data.args, result });\r\n    } else {\r\n      console.error('RPC ' + id, { args: data.args, result: text, error: error && error.message || error });\r\n    }\r\n    throw error;\r\n  } else {\r\n    console.log('RPC ' + id, { args: data.args, result });\r\n    return result && result.result;\r\n  }\r\n};\r\n\r\nexport const createRemoteService = <TService>(serviceName: string, moduleName: string): TService => {\r\n  const proxy = new Proxy({}, {\r\n    get: (target, prop: string) => {\r\n      if (prop === 'then') {\r\n        return null; // I'm not a Thenable\r\n      }\r\n\r\n      return (...args: any[]) => {\r\n        const request: IRpcRequest = { serviceName, moduleName, methodName: prop, args };\r\n        return getOrCreate(JSON.stringify(request), () => callServiceMethod(request));\r\n      };\r\n    }\r\n  });\r\n  return proxy as TService;\r\n};\r\n","export interface IRpcRequest {\r\n  moduleName: string;\r\n  serviceName: string;\r\n  methodName: string;\r\n  args: any[];\r\n}\r\n\r\nexport interface IRpcResponse {\r\n  result?: any;\r\n  error?: string;\r\n}\r\n\r\nexport const rpcPath = '/service/rpc';","import { IModuleController, IAppController, ILogController, IServiceController, IWebComponentController, IWebPageController, ISystemSettings, IWebPageOptions, IWebComponentOptions, IReactronServices } from '@schirkan/reactron-interfaces';\r\nimport { createRemoteService } from './RpcClient';\r\n\r\nexport class ReactronServicesFrontend implements IReactronServices {\r\n  private moduleController = createRemoteService<IModuleController>('ModuleController', 'reactron');\r\n  private appController = createRemoteService<IAppController>('AppController', 'reactron');\r\n  private logController = createRemoteService<ILogController>('LogController', 'reactron');\r\n  private serviceController = createRemoteService<IServiceController>('ServiceController', 'reactron');\r\n  private webComponentController = createRemoteService<IWebComponentController>('WebComponentController', 'reactron');\r\n  private webPageController = createRemoteService<IWebPageController>('WebPageController', 'reactron');\r\n\r\n  private _modulesCache: any;\r\n  private _settingsCache: any;\r\n  private _servicesCache: any;\r\n  private _serviceOptionsCache: { [key: string]: any } = {};\r\n  private _pagesCache: any;\r\n  private _componentsCache: any;\r\n\r\n  public clearCache(): void {\r\n    delete this._modulesCache;\r\n    delete this._settingsCache;\r\n    delete this._servicesCache;\r\n    this._serviceOptionsCache = {};\r\n    delete this._pagesCache;\r\n    delete this._componentsCache;\r\n  }\r\n\r\n  public readonly modules: IModuleController = {\r\n    getAll: () => {\r\n      return this._modulesCache || (this._modulesCache = this.moduleController.getAll());\r\n    },\r\n    add: (repository: string) => {\r\n      delete this._modulesCache;\r\n      return this.moduleController.add(repository);\r\n    },\r\n    remove: (moduleName: string) => {\r\n      delete this._modulesCache;\r\n      return this.moduleController.remove(moduleName);\r\n    },\r\n    update: (moduleName: string) => {\r\n      delete this._modulesCache;\r\n      return this.moduleController.update(moduleName);\r\n    },\r\n    updateAll: () => {\r\n      delete this._modulesCache;\r\n      return this.moduleController.updateAll();\r\n    },\r\n    checkUpdates: this.moduleController.checkUpdates,\r\n  };\r\n\r\n  public readonly application: IAppController = {\r\n    getServerInfo: this.appController.getServerInfo, // TODO: cache\r\n    exitApplication: this.appController.exitApplication,\r\n    restartApplication: this.appController.restartApplication,\r\n    shutdownSystem: this.appController.shutdownSystem,\r\n    rebootSystem: this.appController.rebootSystem,\r\n    resetApplication: this.appController.resetApplication,\r\n    getSettings: () => {\r\n      return this._settingsCache || (this._settingsCache = this.appController.getSettings());\r\n    },\r\n    setSettings: (settings: ISystemSettings) => {\r\n      this._settingsCache = settings;\r\n      return this.appController.setSettings(settings);\r\n    },\r\n  };\r\n\r\n  public readonly log: ILogController = {\r\n    getLogEntries: this.logController.getLogEntries\r\n  };\r\n\r\n  public readonly services: IServiceController = {\r\n    getAllServices: () => {\r\n      return this._servicesCache || (this._servicesCache = this.serviceController.getAllServices());\r\n    },\r\n    getServiceOptions: (moduleName: string, serviceName: string) => {\r\n      const key = moduleName + '.' + serviceName;\r\n      return this._serviceOptionsCache[key] || (this._serviceOptionsCache[key] = this.serviceController.getServiceOptions(moduleName, serviceName));\r\n    },\r\n    setServiceOptions: (moduleName: string, serviceName: string, options: object) => {\r\n      const key = moduleName + '.' + serviceName;\r\n      this._serviceOptionsCache[key] = options;\r\n      return this.serviceController.setServiceOptions(moduleName, serviceName, options);\r\n    },\r\n  };\r\n\r\n  public readonly components: IWebComponentController = {\r\n    getAll: () => {\r\n      return this._componentsCache || (this._componentsCache = this.webComponentController.getAll());\r\n    },\r\n    createOrUpdate: (options: IWebComponentOptions) => {\r\n      delete this._componentsCache;\r\n      return this.webComponentController.createOrUpdate(options);\r\n    },\r\n    delete: (id: string) => {\r\n      delete this._componentsCache;\r\n      return this.webComponentController.delete(id);\r\n    },\r\n  }\r\n\r\n  public readonly pages: IWebPageController = {\r\n    getAll: () => {\r\n      return this._pagesCache || (this._pagesCache = this.webPageController.getAll());\r\n    },\r\n    createOrUpdate: (options: IWebPageOptions) => {\r\n      delete this._pagesCache;\r\n      return this.webPageController.createOrUpdate(options);\r\n    },\r\n    delete: (id: string) => {\r\n      delete this._pagesCache;\r\n      return this.webPageController.delete(id);\r\n    },\r\n  };\r\n}\r\n\r\nexport const services: ReactronServicesFrontend = new ReactronServicesFrontend();","import * as React from 'react';\r\nimport { IReactronComponentDefinition, IInputComponentProps } from \"@schirkan/reactron-interfaces\";\r\nimport CarouselLayout from \"./CarouselLayout\";\r\nimport { CarouselProps } from 'react-responsive-carousel';\r\nimport { ICarouselLayoutOptions } from './ICarouselLayoutOptions';\r\n\r\nexport const carouselLayoutDefinition: IReactronComponentDefinition<ICarouselLayoutOptions> = {\r\n  component: CarouselLayout,\r\n  description: 'Carousel Layout',\r\n  displayName: 'Carousel Layout',\r\n  name: 'CarouselLayout',\r\n  type: 'layout',\r\n  fields: [\r\n    {\r\n      displayName: 'Options', name: 'options', valueType: 'object', fields: [\r\n        { displayName: 'Interval in ms', name: 'interval', valueType: 'number', defaultValue: 5000, minValue: 1000, stepSize: 50 },\r\n        { displayName: 'Transition Time in ms', name: 'transitionTime', valueType: 'number', defaultValue: 500, minValue: 100, stepSize: 50 },\r\n        { displayName: 'Show Indicators', name: 'showIndicators', valueType: 'boolean', defaultValue: true },\r\n        { displayName: 'Show Arrows', name: 'showArrows', valueType: 'boolean', defaultValue: false },\r\n        { displayName: 'Show Status', name: 'showStatus', valueType: 'boolean', defaultValue: false },\r\n        { displayName: 'Center Mode', name: 'centerMode', valueType: 'boolean', defaultValue: false },\r\n        { displayName: 'Center Slide Percentage', name: 'centerSlidePercentage', valueType: 'number', defaultValue: 70, minValue: 1, maxValue: 100, stepSize: 1 },\r\n        { displayName: 'Axis', name: 'axis', valueType: 'boolean', defaultValue: 'horizontal', values: [{ value: 'horizontal', text: 'horizontal' }, { value: 'vertical', text: 'vertical' }] },\r\n      ],\r\n      inputControl: (props: IInputComponentProps<CarouselProps>) => {\r\n        const interval = props.value && props.value.interval;\r\n        return <span>interval {interval} ms</span>;\r\n      }\r\n    },\r\n    { displayName: 'Content', name: 'items', valueType: 'webComponent', isArray: true },\r\n    { displayName: 'Carousel Style', name: 'style', valueType: 'style' },\r\n  ]\r\n};","import * as React from 'react';\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport { ICarouselLayoutOptions } from './ICarouselLayoutOptions';\r\nimport { IReactronComponentContext } from '@schirkan/reactron-interfaces';\r\n\r\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\r\nimport './CarouselLayout.scss';\r\n\r\nexport default class CarouselLayout extends React.Component<ICarouselLayoutOptions> {\r\n  public context!: IReactronComponentContext;\r\n\r\n  public render() {\r\n    return (\r\n      <section className=\"CarouselLayout\" style={this.props.style}>\r\n        <Carousel autoPlay={true} infiniteLoop={true} showThumbs={false} showArrows={false} showStatus={false} {...this.props.options}>\r\n          {this.props.items.map(id => this.context.renderComponent({ id }))}\r\n        </Carousel>\r\n      </section>\r\n    );\r\n  }\r\n}","import { IReactronComponentDefinition, IInputComponentProps } from \"@schirkan/reactron-interfaces\";\r\nimport GridLayout from \"./GridLayout\";\r\nimport * as React from 'react';\r\nimport { IGridLayoutTileOptions } from \"./IGridLayoutTileOptions\";\r\n\r\nexport const gridLayoutDefinition: IReactronComponentDefinition = {\r\n  component: GridLayout,\r\n  description: 'Grid Layout',\r\n  displayName: 'Grid Layout',\r\n  name: 'GridLayout',\r\n  type: 'layout',\r\n  fields: [\r\n    { displayName: 'Grid Style', name: 'gridStyle', valueType: 'style' },\r\n    { displayName: 'Tile Style', name: 'tileStyle', valueType: 'style' },\r\n    {\r\n      displayName: 'Grid tiles',\r\n      name: 'tiles',\r\n      valueType: 'object',\r\n      isArray: true,\r\n      fields: [\r\n        { displayName: 'Row', name: 'row', valueType: 'number', defaultValue: 1, stepSize: 1, minValue: 1, maxValue: 20 },\r\n        { displayName: 'Column', name: 'col', valueType: 'number', defaultValue: 1, stepSize: 1, minValue: 1, maxValue: 20 },\r\n        { displayName: 'Row span', name: 'rowspan', valueType: 'number', defaultValue: 1, stepSize: 1, minValue: 1, maxValue: 20 },\r\n        { displayName: 'Column span', name: 'colspan', valueType: 'number', defaultValue: 1, stepSize: 1, minValue: 1, maxValue: 20 },\r\n        { displayName: 'Content', name: 'content', valueType: 'webComponent' },\r\n        { displayName: 'Style', name: 'style', valueType: 'style' }\r\n      ],\r\n      inputControl: (props: IInputComponentProps<IGridLayoutTileOptions>) => {\r\n        const tile = props.value || {};\r\n        const style = { width: '100%', textOverflow: 'ellipsis', overflow: 'hidden' };\r\n        const definition = props.getComponentDefinition(tile.content);\r\n        const componentTitle = definition && definition.displayName;\r\n        return <div style={style}>[ {tile.row} | {tile.col} | {componentTitle} ]</div>;\r\n      }\r\n    }\r\n  ]\r\n};","import * as React from 'react';\r\nimport { IGridLayoutOptions, IGridLayoutTileOptions } from './IGridLayoutTileOptions';\r\nimport { IReactronComponentContext } from '@schirkan/reactron-interfaces';\r\n\r\nimport './GridLayout.scss';\r\n\r\nexport default class GridLayout extends React.Component<IGridLayoutOptions> {\r\n  public context!: IReactronComponentContext;\r\n  \r\n  constructor(props: IGridLayoutOptions) {\r\n    super(props);\r\n\r\n    this.renderTile = this.renderTile.bind(this);\r\n  }\r\n\r\n  private renderTile(tile: IGridLayoutTileOptions, index: number) {\r\n    const style = { ...this.props.tileStyle, ...tile.style };\r\n    style.gridColumn = tile.col.toString();\r\n    if (tile.colspan > 1) {\r\n      style.gridColumn += ' / span ' + tile.colspan;\r\n    }\r\n\r\n    style.gridRow = tile.row.toString();\r\n    if (tile.rowspan > 1) {\r\n      style.gridRow += ' / span ' + tile.rowspan;\r\n    }\r\n    return (\r\n      <div className=\"GridTile\" key={index} style={style}>\r\n        {this.context.renderComponent({ id: tile.content })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <section className=\"GridLayout\" style={this.props.gridStyle}>\r\n        {this.props.tiles.map(this.renderTile)}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport IFrame from \"./IFrame\";\r\n\r\nexport const iFrameDefinition: IReactronComponentDefinition = {\r\n    component: IFrame,\r\n    description: 'IFrame Component',\r\n    displayName: 'IFrame',\r\n    name: 'IFrame',\r\n    fields: [\r\n        { displayName: 'URL', name: 'url', valueType: 'string' }\r\n    ]\r\n};","import * as React from 'react';\r\nimport { IIFrameOptions } from './IIFrameOptions';\r\n\r\nimport './IFrame.scss';\r\n\r\nexport default class IFrame extends React.Component<IIFrameOptions> {\r\n  public render() {\r\n    return <iframe className=\"ui-iframe\" src={this.props.url} />;\r\n  }\r\n}\r\n","import { IReactronComponentDefinition, IInputComponentProps } from \"@schirkan/reactron-interfaces\";\r\nimport ListLayout from \"./ListLayout\";\r\nimport { IListLayoutItemOptions } from \"./IListLayoutItemOptions\";\r\n\r\nexport const listLayoutDefinition: IReactronComponentDefinition = {\r\n  component: ListLayout,\r\n  description: 'List Layout',\r\n  displayName: 'List Layout',\r\n  name: 'ListLayout',\r\n  type: 'layout',\r\n  fields: [\r\n    { displayName: 'List Style', name: 'listStyle', valueType: 'style' },\r\n    { displayName: 'Item Style', name: 'itemStyle', valueType: 'style' },\r\n    {\r\n      displayName: 'List items',\r\n      name: 'items',\r\n      valueType: 'object',\r\n      isArray: true,\r\n      fields: [\r\n        { displayName: 'Content', name: 'content', valueType: 'webComponent' },\r\n        { displayName: 'Style', name: 'style', valueType: 'style' }\r\n      ],\r\n      inputControl: (props: IInputComponentProps<IListLayoutItemOptions>) => {\r\n        const item = props.value || {};\r\n        const definition = props.getComponentDefinition(item.content);\r\n        return definition && definition.displayName || null;\r\n      }\r\n    }\r\n  ]\r\n};","import * as React from 'react';\r\nimport { IListLayoutItemOptions } from \"./IListLayoutItemOptions\";\r\nimport { IListLayoutOptions } from \"./IListLayoutOptions\";\r\nimport { IReactronComponentContext } from '@schirkan/reactron-interfaces';\r\n\r\nimport './ListLayout.scss';\r\n\r\nexport default class ListLayout extends React.Component<IListLayoutOptions> {\r\n  public context!: IReactronComponentContext;\r\n\r\n  constructor(props: IListLayoutOptions) {\r\n    super(props);\r\n\r\n    this.renderListItem = this.renderListItem.bind(this);\r\n  }\r\n\r\n  private renderListItem(item: IListLayoutItemOptions, index: number) {\r\n    const style = { ...this.props.itemStyle, ...item.style };\r\n\r\n    return (\r\n      <div className=\"ListItem\" key={index} style={style}>\r\n        {this.context.renderComponent({ id: item.content })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <section className=\"ListLayout\" style={this.props.listStyle}>\r\n        {this.props.items.map(this.renderListItem)}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport MarkDown from \"./MarkDown\";\r\n\r\nexport const markDownDefinition: IReactronComponentDefinition = {\r\n  component: MarkDown,\r\n  description: 'MarkDown Component',\r\n  displayName: 'MarkDown',\r\n  name: 'MarkDown',\r\n  fields: [\r\n    { displayName: 'Text', name: 'text', valueType: 'string', textRows: 10 },\r\n    { displayName: 'Style', name: 'style', valueType: 'style' }\r\n  ]\r\n};","import * as React from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport { IMarkDownOptions } from './IMarkDownOptions';\r\n\r\nimport './MarkDown.scss';\r\n\r\nexport default class MarkDown extends React.Component<IMarkDownOptions> {\r\n  public render() {\r\n    return (\r\n      <section className=\"MarkDown\" style={this.props.style}>\r\n        <ReactMarkdown source={this.props.text} />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport Notifications from \"./Notifications\";\r\n\r\nexport const notificationsDefinition: IReactronComponentDefinition = {\r\n    component: Notifications,\r\n    description: 'Notifications',\r\n    displayName: 'Notifications',\r\n    name: 'Notifications',\r\n    fields: []\r\n};","import * as React from 'react';\r\n\r\nimport './Notifications.scss';\r\n\r\nexport default class Notifications extends React.Component<any, any> {\r\n  constructor(props: any) {\r\n    super(props);\r\n  }\r\n\r\n  public render() {\r\n    return <section className=\"Notifications\">Notifications</section>;\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './RoundButton.scss';\r\n\r\nexport interface IRoundButtonProps {\r\n  to: string;\r\n}\r\n\r\nexport default class RoundButton extends React.Component<IRoundButtonProps> {\r\n  public render() {\r\n    return <Link className=\"RoundButton\" to={this.props.to} role=\"button\">{this.props.children}</Link>;\r\n  }\r\n}\r\n","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport { carouselLayoutDefinition } from \"./CarouselLayout/CarouselLayoutDefinition\";\r\nimport { gridLayoutDefinition } from \"./GridLayout/GridLayoutDefinition\";\r\nimport { iFrameDefinition } from \"./IFrame/IFrameDefinition\";\r\nimport { listLayoutDefinition } from \"./ListLayout/ListLayoutDefinition\";\r\nimport { markDownDefinition } from \"./MarkDown/MarkDownDefinition\";\r\nimport { notificationsDefinition } from \"./Notifications/NotificationsDefinition\";\r\nimport { welcomeDefinition } from \"./Welcome/WelcomeDefinition\";\r\n\r\nexport const components: IReactronComponentDefinition[] = [\r\n    listLayoutDefinition,\r\n    carouselLayoutDefinition,\r\n    gridLayoutDefinition,\r\n    welcomeDefinition,\r\n    markDownDefinition,\r\n    notificationsDefinition,\r\n    iFrameDefinition\r\n];","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport Welcome from \"./Welcome\";\r\n\r\nexport const welcomeDefinition: IReactronComponentDefinition = {\r\n    component: Welcome,\r\n    description: 'Welcome Component',\r\n    displayName: 'Welcome',\r\n    name: 'Welcome',\r\n    fields: []\r\n};","import * as SvgIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport { IServerInfo } from '@schirkan/reactron-interfaces';\r\nimport * as React from 'react';\r\nimport RoundButton from '../../components/RoundButton/RoundButton';\r\nimport logo from './logo.svg';\r\nimport { services } from '../../ReactronServicesFrontend';\r\n\r\nimport './Welcome.scss';\r\n\r\ninterface IWelcomeState {\r\n  info?: IServerInfo;\r\n}\r\n\r\nexport default class Welcome extends React.Component<any, IWelcomeState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  public componentDidMount() {\r\n    services.application.getServerInfo().then(info => {\r\n      this.setState({ info });\r\n    });\r\n  }\r\n\r\n  public render() {\r\n    let info;\r\n\r\n    if (this.state.info) {\r\n      const port = window.location.port === '80' ? '' : ':' + window.location.port;\r\n      info = (<div className=\"info\">\r\n        To edit this page click Admin-Button or visit<br /><br />\r\n        <i>http://{this.state.info.ip}{port}/admin</i>\r\n      </div>);\r\n    }\r\n    return (\r\n      <section className=\"Welcome\">\r\n        <RoundButton to=\"/admin\">\r\n          <FontAwesome.FontAwesomeIcon icon={SvgIcons.faCog} />\r\n          Admin\r\n        </RoundButton>\r\n        <img src={logo} className=\"logo\" alt=\"logo\" />\r\n        <div className=\"title\">Welcome to Reactron</div>\r\n        {info}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import * as SvgCore from '@fortawesome/fontawesome-svg-core';\r\nimport * as BrandIcons from '@fortawesome/free-brands-svg-icons';\r\nimport * as RegularIcons from '@fortawesome/free-regular-svg-icons';\r\nimport * as SolidIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport { IComponentLoader, IModuleRepositoryItem, IReactronComponentDefinition } from '@schirkan/reactron-interfaces';\r\nimport * as reactronInterfaces from '@schirkan/reactron-interfaces';\r\nimport moment from 'moment';\r\nimport momentTimezone from 'moment-timezone';\r\nimport numeral from 'numeral';\r\nimport * as React from 'react';\r\nimport * as ReactDom from 'react-dom';\r\nimport * as ReactRouterDom from 'react-router-dom';\r\nimport { components as internalComponents } from './internalModule';\r\nimport { services } from './ReactronServicesFrontend';\r\n\r\n// tslint:disable:no-string-literal\r\n\r\nconst SystemJS = (window as any).System as typeof System;\r\n\r\nconst externalModules = {};\r\n\r\nexternalModules['react'] = { default: React, ...React }; // workaround for default export\r\nexternalModules['react-dom'] = ReactDom;\r\nexternalModules['react-router-dom'] = ReactRouterDom;\r\nexternalModules['numeral'] = { default: numeral };\r\nexternalModules['moment'] = { default: moment };\r\nexternalModules['moment-timezone'] = { default: momentTimezone };\r\nexternalModules['@fortawesome/fontawesome-svg-core'] = SvgCore;\r\nexternalModules['@fortawesome/free-solid-svg-icons'] = SolidIcons;\r\nexternalModules['@fortawesome/free-regular-svg-icons'] = RegularIcons;\r\nexternalModules['@fortawesome/free-brands-svg-icons'] = BrandIcons;\r\nexternalModules['@fortawesome/react-fontawesome'] = FontAwesome;\r\nexternalModules['@schirkan/reactron-interfaces'] = reactronInterfaces;\r\n\r\nif ((window as any).require) {\r\n  externalModules['electron'] = (window as any).require('electron');\r\n}\r\n\r\nObject.keys(externalModules).forEach(key => {\r\n  const moduleExport = externalModules[key];\r\n  SystemJS.register(key, [], exports => ({ execute: () => exports(moduleExport) }));\r\n});\r\n\r\nexport class ComponentLoader implements IComponentLoader {\r\n  private allComponentsLoaded = false;\r\n  private moduleComponents: { [moduleName: string]: IReactronComponentDefinition[] } = {\r\n    'reactron': internalComponents\r\n  };\r\n\r\n  public async getModuleComponents(moduleName: string): Promise<IReactronComponentDefinition[] | undefined> {\r\n    if (!this.moduleComponents[moduleName]) {\r\n      const modules = await services.modules.getAll();\r\n      const m = modules.find(x => x.name === moduleName);\r\n\r\n      if (!m) {\r\n        console.error('Module not found: ' + moduleName);\r\n        return;\r\n      }\r\n\r\n      await this.registerModuleComponents(m);\r\n    }\r\n\r\n    return this.moduleComponents[moduleName];\r\n  }\r\n\r\n  private async registerModuleComponents(m: IModuleRepositoryItem): Promise<void> {\r\n    if (!m.browserFile) {\r\n      console.log('Module has no browserFile: ' + m.name);\r\n      return;\r\n    }\r\n\r\n    if (this.moduleComponents[m.name]) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      console.log(m.browserFile);\r\n\r\n      const browserFileContent = await SystemJS.import('\\\\' + m.browserFile);\r\n      // tslint:disable-next-line:no-string-literal\r\n      const components = browserFileContent['components'];\r\n\r\n      if (components && typeof components === 'object' && Array.isArray(components)) {\r\n        this.moduleComponents[m.name] = components;\r\n      }\r\n      console.log('Components loaded for module: ' + m.name);\r\n    } catch (error) {\r\n      console.error('Error loading components for module: ' + m.name, error);\r\n    }\r\n  }\r\n\r\n  public async getAllComponents(): Promise<{ [moduleName: string]: IReactronComponentDefinition[] }> {\r\n    if (this.allComponentsLoaded) {\r\n      return this.moduleComponents;\r\n    }\r\n\r\n    const modules = await services.modules.getAll();\r\n\r\n    const tasks = modules.map(m => this.registerModuleComponents(m));\r\n    await Promise.all(tasks);\r\n    // for (const m of modules) {\r\n    //   await this.registerModuleComponents(m);\r\n    // }\r\n\r\n    this.allComponentsLoaded = true;\r\n    return this.moduleComponents;\r\n  }\r\n}\r\n\r\nexport const componentLoader = new ComponentLoader();","import * as SvgIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport classname from 'classnames';\r\nimport * as React from 'react';\r\nimport { SizeProp } from '@fortawesome/fontawesome-svg-core';\r\n\r\nimport './Loading.scss';\r\n\r\nexport interface ILoadingProps {\r\n  text?: string;\r\n  iconSize?: SizeProp;\r\n  center?: boolean;\r\n  style?: React.CSSProperties;\r\n}\r\n\r\nexport default class Loading extends React.Component<ILoadingProps> {\r\n  public static defaultProps: Partial<ILoadingProps> = {\r\n    iconSize: \"4x\"\r\n  };\r\n\r\n  public render() {\r\n    return (\r\n      <section className={classname('Loading', { 'center': this.props.center })} style={this.props.style}>\r\n        <FontAwesome.FontAwesomeIcon icon={SvgIcons.faSpinner} size={this.props.iconSize} spin={true} />\r\n        {this.props.text && (<div className=\"text\">{this.props.text}</div>)}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import * as SvgIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport RoundButton from '../RoundButton/RoundButton';\r\n\r\nimport './PageNotFound.scss'\r\n\r\nexport interface IPageNotFoundProps {\r\n  location: any;\r\n}\r\n\r\nexport default class PageNotFound extends React.Component<IPageNotFoundProps> {\r\n  public render() {\r\n    return (\r\n      <div className=\"PageNotFound\">\r\n        <h1><FontAwesome.FontAwesomeIcon icon={SvgIcons.faQuestionCircle} /> 404</h1>\r\n        <h2>No page defined for path: {this.props.location.pathname}</h2>\r\n        <RoundButton to=\"/admin\">\r\n          <FontAwesome.FontAwesomeIcon icon={SvgIcons.faCog} /> Admin\r\n        </RoundButton>\r\n        <RoundButton to=\"/\">\r\n          <FontAwesome.FontAwesomeIcon icon={SvgIcons.faHome} /> Home\r\n        </RoundButton>\r\n      </div >\r\n    );\r\n  }\r\n}","import { ILogWriter, IPubSub, topicNames, Severity } from \"@schirkan/reactron-interfaces\";\r\n\r\nexport class LogWriter implements ILogWriter {\r\n  constructor(private topics: IPubSub, public readonly source: string) { }\r\n\r\n  private log(severity: Severity, message: string, data?: any): void {\r\n    this.topics && this.topics.publish(topicNames.log, { source: this.source, severity, message, data });\r\n  }\r\n\r\n  public error(message: string, data?: any): void {\r\n    this.log('error', message, LogWriter.prepareData(data));\r\n  }\r\n\r\n  public warning(message: string, data?: any): void {\r\n    this.log('warning', message, LogWriter.prepareData(data));\r\n  }\r\n\r\n  public info(message: string, data?: any): void {\r\n    this.log('information', message, LogWriter.prepareData(data));\r\n  }\r\n\r\n  public debug(message: string, data?: any): void {\r\n    this.log('debug', message, LogWriter.prepareData(data));\r\n  }\r\n\r\n  private static prepareData(data?: any) {\r\n    if (data instanceof Error) {\r\n      return {\r\n        // Pull all enumerable properties, supporting properties on custom Errors\r\n        ...data,\r\n        // Explicitly pull Error's non-enumerable properties\r\n        name: data.name,\r\n        message: data.message,\r\n        stack: data.stack\r\n      };\r\n    }\r\n    return data;\r\n  }\r\n}","import { SizeProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { IReactronComponentContext, ILogWriter, IWebComponentOptions } from '@schirkan/reactron-interfaces';\r\nimport React from 'react';\r\nimport { BrowserModuleContext } from \"./BrowserModuleContext\";\r\nimport { componentLoader } from './ComponentLoader';\r\nimport Loading from \"./components/Loading/Loading\";\r\nimport WebComponent, { IWebComponentProps } from \"./components/WebComponent/WebComponent\";\r\nimport { LogWriter } from '../common/LogWriter';\r\n\r\nexport class WebComponentContext extends BrowserModuleContext implements IReactronComponentContext {\r\n  public readonly renderLoading: (text?: string, iconSize?: SizeProp, style?: React.CSSProperties) => any;\r\n  public readonly renderComponent: (props: IWebComponentProps) => any;\r\n  public readonly componentLoader = componentLoader;\r\n  public readonly log: ILogWriter;\r\n  public readonly componentName: string;\r\n\r\n  constructor(props: IWebComponentOptions) {\r\n    super(props.moduleName);\r\n\r\n    const logSource = props.id || (props.moduleName + '.' + props.componentName);\r\n    this.log = new LogWriter(this.topics, logSource);\r\n    this.componentName = props.componentName;\r\n\r\n    this.renderComponent = (props: IWebComponentProps) => {\r\n      const key = props.id + '.' + props.moduleName + '.' + props.componentName;\r\n      return <WebComponent {...props} key={key} />;\r\n    };\r\n\r\n    this.renderLoading = (text?: string, iconSize?: SizeProp, style?: React.CSSProperties) => {\r\n      return <Loading text={text} iconSize={iconSize} style={style} />;\r\n    };\r\n  }\r\n}\r\n\r\nexport const WebComponentContextType = React.createContext<IReactronComponentContext>(new WebComponentContext({ moduleName: '', parentId: '', componentName: '', id: '' }));","import { SizeProp } from '@fortawesome/fontawesome-svg-core';\r\nimport * as SvgIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport RoundButton from '../RoundButton/RoundButton';\r\n\r\nimport './ComponentNotFound.scss';\r\n\r\nexport interface IComponentNotFoundProps {\r\n  id?: string;\r\n  componentName?: string;\r\n  moduleName?: string;\r\n  iconSize?: SizeProp;\r\n}\r\n\r\nexport default class ComponentNotFound extends React.Component<IComponentNotFoundProps> {\r\n  public static defaultProps: Partial<IComponentNotFoundProps> = {\r\n    iconSize: \"4x\"\r\n  };\r\n\r\n  public render() {\r\n    const text = [];\r\n    if (this.props.id) {\r\n      text.push('Id: ' + this.props.id);\r\n    }\r\n    if (this.props.componentName) {\r\n      text.push('Component: ' + this.props.componentName);\r\n    }\r\n    if (this.props.moduleName) {\r\n      text.push('Module: ' + this.props.moduleName);\r\n    }\r\n\r\n    return (\r\n      <section className=\"ComponentNotFound\">\r\n        <div className=\"header\">\r\n          <FontAwesome.FontAwesomeIcon icon={SvgIcons.faExclamationTriangle} size={this.props.iconSize} />\r\n          <h4>Component not found!</h4>\r\n        </div>\r\n        <ul>{text.map(x => <li>{x}</li>)}</ul>\r\n        <RoundButton to=\"/admin\">\r\n          <FontAwesome.FontAwesomeIcon icon={SvgIcons.faCog} /> Admin\r\n        </RoundButton>\r\n      </section>\r\n    );\r\n  }\r\n}","import * as React from 'react';\r\n\r\ninterface IErrorBoundaryState {\r\n  error: any;\r\n}\r\n\r\nexport default class ErrorBoundary extends React.Component<any, IErrorBoundaryState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = { error: null };\r\n  }\r\n\r\n  public componentDidCatch(error: any, info: any) {\r\n    console.log(error);\r\n    console.log(info);\r\n    this.setState({ error });\r\n  }\r\n\r\n  public render() {\r\n    if (this.state.error) {\r\n      return <span style={{ color: 'red' }}>Something went wrong.</span>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}","import { IExtraWebComponentProps, IReactronComponentContext, IReactronComponentDefinition, IWebComponentOptions } from '@schirkan/reactron-interfaces';\r\nimport classname from 'classnames';\r\nimport * as React from 'react';\r\nimport { services } from '../../ReactronServicesFrontend';\r\nimport { componentLoader } from '../../ComponentLoader';\r\nimport { WebComponentContext } from '../../WebComponentContext';\r\nimport { WebComponentContextType } from '../../WebComponentContext';\r\nimport ComponentNotFound from '../ComponentNotFound/ComponentNotFound';\r\nimport ErrorBoundary from '../ErrorBoundary/ErrorBoundary';\r\nimport Loading from '../Loading/Loading';\r\n\r\nimport './WebComponent.scss';\r\n\r\nexport interface IWebComponentProps extends Partial<IWebComponentOptions>, IExtraWebComponentProps {\r\n}\r\n\r\ninterface IWebComponentState {\r\n  componentFound?: boolean;\r\n  componentContext?: IReactronComponentContext;\r\n  componentDefinition?: IReactronComponentDefinition;\r\n  componentOptions?: IWebComponentOptions;\r\n}\r\n\r\nexport default class WebComponent extends React.Component<IWebComponentProps, IWebComponentState> {\r\n  constructor(props: IWebComponentProps) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: IWebComponentProps) {\r\n    if (this.props.id !== prevProps.id ||\r\n      this.props.moduleName !== prevProps.moduleName ||\r\n      this.props.componentName !== prevProps.componentName ||\r\n      this.props.options !== prevProps.options) {\r\n      this.loadComponent();\r\n    }\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this.loadComponent();\r\n  }\r\n\r\n  private async loadComponent() {\r\n    try {\r\n      const newState: IWebComponentState = { componentFound: false };\r\n\r\n      if (this.props.id) {\r\n        // nur mit der ID lesen\r\n        const allComponentOptions = await services.components.getAll();\r\n        newState.componentOptions = allComponentOptions.find(x => x.id === this.props.id);\r\n      } else if (this.props.moduleName && this.props.componentName) {\r\n        newState.componentOptions = {\r\n          id: '',\r\n          parentId: '',\r\n          moduleName: this.props.moduleName,\r\n          componentName: this.props.componentName,\r\n          options: this.props.options,\r\n        };\r\n      }\r\n\r\n      if (newState.componentOptions) {\r\n        const moduleComponents = await componentLoader.getModuleComponents(newState.componentOptions.moduleName);\r\n        if (moduleComponents) {\r\n          const componentName = newState.componentOptions.componentName;\r\n          newState.componentDefinition = moduleComponents.find(x => x.name === componentName);\r\n          if (newState.componentDefinition && newState.componentDefinition.component) {\r\n            newState.componentContext = new WebComponentContext(newState.componentOptions);\r\n            newState.componentFound = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      this.setState(newState);\r\n    } catch (error) {\r\n      console.log(error);\r\n      this.setState({ componentFound: false });\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    let content = <Loading center={true} />;\r\n\r\n    if (this.state.componentFound === false) {\r\n      content = <ComponentNotFound {...this.props} {...this.state.componentOptions} />;\r\n    }\r\n\r\n    if (this.state.componentDefinition && this.state.componentDefinition.component && this.state.componentContext) {\r\n      const Component = this.state.componentDefinition.component as typeof React.Component;\r\n\r\n      // set contextType\r\n      if (!Component.contextType) {\r\n        Component.contextType = WebComponentContextType;\r\n      }\r\n\r\n      const props = this.state.componentOptions && this.state.componentOptions.options || {};\r\n\r\n      // render context and component\r\n      content = (\r\n        <WebComponentContextType.Provider value={this.state.componentContext}>\r\n          <Component {...props} />\r\n        </WebComponentContextType.Provider>\r\n      );\r\n    }\r\n\r\n    const className = classname(\"WebComponent\", this.props.className);\r\n\r\n    return (\r\n      <section className={className} style={this.props.style}>\r\n        <ErrorBoundary>\r\n          {content}\r\n        </ErrorBoundary>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import { IWebPageOptions, topicNames } from '@schirkan/reactron-interfaces';\r\nimport moment from 'moment';\r\nimport numeral from 'numeral';\r\nimport * as React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport { BrowserModuleContext } from '../../BrowserModuleContext';\r\nimport { componentLoader } from '../../ComponentLoader';\r\nimport { services } from '../../ReactronServicesFrontend';\r\nimport Loading from '../Loading/Loading';\r\nimport PageNotFound from '../PageNotFound/PageNotFound';\r\nimport WebComponent from '../WebComponent/WebComponent';\r\n\r\n// load moment & numeral locales\r\nimport 'moment/min/locales.min';\r\nimport 'numeral/min/locales.min';\r\n\r\nimport './App.scss';\r\n\r\nexport interface IAppState {\r\n  pages?: IWebPageOptions[];\r\n}\r\n\r\nexport default class App extends React.Component<any, IAppState> {\r\n  private reloadTimer: number | undefined;\r\n  private reloadWait: number = 2000;\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {};\r\n    this.reload = this.reload.bind(this);\r\n    this.triggerReload = this.triggerReload.bind(this);\r\n    this.onKeyDown = this.onKeyDown.bind(this);\r\n  }\r\n\r\n  public async componentDidMount() {\r\n    await this.init();\r\n    this.subscribeTopics();\r\n    document.addEventListener('keydown', this.onKeyDown);\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    this.unsubscribeTopics();\r\n    document.removeEventListener('keydown', this.onKeyDown);\r\n  }\r\n\r\n  // navigate to admin page on Ctrl + Alt + A\r\n  private onKeyDown(e: KeyboardEvent) {\r\n    const evtobj = window.event ? window.event as KeyboardEvent : e;\r\n    if (evtobj.keyCode === 65 && evtobj.ctrlKey && evtobj.altKey) {\r\n      window.location.href = '/admin';\r\n    }\r\n  }\r\n\r\n  private subscribeTopics() {\r\n    // register page/component change event\r\n    if (BrowserModuleContext.inernalModuleContext.topics) {\r\n      BrowserModuleContext.inernalModuleContext.topics.subscribe(topicNames.pagesUpdated, this.triggerReload);\r\n      BrowserModuleContext.inernalModuleContext.topics.subscribe(topicNames.componentsUpdated, this.triggerReload);\r\n      BrowserModuleContext.inernalModuleContext.topics.subscribe(topicNames.systemSettingsUpdated, this.triggerReload);\r\n    }\r\n  }\r\n\r\n  private unsubscribeTopics() {\r\n    if (BrowserModuleContext.inernalModuleContext.topics) {\r\n      BrowserModuleContext.inernalModuleContext.topics.unsubscribe(topicNames.pagesUpdated, this.triggerReload);\r\n      BrowserModuleContext.inernalModuleContext.topics.unsubscribe(topicNames.componentsUpdated, this.triggerReload);\r\n      BrowserModuleContext.inernalModuleContext.topics.unsubscribe(topicNames.systemSettingsUpdated, this.triggerReload);\r\n    }\r\n  }\r\n\r\n  private async init() {\r\n    // init BrowserModuleContext\r\n    await BrowserModuleContext.init();\r\n\r\n    // load settings\r\n    moment.locale(BrowserModuleContext.inernalModuleContext.settings.lang);\r\n    numeral.locale(BrowserModuleContext.inernalModuleContext.settings.lang);\r\n\r\n    // load all modules\r\n    await componentLoader.getAllComponents();\r\n\r\n    // load pages\r\n    const pages = await services.pages.getAll();\r\n    return this.setState({ pages });\r\n  }\r\n\r\n  private triggerReload() {\r\n    window.clearTimeout(this.reloadTimer);\r\n    this.reloadTimer = window.setTimeout(this.reload, this.reloadWait);\r\n  }\r\n\r\n  private reload() {\r\n    console.log('reload');\r\n    services.clearCache();\r\n    this.init();\r\n  }\r\n\r\n  public renderPage(id: string, style: any) {\r\n    return () => (\r\n      <section className=\"WebPage\" style={style}>\r\n        <WebComponent id={id} />\r\n      </section>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    let content = <Loading text=\"Loading Reactron...\" center={true} />;\r\n\r\n    if (this.state.pages) {\r\n      content = (\r\n        <Router>\r\n          <Switch>\r\n            {this.state.pages.map(item =>\r\n              (<Route key={item.path} path={item.path} exact={item.path === '/'} component={this.renderPage(item.webComponentId, item.style)} />)\r\n            )}\r\n            <Route component={PageNotFound} />\r\n          </Switch>\r\n        </Router>\r\n      );\r\n    }\r\n\r\n    return <section className=\"App\">{content}</section>;\r\n  }\r\n}\r\n","// main entry file for react\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport App from './browser/components/App/App';\r\nimport ErrorBoundary from './browser/components/ErrorBoundary/ErrorBoundary';\r\n\r\nimport './index.scss';\r\n\r\nReactDOM.render(\r\n  <ErrorBoundary><App /></ErrorBoundary>,\r\n  document.getElementById('root') as HTMLElement\r\n);","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";"],"sourceRoot":""}