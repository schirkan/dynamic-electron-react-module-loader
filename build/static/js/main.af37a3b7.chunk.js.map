{"version":3,"sources":["browser/BrowserModuleContext.ts","browser/inernalModuleContext.ts","common/apiRoutes.ts","browser/ApiClient.ts","browser/components/Loading/Loading.tsx","browser/components/RoundButton/RoundButton.tsx","browser/components/PageNotFound/PageNotFound.tsx","browser/internalModule/CarouselLayout/CarouselLayoutDefinition.tsx","browser/internalModule/CarouselLayout/CarouselLayout.tsx","browser/internalModule/GridLayout/GridLayoutDefinition.tsx","browser/internalModule/GridLayout/GridLayout.tsx","browser/internalModule/GridLayout/GridLayoutTileHeader.tsx","browser/internalModule/GridLayout/GridLayoutTileHeaderDefinition.tsx","browser/internalModule/IFrame/IFrameDefinition.tsx","browser/internalModule/IFrame/IFrame.tsx","browser/internalModule/ListLayout/ListLayoutDefinition.tsx","browser/internalModule/ListLayout/ListLayout.tsx","browser/internalModule/ListLayout/ListLayoutItemHeader.tsx","browser/internalModule/ListLayout/ListLayoutItemHeaderDefinition.tsx","browser/internalModule/MarkDown/MarkDownDefinition.tsx","browser/internalModule/MarkDown/MarkDown.tsx","browser/internalModule/Notifications/NotificationsDefinition.tsx","browser/internalModule/Notifications/Notifications.tsx","browser/internalModule/index.ts","browser/internalModule/Welcome/WelcomeDefinition.tsx","browser/internalModule/Welcome/Welcome.tsx","browser/ComponentLoader.ts","browser/WebComponentContext.tsx","browser/components/ComponentNotFound/ComponentNotFound.tsx","browser/components/ErrorBoundary/ErrorBoundary.tsx","browser/components/WebComponent/WebComponent.tsx","browser/components/App/App.tsx","index.tsx","browser/internalModule/Welcome/logo.svg"],"names":["electron","backendService","topics","Store","window","require","remote","BackendService","instance","moduleStoreCache","serviceCache","BrowserModuleContext","moduleName","_this","this","moduleStoreKey","name","moduleStorage","escapedModuleName","replace","moduleApiPath","getService","serviceName","explicitModuleName","serviceKey","serviceManager","get","console","log","inernalModuleContext","ApiRoute","path","method","routes","getServices","getServiceOptions","setServiceOptions","getModules","addModule","deleteModule","rebuildModule","updateModule","checkUpdates","getWebPages","setWebPage","deleteWebPage","getServerInfo","exitApplication","restartApplication","shutdownSystem","rebootSystem","resetApplication","getSettings","setSettings","getWebComponentOptions","setWebComponentOptions","deleteWebComponentOptions","ApiClient_ApiClient","ApiClient","getAllServices","apiCall","prototype","clearCache","Object","keys","forEach","key","route","cacheResponse","cache","toLocaleLowerCase","call","params","data","Promise","resolve","fetch","body","JSON","stringify","headers","Content-Type","then","response","__awaiter","undefined","text","_a","sent","status","toString","startsWith","parse","Error","apiClient","components_Loading_Loading","_super","Loading","__extends","render","react","className","classnames","center","props","react_fontawesome_index_es","icon","index_es","size","iconSize","spin","defaultProps","RoundButton","RoundButton_extends","Link","to","role","children","PageNotFound","PageNotFound_extends","location","pathname","components_RoundButton_RoundButton","carouselLayoutDefinition","component","CarouselLayout","CarouselLayout_extends","description","displayName","type","fields","gridLayoutDefinition","GridLayout","renderTile","bind","GridLayout_extends","tile","index","style","__assign","tileStyle","gridColumn","col","colspan","gridRow","row","rowspan","context","renderComponent","id","content","gridStyle","tiles","map","valueType","isArray","defaultValue","stepSize","minValue","maxValue","inputControl","module","GridLayoutTileHeader_style","width","textOverflow","overflow","gridLayoutTileHeaderDefinition","GridLayoutTileHeader","GridLayoutTileHeader_extends","value","react_default","a","createElement","Component","iFrameDefinition","IFrame","IFrame_extends","src","url","listLayoutDefinition","ListLayout","renderListItem","ListLayout_extends","item","ListLayout_assign","itemStyle","items","ListLayoutItemHeader_style","listLayoutItemHeaderDefinition","ListLayoutItemHeader","ListLayoutItemHeader_extends","markDownDefinition","MarkDown","MarkDown_extends","react_markdown","source","textRows","notificationsDefinition","Notifications","Notifications_extends","components","Welcome","state","Welcome_extends","componentDidMount","info","setState","ip","logo_default","alt","SystemJS","System","externalModules","react_dom","es","default","moment_default","moment_timezone_default","fontawesome_svg_core_index_es","free_regular_svg_icons_index_es","free_brands_svg_icons_index_es","moduleExport","register","exports","execute","componentLoader","ComponentLoader","allComponentsLoaded","moduleComponents","reactron","getModuleComponents","modules","m","find","x","registerModuleComponents","error","browserFile","import","browserFileContent","Array","error_1","getAllComponents","modules_1","_i","length","WebComponentContext_WebComponentContext","WebComponentContext","componentName","components_WebComponent_WebComponent","WebComponentContext_assign","renderLoading","WebComponentContext_extends","WebComponentContextType","createContext","components_ComponentNotFound_ComponentNotFound","ComponentNotFound","ComponentNotFound_extends","push","join","ErrorBoundary","ErrorBoundary_extends","componentDidCatch","WebComponent","WebComponent_extends","componentDidUpdate","prevProps","prevState","options","loadComponent","webComponentOptions","allComponentOptions","componentFound","componentName_1","componentDefinition","componentContext","componentOptions","WebComponent_assign","contextType","Provider","components_ErrorBoundary_ErrorBoundary","App","reloadWait","reload","triggerReload","App_extends","init","subscribe","settings","locale","lang","pages","arguments","clearTimeout","reloadTimer","setTimeout","renderPage","BrowserRouter","Switch","Route","exact","webComponentId","components_PageNotFound_PageNotFound","components_App_App","document","getElementById","__webpack_require__","p"],"mappings":"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","file":"static/js/main.af37a3b7.chunk.js","sourcesContent":["import { IBackendService, IModuleContext, IPubSub } from \"@schirkan/reactron-interfaces\";\r\n\r\nlet electron: Electron.AllElectron;\r\nlet backendService: IBackendService;\r\nlet topics: IPubSub;\r\nlet Store: typeof ElectronStore;\r\n\r\nif ((window as any).require) {\r\n    electron = (window as any).require('electron');\r\n    backendService = electron.remote.require('./dist/server/BackendService').BackendService.instance;\r\n    topics = backendService.topics;\r\n    Store = electron.remote.require('electron-store');\r\n}\r\n\r\nconst moduleStoreCache: { [key: string]: ElectronStore } = {};\r\nconst serviceCache: { [key: string]: any } = {};\r\n\r\nexport class BrowserModuleContext implements IModuleContext {\r\n    public readonly electron: Electron.AllElectron;\r\n    public readonly backendService: IBackendService;\r\n    public readonly topics: IPubSub;\r\n    public readonly moduleStorage: ElectronStore;\r\n    public readonly moduleApiPath: string;\r\n    public readonly getService: <TService = any>(serviceName: string, moduleName?: string | undefined) => TService | undefined;\r\n\r\n    constructor(public moduleName: string) {\r\n        this.electron = electron;\r\n        this.backendService = backendService;\r\n        this.topics = topics;\r\n\r\n        const moduleStoreKey = 'module.' + moduleName;\r\n        if (Store && !moduleStoreCache[moduleStoreKey]) {\r\n            moduleStoreCache[moduleStoreKey] = new Store({ name: 'module.' + moduleName });\r\n        }\r\n        this.moduleStorage = moduleStoreCache[moduleStoreKey];\r\n\r\n        const escapedModuleName = moduleName.replace('/', '@');\r\n        this.moduleApiPath = '/api/modules/' + escapedModuleName;\r\n\r\n        this.getService = <TService>(serviceName: string, explicitModuleName?: string) => {\r\n            if (!this.backendService) {\r\n                console.log('Method getService() is not supported in browser environment.');\r\n                return undefined;\r\n            }\r\n            const serviceKey = (explicitModuleName || moduleName) + '.' + serviceName;\r\n            if (!serviceCache[serviceKey]) {\r\n                serviceCache[serviceKey] = this.backendService.serviceManager.get(explicitModuleName || moduleName, serviceName);\r\n            }\r\n            return serviceCache[serviceKey] as TService | undefined;\r\n        }\r\n    }\r\n}\r\n\r\n","import { BrowserModuleContext } from './BrowserModuleContext';\r\nexport const inernalModuleContext = new BrowserModuleContext('reactron'); // internal module\r\n","import { ICommandResult, IModuleRepositoryItem, IServerInfo, IServiceRepositoryItem, ISystemSettings, IWebComponentOptions, IWebPageOptions } from '@schirkan/reactron-interfaces';\r\n\r\nexport class ApiRoute<TParams, TBody, TResponse = void>{\r\n    constructor(public path: string, public method: string) { }\r\n}\r\n\r\nexport const routes = {\r\n    getServices: new ApiRoute<undefined, undefined, IServiceRepositoryItem[]>('/service/', 'get'),\r\n    getServiceOptions: new ApiRoute<{ moduleName: string, serviceName: string }, undefined, object>('/service/:moduleName/:serviceName', 'get'),\r\n    setServiceOptions: new ApiRoute<{ moduleName: string, serviceName: string }, object>('/service/:moduleName/:serviceName', 'post'),\r\n\r\n    getModules: new ApiRoute<undefined, undefined, IModuleRepositoryItem[]>('/modules/', 'get'),\r\n    addModule: new ApiRoute<undefined, { repository: string }, ICommandResult[]>('/modules/', 'post'),\r\n    deleteModule: new ApiRoute<{ moduleName: string }, undefined, ICommandResult[]>('/modules/:moduleName', 'delete'),\r\n    rebuildModule: new ApiRoute<{ moduleName: string }, undefined, ICommandResult[]>('/modules/:moduleName/rebuild', 'post'),\r\n    updateModule: new ApiRoute<{ moduleName: string }, undefined, ICommandResult[]>('/modules/:moduleName/update', 'post'),\r\n    checkUpdates: new ApiRoute<{ moduleName: string }, undefined, ICommandResult[]>('/modules/checkUpdates/update', 'get'),\r\n\r\n    getWebPages: new ApiRoute<undefined, undefined, IWebPageOptions[]>('/pages/', 'get'),\r\n    setWebPage: new ApiRoute<undefined, IWebPageOptions, IWebPageOptions>('/pages/', 'post'),\r\n    deleteWebPage: new ApiRoute<{ id: string }, undefined>('/pages/:id', 'delete'),\r\n\r\n    getServerInfo: new ApiRoute<undefined, undefined, IServerInfo>('/app/', 'get'),\r\n    exitApplication: new ApiRoute<undefined, undefined>('/app/exitApplication', 'post'),\r\n    restartApplication: new ApiRoute<undefined, undefined>('/app/restartApplication', 'post'),\r\n    shutdownSystem: new ApiRoute<undefined, undefined>('/app/shutdownSystem', 'post'),\r\n    rebootSystem: new ApiRoute<undefined, undefined>('/app/restartSystem', 'post'),\r\n    resetApplication: new ApiRoute<undefined, undefined>('/app/resetApplication', 'post'),\r\n\r\n    getSettings: new ApiRoute<undefined, undefined, ISystemSettings>('/settings/', 'get'),\r\n    setSettings: new ApiRoute<undefined, ISystemSettings>('/settings/', 'post'),\r\n\r\n    getWebComponentOptions: new ApiRoute<undefined, undefined, IWebComponentOptions[]>('/components/', 'get'),\r\n    setWebComponentOptions: new ApiRoute<undefined, IWebComponentOptions, IWebComponentOptions>('/components/', 'post'),\r\n    deleteWebComponentOptions: new ApiRoute<{ id: string }, undefined>('/components/:id', 'delete'),\r\n};","import { ApiRoute, routes } from '../common/apiRoutes';\r\nimport { inernalModuleContext } from './inernalModuleContext';\r\n\r\nexport class ApiClient {\r\n    public getAllServices = apiCall(routes.getServices, true);\r\n    public getServiceOptions = apiCall(routes.getServiceOptions);\r\n    public setServiceOptions = apiCall(routes.setServiceOptions);\r\n\r\n    public getModules = apiCall(routes.getModules, true);\r\n    public addModule = apiCall(routes.addModule);\r\n    public checkUpdates = apiCall(routes.checkUpdates);\r\n    public deleteModule = apiCall(routes.deleteModule);\r\n    public rebuildModule = apiCall(routes.rebuildModule);\r\n    public updateModule = apiCall(routes.updateModule);\r\n\r\n    public getWebPages = apiCall(routes.getWebPages, true);\r\n    public setWebPage = apiCall(routes.setWebPage);\r\n    public deleteWebPage = apiCall(routes.deleteWebPage);\r\n\r\n    public getServerInfo = apiCall(routes.getServerInfo);\r\n    public exitApplication = apiCall(routes.exitApplication);\r\n    public restartApplication = apiCall(routes.restartApplication);\r\n    public shutdownSystem = apiCall(routes.shutdownSystem);\r\n    public rebootSystem = apiCall(routes.rebootSystem);\r\n    public resetApplication = apiCall(routes.resetApplication);\r\n\r\n    public getSettings = apiCall(routes.getSettings, true);\r\n    public setSettings = apiCall(routes.setSettings);\r\n\r\n    public getWebComponentOptions = apiCall(routes.getWebComponentOptions, true);\r\n    public setWebComponentOptions = apiCall(routes.setWebComponentOptions);\r\n    public deleteWebComponentOptions = apiCall(routes.deleteWebComponentOptions);\r\n\r\n    public clearCache() {\r\n        Object.keys(this).forEach(key => {\r\n            if (this[key] && this[key].clearCache) {\r\n                this[key].clearCache();\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\ninterface IApiCall<TParams, TBody, TResponse> {\r\n    (params?: TParams, body?: TBody): Promise<TResponse>;\r\n    clearCache: () => void;\r\n}\r\n\r\nconst apiCall = <TParams, TBody, TResponse>(\r\n    route: ApiRoute<TParams, TBody, TResponse>,\r\n    cacheResponse: boolean = false) => {\r\n    let cache: any;\r\n    const method = route.method.toLocaleLowerCase();\r\n\r\n    const call: any = (params: TParams, data: TBody): Promise<TResponse> => {\r\n        if (cacheResponse && cache) {\r\n            return Promise.resolve(cache);\r\n        }\r\n\r\n        let path = route.path;\r\n        // replace params in path\r\n        if (params) {\r\n            Object.keys(params).forEach(key => {\r\n                path = path.replace(':' + key, params[key]);\r\n            });\r\n        }\r\n        return fetch(inernalModuleContext.moduleApiPath + path, {\r\n            method,\r\n            body: data && JSON.stringify(data),\r\n            headers: {\r\n                \"Content-Type\": \"application/json; charset=utf-8\",\r\n            }\r\n        })\r\n            .then(async response => {\r\n                const text = await response.text();\r\n\r\n                if (response.status.toString().startsWith('2')) {\r\n                    if (!text) {\r\n                        return undefined;\r\n                    }\r\n                    return JSON.parse(text);\r\n                }\r\n\r\n                console.log(text);\r\n                throw Error(text);\r\n            })\r\n            .then(response => {\r\n                if (cacheResponse) {\r\n                    cache = response;\r\n                }\r\n                return response;\r\n            });\r\n    };\r\n\r\n    call.clearCache = () => {\r\n        cache = undefined;\r\n    };\r\n\r\n    return call as IApiCall<TParams, TBody, TResponse>;\r\n};\r\n\r\nexport const apiClient = new ApiClient();","import * as SvgIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport * as classname from 'classnames';\r\nimport * as React from 'react';\r\nimport { ILoadingProps } from './ILoadingProps';\r\n\r\nimport './Loading.css';\r\n\r\nexport default class Loading extends React.Component<ILoadingProps> {\r\n  public static defaultProps: Partial<ILoadingProps> = {\r\n    iconSize: \"4x\"\r\n  };\r\n\r\n  public render() {\r\n    return (\r\n      <section className={classname('Loading', { 'center': this.props.center })}>\r\n        <FontAwesome.FontAwesomeIcon icon={SvgIcons.faSpinner} size={this.props.iconSize} spin={true} />\r\n        {this.props.text && (\r\n          <div className=\"text\">{this.props.text}</div>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { IRoundButtonProps } from './IRoundButtonProps';\r\nimport './RoundButton.css';\r\n\r\nexport default class RoundButton extends React.Component<IRoundButtonProps> {\r\n  public render() {\r\n    return <Link className=\"RoundButton\" to={this.props.to} role=\"button\">{this.props.children}</Link>;\r\n  }\r\n}\r\n","import * as SvgIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport RoundButton from '../RoundButton/RoundButton';\r\nimport { IPageNotFoundProps } from './IPageNotFoundProps';\r\n\r\nimport './PageNotFound.css'\r\n\r\nexport default class PageNotFound extends React.Component<IPageNotFoundProps> {\r\n  public render() {\r\n    return (\r\n      <div className=\"PageNotFound\">\r\n        <h1><FontAwesome.FontAwesomeIcon icon={SvgIcons.faQuestionCircle} /> 404</h1>\r\n        <h2>No page defined for path: {this.props.location.pathname}</h2>\r\n        <RoundButton to=\"/admin\">\r\n          <FontAwesome.FontAwesomeIcon icon={SvgIcons.faCog} /> Admin\r\n        </RoundButton>\r\n        <RoundButton to=\"/\">\r\n          <FontAwesome.FontAwesomeIcon icon={SvgIcons.faHome} /> Home\r\n        </RoundButton>\r\n      </div >\r\n    );\r\n  }\r\n}","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport CarouselLayout from \"./CarouselLayout\";\r\n\r\nexport const carouselLayoutDefinition: IReactronComponentDefinition = {\r\n    component: CarouselLayout,\r\n    description: 'Carousel Layout',\r\n    displayName: 'Carousel Layout',\r\n    name: 'CarouselLayout',\r\n    type: 'layout',\r\n    fields: []\r\n};","import * as React from 'react';\r\n\r\nimport './CarouselLayout.css';\r\n\r\nexport default class CarouselLayout extends React.Component<any, any> {\r\n  constructor(props: any) {\r\n    super(props);\r\n  }\r\n\r\n  public render() {\r\n    return <section className=\"CarouselLayout\">CarouselLayout</section>;\r\n  }\r\n}\r\n","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport GridLayout from \"./GridLayout\";\r\n\r\nexport const gridLayoutDefinition: IReactronComponentDefinition = {\r\n  component: GridLayout,\r\n  description: 'Grid Layout',\r\n  displayName: 'Grid Layout',\r\n  name: 'GridLayout',\r\n  type: 'layout',\r\n  fields: [\r\n    { displayName: 'Grid Style', name: 'gridStyle', valueType: 'style' },\r\n    { displayName: 'Tile Style', name: 'tileStyle', valueType: 'style' },\r\n    {\r\n      displayName: 'Grid tiles',\r\n      name: 'tiles',\r\n      valueType: 'object',\r\n      isArray: true,\r\n      fields: [\r\n        { displayName: 'Row', name: 'row', valueType: 'number', defaultValue: 1, stepSize: 1, minValue: 1, maxValue: 20 },\r\n        { displayName: 'Column', name: 'col', valueType: 'number', defaultValue: 1, stepSize: 1, minValue: 1, maxValue: 20 },\r\n        { displayName: 'Row span', name: 'rowspan', valueType: 'number', defaultValue: 1, stepSize: 1, minValue: 1, maxValue: 20 },\r\n        { displayName: 'Column span', name: 'colspan', valueType: 'number', defaultValue: 1, stepSize: 1, minValue: 1, maxValue: 20 },\r\n        { displayName: 'Content', name: 'content', valueType: 'webComponent' },\r\n        { displayName: 'Style', name: 'style', valueType: 'style' }\r\n      ],\r\n      inputControl: { module: 'reactron', component: 'GridLayoutTileHeader' }\r\n    }\r\n  ]\r\n};","import * as React from 'react';\r\nimport { IGridLayoutOptions, IGridLayoutTileOptions } from './IGridLayoutTileOptions';\r\n\r\nimport './GridLayout.css';\r\n\r\nexport default class GridLayout extends React.Component<IGridLayoutOptions> {\r\n  constructor(props: IGridLayoutOptions) {\r\n    super(props);\r\n\r\n    this.renderTile = this.renderTile.bind(this);\r\n  }\r\n\r\n  private renderTile(tile: IGridLayoutTileOptions, index: number) {\r\n    const style = { ...this.props.tileStyle, ...tile.style };\r\n    style.gridColumn = tile.col.toString();\r\n    if (tile.colspan > 1) {\r\n      style.gridColumn += ' / span ' + tile.colspan;\r\n    }\r\n\r\n    style.gridRow = tile.row.toString();\r\n    if (tile.rowspan > 1) {\r\n      style.gridRow += ' / span ' + tile.rowspan;\r\n    }\r\n    return (\r\n      <div className=\"GridTile\" key={index} style={style}>\r\n        {this.context.renderComponent({ id: tile.content })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <section className=\"GridLayout\" style={this.props.gridStyle}>\r\n        {this.props.tiles.map(this.renderTile)}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import { IInputComponentProps } from \"@schirkan/reactron-interfaces\";\r\nimport React from \"react\";\r\nimport { IGridLayoutTileOptions } from \"./IGridLayoutTileOptions\";\r\n\r\nconst style = {\r\n  width: '100%',\r\n  textOverflow: 'ellipsis',\r\n  overflow: 'hidden'\r\n};\r\n\r\nexport class GridLayoutTileHeader extends React.Component<IInputComponentProps> {\r\n  public render() {\r\n    const tile = this.props.value as IGridLayoutTileOptions || {};\r\n    return (<div style={style}>[ {tile.row} | {tile.col} | {tile.content} ]</div>);\r\n  }\r\n}","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport { GridLayoutTileHeader } from \"./GridLayoutTileHeader\";\r\n\r\nexport const gridLayoutTileHeaderDefinition: IReactronComponentDefinition = {\r\n  component: GridLayoutTileHeader,\r\n  displayName: 'GridLayoutTileHeader',\r\n  name: 'GridLayoutTileHeader',\r\n  type: 'admin-input'\r\n};","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport IFrame from \"./IFrame\";\r\n\r\nexport const iFrameDefinition: IReactronComponentDefinition = {\r\n    component: IFrame,\r\n    description: 'IFrame Component',\r\n    displayName: 'IFrame',\r\n    name: 'IFrame',\r\n    fields: [\r\n        { displayName: 'URL', name: 'url', valueType: 'string' }\r\n    ]\r\n};","import * as React from 'react';\r\nimport { IIFrameOptions } from './IIFrameOptions';\r\n\r\nimport './IFrame.css';\r\n\r\nexport default class IFrame extends React.Component<IIFrameOptions> {\r\n  public render() {\r\n    return <iframe className=\"ui-iframe\" src={this.props.url} />;\r\n  }\r\n}\r\n","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport ListLayout from \"./ListLayout\";\r\n\r\nexport const listLayoutDefinition: IReactronComponentDefinition = {\r\n  component: ListLayout,\r\n  description: 'List Layout',\r\n  displayName: 'List Layout',\r\n  name: 'ListLayout',\r\n  type: 'layout',\r\n  fields: [\r\n    { displayName: 'List Style', name: 'listStyle', valueType: 'style' },\r\n    { displayName: 'Item Style', name: 'itemStyle', valueType: 'style' },\r\n    {\r\n      displayName: 'List items',\r\n      name: 'items',\r\n      valueType: 'object',\r\n      isArray: true,\r\n      fields: [\r\n        { displayName: 'Content', name: 'content', valueType: 'webComponent' },\r\n        { displayName: 'Style', name: 'style', valueType: 'style' }\r\n      ],\r\n      inputControl: { module: 'reactron', component: 'ListLayoutItemHeader' }\r\n    }\r\n  ]\r\n};","import * as React from 'react';\r\nimport { IListLayoutItemOptions } from \"./IListLayoutItemOptions\";\r\nimport { IListLayoutOptions } from \"./IListLayoutOptions\";\r\n\r\nimport './ListLayout.css';\r\n\r\nexport default class ListLayout extends React.Component<IListLayoutOptions> {\r\n  constructor(props: IListLayoutOptions) {\r\n    super(props);\r\n\r\n    this.renderListItem = this.renderListItem.bind(this);\r\n  }\r\n\r\n  private renderListItem(item: IListLayoutItemOptions, index: number) {\r\n    const style = { ...this.props.itemStyle, ...item.style };\r\n\r\n    return (\r\n      <div className=\"ListItem\" key={index} style={style}>\r\n        {this.context.renderComponent({ id: item.content })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <section className=\"ListLayout\">\r\n        {this.props.items.map(this.renderListItem)}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import { IInputComponentProps } from \"@schirkan/reactron-interfaces\";\r\nimport React from \"react\";\r\nimport { IListLayoutItemOptions } from \"./IListLayoutItemOptions\";\r\n\r\nconst style = {\r\n  width: '100%',\r\n  textOverflow: 'ellipsis',\r\n  overflow: 'hidden'\r\n};\r\n\r\nexport class ListLayoutItemHeader extends React.Component<IInputComponentProps> {\r\n  public render() {\r\n    const item = this.props.value as IListLayoutItemOptions || {};\r\n    return (<div style={style}>[ {item.content} ]</div>);\r\n  }\r\n}","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport { ListLayoutItemHeader } from \"./ListLayoutItemHeader\";\r\n\r\nexport const listLayoutItemHeaderDefinition: IReactronComponentDefinition = {\r\n  component: ListLayoutItemHeader,\r\n  displayName: 'ListLayoutItemHeader',\r\n  name: 'ListLayoutItemHeader',\r\n  type: 'admin-input'\r\n};","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport MarkDown from \"./MarkDown\";\r\n\r\nexport const markDownDefinition: IReactronComponentDefinition = {\r\n  component: MarkDown,\r\n  description: 'MarkDown Component',\r\n  displayName: 'MarkDown',\r\n  name: 'MarkDown',\r\n  fields: [\r\n    { displayName: 'Text', name: 'text', valueType: 'string', textRows: 10 }\r\n  ]\r\n};","import * as React from 'react';\r\nimport * as ReactMarkdown from 'react-markdown';\r\nimport { IMarkDownOptions } from './IMarkDownProps';\r\n\r\nimport './MarkDown.css';\r\n\r\nexport default class MarkDown extends React.Component<IMarkDownOptions> {\r\n  public render() {\r\n    return (\r\n      <section className=\"MarkDown\">\r\n        <ReactMarkdown source={this.props.text} />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport Notifications from \"./Notifications\";\r\n\r\nexport const notificationsDefinition: IReactronComponentDefinition = {\r\n    component: Notifications,\r\n    description: 'Notifications',\r\n    displayName: 'Notifications',\r\n    name: 'Notifications',\r\n    fields: []\r\n};","import * as React from 'react';\r\n\r\nimport './Notifications.css';\r\n\r\nexport default class Notifications extends React.Component<any, any> {\r\n  constructor(props: any) {\r\n    super(props);\r\n  }\r\n\r\n  public render() {\r\n    return <section className=\"Notifications\">Notifications</section>;\r\n  }\r\n}\r\n","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport { carouselLayoutDefinition } from \"./CarouselLayout/CarouselLayoutDefinition\";\r\nimport { gridLayoutDefinition } from \"./GridLayout/GridLayoutDefinition\";\r\nimport { gridLayoutTileHeaderDefinition } from \"./GridLayout/GridLayoutTileHeaderDefinition\";\r\nimport { iFrameDefinition } from \"./IFrame/IFrameDefinition\";\r\nimport { listLayoutDefinition } from \"./ListLayout/ListLayoutDefinition\";\r\nimport { listLayoutItemHeaderDefinition } from \"./ListLayout/ListLayoutItemHeaderDefinition\";\r\nimport { markDownDefinition } from \"./MarkDown/MarkDownDefinition\";\r\nimport { notificationsDefinition } from \"./Notifications/NotificationsDefinition\";\r\nimport { welcomeDefinition } from \"./Welcome/WelcomeDefinition\";\r\n\r\nexport const components: IReactronComponentDefinition[] = [\r\n    listLayoutDefinition,\r\n    listLayoutItemHeaderDefinition,\r\n    carouselLayoutDefinition,\r\n    gridLayoutDefinition,\r\n    gridLayoutTileHeaderDefinition,\r\n    welcomeDefinition,\r\n    markDownDefinition,\r\n    notificationsDefinition,\r\n    iFrameDefinition\r\n];","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport Welcome from \"./Welcome\";\r\n\r\nexport const welcomeDefinition: IReactronComponentDefinition = {\r\n    component: Welcome,\r\n    description: 'Welcome Component',\r\n    displayName: 'Welcome',\r\n    name: 'Welcome',\r\n    fields: []\r\n};","import * as SvgIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport { IServerInfo } from '@schirkan/reactron-interfaces';\r\nimport * as React from 'react';\r\nimport { apiClient } from '../../ApiClient';\r\nimport RoundButton from '../../components/RoundButton/RoundButton';\r\nimport logo from './logo.svg';\r\n\r\nimport './Welcome.css';\r\n\r\ninterface IWelcomeState {\r\n  info?: IServerInfo;\r\n}\r\n\r\nexport default class Welcome extends React.Component<any, IWelcomeState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  public componentDidMount() {\r\n    apiClient.getServerInfo().then(info => {\r\n      this.setState({ info });\r\n    });\r\n  }\r\n\r\n  public render() {\r\n    let info;\r\n\r\n    if (this.state.info) {\r\n      info = (<div className=\"info\">\r\n        To edit this page click Admin-Button or visit<br /><br />\r\n        <i>http://{this.state.info.ip}:3000/admin</i>\r\n      </div>);\r\n    }\r\n    return (\r\n      <section className=\"Welcome\">\r\n        <RoundButton to=\"/admin\">\r\n          <FontAwesome.FontAwesomeIcon icon={SvgIcons.faCog} />\r\n          Admin\r\n        </RoundButton>\r\n        <img src={logo} className=\"logo\" alt=\"logo\" />\r\n        <div className=\"title\">Welcome to Reactron</div>\r\n        {info}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import * as SvgCore from '@fortawesome/fontawesome-svg-core';\r\nimport * as BrandIcons from '@fortawesome/free-brands-svg-icons';\r\nimport * as RegularIcons from '@fortawesome/free-regular-svg-icons';\r\nimport * as SolidIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport { IComponentLoader, IModuleRepositoryItem, IReactronComponentDefinition } from '@schirkan/reactron-interfaces';\r\nimport moment from 'moment';\r\nimport momentTimezone from 'moment-timezone';\r\nimport * as React from 'react';\r\nimport * as ReactDom from 'react-dom';\r\nimport * as ReactRouterDom from 'react-router-dom';\r\nimport { apiClient } from './ApiClient';\r\nimport { inernalModuleContext } from './inernalModuleContext';\r\nimport { components as internalComponents } from \"./internalModule\";\r\n\r\n// tslint:disable:no-string-literal\r\n\r\nconst SystemJS = (window as any).System as SystemJSLoader.System;\r\n\r\nconst externalModules = {};\r\nexternalModules['react'] = React;\r\nexternalModules['react-dom'] = ReactDom;\r\nexternalModules['react-router-dom'] = ReactRouterDom;\r\nexternalModules['moment'] = { default: moment };\r\nexternalModules['moment-timezone'] = { default: momentTimezone };\r\nexternalModules['@fortawesome/fontawesome-svg-core'] = SvgCore;\r\nexternalModules['@fortawesome/free-solid-svg-icons'] = SolidIcons;\r\nexternalModules['@fortawesome/free-regular-svg-icons'] = RegularIcons;\r\nexternalModules['@fortawesome/free-brands-svg-icons'] = BrandIcons;\r\nexternalModules['@fortawesome/react-fontawesome'] = FontAwesome;\r\n\r\nif (inernalModuleContext.electron) {\r\n    externalModules['electron'] = inernalModuleContext.electron;\r\n}\r\n\r\nObject.keys(externalModules).forEach(key => {\r\n    const moduleExport = externalModules[key];\r\n    SystemJS.register(key, [], exports => ({ execute: () => exports(moduleExport) }));\r\n});\r\n\r\nexport class ComponentLoader implements IComponentLoader {\r\n    private allComponentsLoaded = false;\r\n    private moduleComponents: { [moduleName: string]: IReactronComponentDefinition[] } = {\r\n        'reactron': internalComponents\r\n    };\r\n\r\n    public async getModuleComponents(moduleName: string): Promise<IReactronComponentDefinition[] | undefined> {\r\n        if (!this.moduleComponents[moduleName]) {\r\n            const modules = await apiClient.getModules();\r\n            const m = modules.find(x => x.name === moduleName);\r\n\r\n            if (!m) {\r\n                console.error('Module not found: ' + moduleName);\r\n                return;\r\n            }\r\n\r\n            await this.registerModuleComponents(m);\r\n        }\r\n\r\n        return this.moduleComponents[moduleName];\r\n    }\r\n\r\n    private async registerModuleComponents(m: IModuleRepositoryItem): Promise<void> {\r\n        if (!m.browserFile) {\r\n            console.log('Module has no browserFile: ' + m.name);\r\n            return;\r\n        }\r\n\r\n        if (this.moduleComponents[m.name]) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            console.log(m.browserFile);\r\n\r\n            const browserFileContent = await SystemJS.import('\\\\' + m.browserFile);\r\n            // tslint:disable-next-line:no-string-literal\r\n            const components = browserFileContent['components'];\r\n\r\n            if (components && typeof components === 'object' && Array.isArray(components)) {\r\n                this.moduleComponents[m.name] = components;\r\n            }\r\n            console.log('Components loaded for module: ' + m.name);\r\n        } catch (error) {\r\n            console.error('Error loading components for module: ' + m.name, error);\r\n        }\r\n    }\r\n\r\n    public async getAllComponents(): Promise<{ [moduleName: string]: IReactronComponentDefinition[] }> {\r\n        if (this.allComponentsLoaded) {\r\n            return this.moduleComponents;\r\n        }\r\n        const modules = await apiClient.getModules();\r\n        for (const m of modules) {\r\n            await this.registerModuleComponents(m);\r\n        }\r\n        this.allComponentsLoaded = true;\r\n        return this.moduleComponents;\r\n    }\r\n}\r\n\r\nexport const componentLoader = new ComponentLoader();","import { SizeProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { IReactronComponentContext } from '@schirkan/reactron-interfaces';\r\nimport React from 'react';\r\nimport { BrowserModuleContext } from \"./BrowserModuleContext\";\r\nimport { componentLoader } from './ComponentLoader';\r\nimport Loading from \"./components/Loading/Loading\";\r\nimport WebComponent, { IWebComponentProps } from \"./components/WebComponent/WebComponent\";\r\n\r\nexport class WebComponentContext extends BrowserModuleContext implements IReactronComponentContext {\r\n    public renderLoading: (text?: string, iconSize?: SizeProp) => any;\r\n    public renderComponent: (props: IWebComponentProps) => any;\r\n    public readonly componentLoader = componentLoader;\r\n\r\n    constructor(moduleName: string, public readonly componentName: string) {\r\n        super(moduleName);\r\n\r\n        this.renderComponent = (props: IWebComponentProps) => {\r\n            return <WebComponent {...props} />;\r\n        };\r\n\r\n        this.renderLoading = (text?: string, iconSize?: SizeProp) => {\r\n            return <Loading text={text} iconSize={iconSize} />;\r\n        };\r\n    }\r\n}\r\n\r\nexport const WebComponentContextType = React.createContext<IReactronComponentContext>(new WebComponentContext('', ''));","import * as SvgIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport RoundButton from '../RoundButton/RoundButton';\r\nimport { IComponentNotFoundProps } from './IComponentNotFoundProps';\r\n\r\nimport './ComponentNotFound.css';\r\n\r\nexport default class ComponentNotFound extends React.Component<IComponentNotFoundProps> {\r\n  public static defaultProps: Partial<IComponentNotFoundProps> = {\r\n    iconSize: \"4x\"\r\n  };\r\n\r\n  public render() {\r\n    const text = [];\r\n    if (this.props.id) {\r\n      text.push('Id: ' + this.props.id);\r\n    }\r\n    if (this.props.componentName) {\r\n      text.push('Component: ' + this.props.componentName);\r\n    }\r\n    if (this.props.moduleName) {\r\n      text.push('Module: ' + this.props.moduleName);\r\n    }\r\n\r\n    return (\r\n      <section className=\"ComponentNotFound\">\r\n        <FontAwesome.FontAwesomeIcon icon={SvgIcons.faExclamationTriangle} size={this.props.iconSize} />\r\n        <div className=\"text\">Component not found: {text.join(' | ')}</div>\r\n        <RoundButton to=\"/admin\">\r\n          <FontAwesome.FontAwesomeIcon icon={SvgIcons.faCog} /> Admin\r\n        </RoundButton>\r\n      </section>\r\n    );\r\n  }\r\n}","import * as React from 'react';\r\n\r\ninterface IErrorBoundaryState {\r\n  error: any;\r\n}\r\n\r\nexport default class ErrorBoundary extends React.Component<any, IErrorBoundaryState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = { error: null };\r\n  }\r\n\r\n  public componentDidCatch(error: any, info: any) {\r\n    console.log(error);\r\n    console.log(info);\r\n    this.setState({ error });\r\n  }\r\n\r\n  public render() {\r\n    if (this.state.error) {\r\n      return <h1>Something went wrong.</h1>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}","import { IReactronComponentContext, IReactronComponentDefinition, IWebComponentOptions } from '@schirkan/reactron-interfaces';\r\nimport * as React from 'react';\r\nimport { WebComponentContext } from 'src/browser/WebComponentContext';\r\nimport { apiClient } from '../../ApiClient';\r\nimport { componentLoader } from '../../ComponentLoader';\r\nimport { WebComponentContextType } from '../../WebComponentContext';\r\nimport ComponentNotFound from '../ComponentNotFound/ComponentNotFound';\r\nimport ErrorBoundary from '../ErrorBoundary/ErrorBoundary';\r\nimport Loading from '../Loading/Loading';\r\n\r\nimport './WebComponent.css';\r\n\r\nexport interface IWebComponentProps {\r\n  id?: string;\r\n  moduleName?: string;\r\n  componentName?: string;\r\n  options?: any;\r\n}  \r\n\r\ninterface IWebComponentState {\r\n  componentFound?: boolean;\r\n  componentContext?: IReactronComponentContext;\r\n  componentDefinition?: IReactronComponentDefinition;\r\n  componentOptions?: IWebComponentOptions;\r\n}\r\n\r\nexport default class WebComponent extends React.Component<IWebComponentProps, IWebComponentState> {\r\n  constructor(props: IWebComponentProps) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: IWebComponentProps, prevState: IWebComponentState) {\r\n    if (this.props.id !== prevProps.id ||\r\n      this.props.moduleName !== prevProps.moduleName ||\r\n      this.props.componentName !== prevProps.componentName ||\r\n      this.props.options !== prevProps.options) {\r\n      this.loadComponent();\r\n    }\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this.loadComponent();\r\n  }\r\n\r\n  private async loadComponent() {\r\n    try {\r\n      let webComponentOptions: IWebComponentOptions | undefined;\r\n\r\n      // nur mit der ID lesen\r\n      if (this.props.id) {\r\n        const allComponentOptions = await apiClient.getWebComponentOptions();\r\n        webComponentOptions = allComponentOptions.find(x => x.id === this.props.id);\r\n      } else if (this.props.moduleName && this.props.componentName) {\r\n        webComponentOptions = {\r\n          id: '',\r\n          moduleName: this.props.moduleName,\r\n          componentName: this.props.componentName,\r\n          options: this.props.options,\r\n        };\r\n      }\r\n\r\n      if (!webComponentOptions) {\r\n        this.setState({ componentFound: false });\r\n        return;\r\n      }\r\n\r\n      const moduleComponents = await componentLoader.getModuleComponents(webComponentOptions.moduleName);\r\n      if (!moduleComponents) {\r\n        this.setState({ componentFound: false });\r\n        return;\r\n      }\r\n\r\n      const componentName = webComponentOptions.componentName;\r\n      const componentDefinition = moduleComponents.find(x => x.name === componentName);\r\n      if (!componentDefinition || !componentDefinition.component) {\r\n        this.setState({ componentFound: false });\r\n        return;\r\n      }\r\n\r\n      this.setState({\r\n        componentContext: new WebComponentContext(webComponentOptions.moduleName, webComponentOptions.componentName),\r\n        componentDefinition,\r\n        componentOptions: webComponentOptions,\r\n        componentFound: true\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      this.setState({ componentFound: false });\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    let content = <Loading center={true} />;\r\n\r\n    if (this.state.componentFound === false) {\r\n      content = <ComponentNotFound {...this.props} />;\r\n    }\r\n\r\n    if (this.state.componentDefinition && this.state.componentDefinition.component && this.state.componentContext) {\r\n      const Component = this.state.componentDefinition.component as typeof React.Component;\r\n\r\n      // set contextType\r\n      if(!Component.contextType){\r\n        Component.contextType = WebComponentContextType;\r\n      }\r\n\r\n      const props = this.state.componentOptions && this.state.componentOptions.options || {}; \r\n\r\n      // render context and component\r\n      content = (\r\n        <WebComponentContextType.Provider value={this.state.componentContext}>\r\n          <Component {...props} />\r\n        </WebComponentContextType.Provider>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <section className=\"WebComponent\">\r\n        <ErrorBoundary>\r\n          {content}\r\n        </ErrorBoundary>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import { IWebPageOptions } from '@schirkan/reactron-interfaces';\r\nimport moment from 'moment';\r\nimport * as React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport { inernalModuleContext } from 'src/browser/inernalModuleContext';\r\nimport { apiClient } from '../../ApiClient';\r\nimport Loading from '../Loading/Loading';\r\nimport PageNotFound from '../PageNotFound/PageNotFound';\r\nimport WebComponent from '../WebComponent/WebComponent';\r\n\r\nimport './App.css';\r\n\r\n// load moment locales\r\nimport 'moment/locale/de';\r\nimport 'moment/locale/es';\r\nimport 'moment/locale/fr';\r\nimport 'moment/locale/it';\r\nimport 'moment/locale/ru';\r\n\r\nexport interface IAppState {\r\n  pages?: IWebPageOptions[];\r\n}\r\n\r\nexport default class App extends React.Component<{}, IAppState> {\r\n  private reloadTimer: number;\r\n  private reloadWait: number = 2000;\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {};\r\n    this.reload = this.reload.bind(this);\r\n    this.triggerReload = this.triggerReload.bind(this);\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this.init();\r\n\r\n    // register page/component change event\r\n    if (inernalModuleContext.topics) {\r\n      inernalModuleContext.topics.subscribe('pages-updated', this.triggerReload);\r\n      inernalModuleContext.topics.subscribe('components-updated', this.triggerReload);\r\n      inernalModuleContext.topics.subscribe('system-settings-updated', this.triggerReload);\r\n    }\r\n  }\r\n\r\n  private async init() {\r\n    // load settings\r\n    const settings = await apiClient.getSettings();\r\n    moment.locale(settings.lang);\r\n\r\n    // load pages\r\n    const pages = await apiClient.getWebPages();\r\n    return this.setState({ pages });\r\n  }\r\n\r\n  private triggerReload() {\r\n    console.log('triggerReload', arguments);\r\n    window.clearTimeout(this.reloadTimer);\r\n    this.reloadTimer = window.setTimeout(this.reload, this.reloadWait);\r\n  }\r\n\r\n  private reload() {\r\n    apiClient.getWebPages.clearCache();\r\n    apiClient.getWebComponentOptions.clearCache();\r\n    this.init();\r\n  }\r\n\r\n  public renderPage(id: string, style: any) {\r\n    return () => (\r\n      <section className=\"WebPage\" style={style}>\r\n        <WebComponent id={id} />\r\n      </section>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    let content = <Loading text=\"Loading Reactron...\" center={true} />;\r\n\r\n    if (this.state.pages) {\r\n      content = (\r\n        <Router>\r\n          <Switch>\r\n            {this.state.pages.map(item =>\r\n              (<Route key={item.path} path={item.path} exact={item.path === '/'} component={this.renderPage(item.webComponentId, item.style)} />)\r\n            )}\r\n            <Route component={PageNotFound} />\r\n          </Switch>\r\n        </Router>\r\n      );\r\n    }\r\n\r\n    return <section className=\"App\">{content}</section>;\r\n  }\r\n}\r\n","// main entry file for react\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport App from './browser/components/App/App';\r\nimport ErrorBoundary from './browser/components/ErrorBoundary/ErrorBoundary';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <ErrorBoundary><App /></ErrorBoundary>,\r\n  document.getElementById('root') as HTMLElement\r\n);","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";"],"sourceRoot":""}