{"version":3,"sources":["browser/BrowserModuleContext.ts","common/apiRoutes.ts","browser/ApiClient.ts","common/topics.ts","browser/inernalModuleContext.ts","browser/components/Loading/Loading.tsx","browser/components/RoundButton/RoundButton.tsx","browser/components/PageNotFound/PageNotFound.tsx","browser/internalModule/CarouselLayout/CarouselLayoutDefinition.tsx","browser/internalModule/CarouselLayout/CarouselLayout.tsx","browser/internalModule/GridLayout/GridLayoutDefinition.tsx","browser/internalModule/GridLayout/GridLayout.tsx","browser/internalModule/IFrame/IFrameDefinition.tsx","browser/internalModule/IFrame/IFrame.tsx","browser/internalModule/ListLayout/ListLayoutDefinition.tsx","browser/internalModule/ListLayout/ListLayout.tsx","browser/internalModule/MarkDown/MarkDownDefinition.tsx","browser/internalModule/MarkDown/MarkDown.tsx","browser/internalModule/Notifications/NotificationsDefinition.tsx","browser/internalModule/Notifications/Notifications.tsx","browser/internalModule/index.ts","browser/internalModule/Welcome/WelcomeDefinition.tsx","browser/internalModule/Welcome/Welcome.tsx","browser/ComponentLoader.ts","browser/WebComponentContext.tsx","browser/components/ComponentNotFound/ComponentNotFound.tsx","browser/components/ErrorBoundary/ErrorBoundary.tsx","browser/components/WebComponent/WebComponent.tsx","browser/components/App/App.tsx","index.tsx","browser/internalModule/Welcome/logo.svg"],"names":["electron","backendService","topics","Store","settings","ApiRoute","path","method","Object","classCallCheck","this","routes","getServices","getServiceOptions","setServiceOptions","getModules","addModule","deleteModule","rebuildModule","updateModule","checkUpdates","getWebPages","setWebPage","deleteWebPage","getServerInfo","exitApplication","restartApplication","shutdownSystem","rebootSystem","resetApplication","getSettings","setSettings","getWebComponentOptions","setWebComponentOptions","deleteWebComponentOptions","ApiClient","getAllServices","apiCall","createClass","key","value","_this","keys","forEach","clearCache","route","cache","cacheResponse","arguments","length","undefined","toLocaleLowerCase","call","params","data","Promise","resolve","replace","fetch","inernalModuleContext","moduleApiPath","body","JSON","stringify","headers","Content-Type","then","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","response","text","wrap","_context","prev","next","sent","status","toString","startsWith","abrupt","parse","console","log","Error","stop","_x","apply","apiClient","topicNames","moduleStoreCache","serviceCache","initModuleContext","window","require","remote","BackendService","instance","subscribe","event","BrowserModuleContext","moduleName","moduleStorage","getService","moduleStoreKey","name","escapedModuleName","serviceName","explicitModuleName","serviceKey","serviceManager","get","Loading","react","className","classname","center","props","react_fontawesome_index_es","icon","SvgIcons","size","iconSize","spin","React","defaultProps","RoundButton","Link","to","role","children","PageNotFound","location","pathname","RoundButton_RoundButton_RoundButton","carouselLayoutDefinition","component","context","_this2","style","lib","assign","autoPlay","infiniteLoop","showThumbs","showArrows","showStatus","options","items","map","id","renderComponent","description","displayName","type","fields","valueType","defaultValue","minValue","stepSize","maxValue","values","inputControl","createElement","interval","isArray","gridLayoutDefinition","GridLayout","possibleConstructorReturn","getPrototypeOf","renderTile","bind","assertThisInitialized","tile","index","objectSpread","tileStyle","gridColumn","col","colspan","gridRow","row","rowspan","content","gridStyle","tiles","width","textOverflow","overflow","iFrameDefinition","src","url","listLayoutDefinition","ListLayout","renderListItem","item","itemStyle","markDownDefinition","react_markdown_default","source","textRows","notificationsDefinition","Notifications","components","Welcome","state","info","setState","ip","logo","alt","SystemJS","System","externalModules","ReactDom","ReactRouterDom","default","numeral","moment","momentTimezone","SvgCore","SolidIcons","RegularIcons","BrandIcons","FontAwesome","moduleExport","register","exports","execute","componentLoader","ComponentLoader","allComponentsLoaded","moduleComponents","reactron","internalComponents","_getModuleComponents","modules","m","find","x","error","registerModuleComponents","_registerModuleComponents","_callee2","browserFileContent","_context2","browserFile","import","Array","t0","_x2","_getAllComponents","_callee3","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_context3","Symbol","iterator","done","return","finish","WebComponentContext","_BrowserModuleContext","componentName","renderLoading","react_default","WebComponent_WebComponent_WebComponent","Loading_Loading_Loading","inherits","WebComponentContextType","createContext","ComponentNotFound","push","join","ErrorBoundary","WebComponent","prevProps","loadComponent","allComponentOptions","webComponentOptions","parentId","componentFound","getModuleComponents","componentDefinition","componentContext","componentOptions","ComponentNotFound_ComponentNotFound_ComponentNotFound","Component","contextType","Provider","ErrorBoundary_ErrorBoundary","App","reloadTimer","reloadWait","reload","triggerReload","onKeyDown","init","subscribeTopics","document","addEventListener","unsubscribeTopics","removeEventListener","e","evtobj","keyCode","ctrlKey","altKey","href","unsubscribe","locale","lang","pages","clearTimeout","setTimeout","BrowserRouter","Switch","Route","exact","renderPage","webComponentId","ReactDOM","App_App_App","getElementById","module","__webpack_require__","p"],"mappings":"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","file":"static/js/main.c01c396e.chunk.js","sourcesContent":["import { IBackendService, IModuleContext, IPubSub, ISystemSettings } from \"@schirkan/reactron-interfaces\";\r\nimport { apiClient } from \"./ApiClient\";\r\nimport { topicNames } from \"../common/topics\";\r\n\r\nlet electron: Electron.AllElectron;\r\nlet backendService: IBackendService;\r\nlet topics: IPubSub | undefined;\r\nlet Store: typeof ElectronStore;\r\n\r\nconst moduleStoreCache: { [key: string]: ElectronStore } = {};\r\nconst serviceCache: { [key: string]: any } = {};\r\nlet settings: ISystemSettings;\r\n\r\nexport const initModuleContext = async () => {\r\n  if (!settings) {\r\n    settings = await apiClient.getSettings();\r\n  }\r\n  \r\n  // check if env is electron\r\n  if ((window as any).require) {\r\n    electron = (window as any).require('electron');\r\n    backendService = electron.remote.require('./dist/server/BackendService').BackendService.instance;\r\n    topics = backendService.topics;\r\n    Store = electron.remote.require('electron-store');\r\n\r\n    // on settings change\r\n    topics.subscribe(topicNames.systemSettingsUpdated, (event, data: ISystemSettings) => {\r\n      settings = data;\r\n    });\r\n  }\r\n}\r\n\r\nexport class BrowserModuleContext implements IModuleContext {\r\n  public readonly electron: Electron.AllElectron;\r\n  public readonly backendService: IBackendService;\r\n  public readonly topics: IPubSub;\r\n  public readonly moduleStorage: ElectronStore;\r\n  public readonly moduleApiPath: string;\r\n  public getService: <TService = any>(serviceName: string, moduleName?: string | undefined) => TService | undefined;\r\n  public get settings(): Readonly<ISystemSettings> {\r\n    return settings;\r\n  }\r\n\r\n  constructor(public moduleName: string) {\r\n    this.electron = electron;\r\n    this.backendService = backendService;\r\n    this.topics = topics!;\r\n\r\n    const moduleStoreKey = 'module.' + moduleName;\r\n    if (Store && !moduleStoreCache[moduleStoreKey]) {\r\n      moduleStoreCache[moduleStoreKey] = new Store({ name: 'module.' + moduleName });\r\n    }\r\n    this.moduleStorage = moduleStoreCache[moduleStoreKey];\r\n\r\n    const escapedModuleName = moduleName.replace('/', '@');\r\n    this.moduleApiPath = '/api/modules/' + escapedModuleName;\r\n\r\n    this.getService = <TService>(serviceName: string, explicitModuleName?: string) => {\r\n      if (!this.backendService) {\r\n        console.log('Method getService() is not supported in browser environment.');\r\n        return undefined;\r\n      }\r\n      const serviceKey = (explicitModuleName || moduleName) + '.' + serviceName;\r\n      if (!serviceCache[serviceKey]) {\r\n        serviceCache[serviceKey] = this.backendService.serviceManager.get(explicitModuleName || moduleName, serviceName);\r\n      }\r\n      return serviceCache[serviceKey] as TService | undefined;\r\n    }\r\n  }\r\n}\r\n\r\n","import { ICommandResult, IModuleRepositoryItem, IServerInfo, IServiceRepositoryItem, ISystemSettings, IWebComponentOptions, IWebPageOptions } from '@schirkan/reactron-interfaces';\r\n\r\nexport class ApiRoute<TParams, TBody, TResponse = void>{\r\n    constructor(public path: string, public method: string) { }\r\n}\r\n\r\nexport const routes = {\r\n    getServices: new ApiRoute<undefined, undefined, IServiceRepositoryItem[]>('/service/', 'get'),\r\n    getServiceOptions: new ApiRoute<{ moduleName: string, serviceName: string }, undefined, object>('/service/:moduleName/:serviceName', 'get'),\r\n    setServiceOptions: new ApiRoute<{ moduleName: string, serviceName: string }, object>('/service/:moduleName/:serviceName', 'post'),\r\n\r\n    getModules: new ApiRoute<undefined, undefined, IModuleRepositoryItem[]>('/modules/', 'get'),\r\n    addModule: new ApiRoute<undefined, { repository: string }, ICommandResult[]>('/modules/', 'post'),\r\n    deleteModule: new ApiRoute<{ moduleName: string }, undefined, ICommandResult[]>('/modules/:moduleName', 'delete'),\r\n    rebuildModule: new ApiRoute<{ moduleName: string }, undefined, ICommandResult[]>('/modules/:moduleName/rebuild', 'post'),\r\n    updateModule: new ApiRoute<{ moduleName: string }, undefined, ICommandResult[]>('/modules/:moduleName/update', 'post'),\r\n    checkUpdates: new ApiRoute<{ moduleName: string }, undefined, ICommandResult[]>('/modules/checkUpdates/update', 'get'),\r\n\r\n    getWebPages: new ApiRoute<undefined, undefined, IWebPageOptions[]>('/pages/', 'get'),\r\n    setWebPage: new ApiRoute<undefined, IWebPageOptions, IWebPageOptions>('/pages/', 'post'),\r\n    deleteWebPage: new ApiRoute<{ id: string }, undefined>('/pages/:id', 'delete'),\r\n\r\n    getServerInfo: new ApiRoute<undefined, undefined, IServerInfo>('/app/', 'get'),\r\n    exitApplication: new ApiRoute<undefined, undefined>('/app/exitApplication', 'post'),\r\n    restartApplication: new ApiRoute<undefined, undefined>('/app/restartApplication', 'post'),\r\n    shutdownSystem: new ApiRoute<undefined, undefined>('/app/shutdownSystem', 'post'),\r\n    rebootSystem: new ApiRoute<undefined, undefined>('/app/restartSystem', 'post'),\r\n    resetApplication: new ApiRoute<undefined, undefined>('/app/resetApplication', 'post'),\r\n\r\n    getSettings: new ApiRoute<undefined, undefined, ISystemSettings>('/settings/', 'get'),\r\n    setSettings: new ApiRoute<undefined, ISystemSettings>('/settings/', 'post'),\r\n\r\n    getWebComponentOptions: new ApiRoute<undefined, undefined, IWebComponentOptions[]>('/components/', 'get'),\r\n    setWebComponentOptions: new ApiRoute<undefined, IWebComponentOptions, IWebComponentOptions>('/components/', 'post'),\r\n    deleteWebComponentOptions: new ApiRoute<{ id: string }, undefined>('/components/:id', 'delete'),\r\n};","import { ApiRoute, routes } from '../common/apiRoutes';\r\nimport { inernalModuleContext } from './inernalModuleContext';\r\n\r\nexport class ApiClient {\r\n  public getAllServices = apiCall(routes.getServices, true);\r\n  public getServiceOptions = apiCall(routes.getServiceOptions);\r\n  public setServiceOptions = apiCall(routes.setServiceOptions);\r\n\r\n  public getModules = apiCall(routes.getModules, true);\r\n  public addModule = apiCall(routes.addModule);\r\n  public checkUpdates = apiCall(routes.checkUpdates);\r\n  public deleteModule = apiCall(routes.deleteModule);\r\n  public rebuildModule = apiCall(routes.rebuildModule);\r\n  public updateModule = apiCall(routes.updateModule);\r\n\r\n  public getWebPages = apiCall(routes.getWebPages, true);\r\n  public setWebPage = apiCall(routes.setWebPage);\r\n  public deleteWebPage = apiCall(routes.deleteWebPage);\r\n\r\n  public getServerInfo = apiCall(routes.getServerInfo);\r\n  public exitApplication = apiCall(routes.exitApplication);\r\n  public restartApplication = apiCall(routes.restartApplication);\r\n  public shutdownSystem = apiCall(routes.shutdownSystem);\r\n  public rebootSystem = apiCall(routes.rebootSystem);\r\n  public resetApplication = apiCall(routes.resetApplication);\r\n\r\n  public getSettings = apiCall(routes.getSettings, true);\r\n  public setSettings = apiCall(routes.setSettings);\r\n\r\n  public getWebComponentOptions = apiCall(routes.getWebComponentOptions, true);\r\n  public setWebComponentOptions = apiCall(routes.setWebComponentOptions);\r\n  public deleteWebComponentOptions = apiCall(routes.deleteWebComponentOptions);\r\n\r\n  public clearCache() {\r\n    Object.keys(this).forEach(key => {\r\n      if (this[key] && this[key].clearCache) {\r\n        this[key].clearCache();\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\ninterface IApiCall<TParams, TBody, TResponse> {\r\n  (params?: TParams, body?: TBody): Promise<TResponse>;\r\n  clearCache: () => void;\r\n}\r\n\r\nconst apiCall = <TParams, TBody, TResponse>(\r\n  route: ApiRoute<TParams, TBody, TResponse>,\r\n  cacheResponse: boolean = false) => {\r\n  let cache: any;\r\n  const method = route.method.toLocaleLowerCase();\r\n\r\n  const call: any = (params: TParams, data: TBody): Promise<TResponse> => {\r\n    if (cacheResponse && cache) {\r\n      return Promise.resolve(cache);\r\n    }\r\n\r\n    let path = route.path;\r\n    // replace params in path\r\n    if (params) {\r\n      Object.keys(params).forEach(key => {\r\n        path = path.replace(':' + key, params[key]);\r\n      });\r\n    }\r\n    return fetch(inernalModuleContext.moduleApiPath + path, {\r\n      method,\r\n      body: data && JSON.stringify(data),\r\n      headers: {\r\n        \"Content-Type\": \"application/json; charset=utf-8\",\r\n      }\r\n    })\r\n      .then(async response => {\r\n        const text = await response.text();\r\n\r\n        if (response.status.toString().startsWith('2')) {\r\n          if (!text) {\r\n            return undefined;\r\n          }\r\n          return JSON.parse(text);\r\n        }\r\n\r\n        console.log(text);\r\n        throw Error(text);\r\n      })\r\n      .then(response => {\r\n        if (cacheResponse) {\r\n          cache = response;\r\n        }\r\n        return response;\r\n      });\r\n  };\r\n\r\n  call.clearCache = () => {\r\n    cache = undefined;\r\n  };\r\n\r\n  return call as IApiCall<TParams, TBody, TResponse>;\r\n};\r\n\r\nexport const apiClient = new ApiClient();","export const topicNames = {\r\n    systemSettingsUpdated: 'system-settings-updated',\r\n    componentsUpdated: 'components-updated',\r\n    pagesUpdated: 'pages-updated',\r\n    refresh: 'refresh',\r\n};","import { BrowserModuleContext } from './BrowserModuleContext';\r\nexport const inernalModuleContext = new BrowserModuleContext('reactron'); // internal module\r\n","import * as SvgIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport classname from 'classnames';\r\nimport * as React from 'react';\r\nimport { ILoadingProps } from './ILoadingProps';\r\n\r\nimport './Loading.css';\r\n\r\nexport default class Loading extends React.Component<ILoadingProps> {\r\n  public static defaultProps: Partial<ILoadingProps> = {\r\n    iconSize: \"4x\"\r\n  };\r\n\r\n  public render() {\r\n    return (\r\n      <section className={classname('Loading', { 'center': this.props.center })}>\r\n        <FontAwesome.FontAwesomeIcon icon={SvgIcons.faSpinner} size={this.props.iconSize} spin={true} />\r\n        {this.props.text && (\r\n          <div className=\"text\">{this.props.text}</div>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { IRoundButtonProps } from './IRoundButtonProps';\r\nimport './RoundButton.css';\r\n\r\nexport default class RoundButton extends React.Component<IRoundButtonProps> {\r\n  public render() {\r\n    return <Link className=\"RoundButton\" to={this.props.to} role=\"button\">{this.props.children}</Link>;\r\n  }\r\n}\r\n","import * as SvgIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport RoundButton from '../RoundButton/RoundButton';\r\nimport { IPageNotFoundProps } from './IPageNotFoundProps';\r\n\r\nimport './PageNotFound.css'\r\n\r\nexport default class PageNotFound extends React.Component<IPageNotFoundProps> {\r\n  public render() {\r\n    return (\r\n      <div className=\"PageNotFound\">\r\n        <h1><FontAwesome.FontAwesomeIcon icon={SvgIcons.faQuestionCircle} /> 404</h1>\r\n        <h2>No page defined for path: {this.props.location.pathname}</h2>\r\n        <RoundButton to=\"/admin\">\r\n          <FontAwesome.FontAwesomeIcon icon={SvgIcons.faCog} /> Admin\r\n        </RoundButton>\r\n        <RoundButton to=\"/\">\r\n          <FontAwesome.FontAwesomeIcon icon={SvgIcons.faHome} /> Home\r\n        </RoundButton>\r\n      </div >\r\n    );\r\n  }\r\n}","import { IReactronComponentDefinition, IInputComponentProps } from \"@schirkan/reactron-interfaces\";\r\nimport CarouselLayout from \"./CarouselLayout\";\r\nimport { CarouselProps } from \"react-responsive-carousel\";\r\n\r\nexport const carouselLayoutDefinition: IReactronComponentDefinition = {\r\n  component: CarouselLayout,\r\n  description: 'Carousel Layout',\r\n  displayName: 'Carousel Layout',\r\n  name: 'CarouselLayout',\r\n  type: 'layout',\r\n  fields: [\r\n    {\r\n      displayName: 'Options', name: 'options', valueType: 'object', fields: [\r\n        { displayName: 'Interval in ms', name: 'interval', valueType: 'number', defaultValue: 5000, minValue: 1000, stepSize: 50 },\r\n        { displayName: 'Transition Time in ms', name: 'transitionTime', valueType: 'number', defaultValue: 500, minValue: 100, stepSize: 50 },\r\n        { displayName: 'Show Indicators', name: 'showIndicators', valueType: 'boolean', defaultValue: true },\r\n        { displayName: 'Show Arrows', name: 'showArrows', valueType: 'boolean', defaultValue: false },\r\n        { displayName: 'Show Status', name: 'showStatus', valueType: 'boolean', defaultValue: false },\r\n        { displayName: 'Center Mode', name: 'centerMode', valueType: 'boolean', defaultValue: false },\r\n        { displayName: 'Center Slide Percentage', name: 'centerSlidePercentage', valueType: 'number', defaultValue: 70, minValue: 1, maxValue: 100, stepSize: 1 },\r\n        { displayName: 'Axis', name: 'axis', valueType: 'boolean', defaultValue: 'horizontal', values: [{ value: 'horizontal', text: 'horizontal' }, { value: 'vertical', text: 'vertical' }] },\r\n      ], inputControl: (props: IInputComponentProps) => {\r\n        const options = props.value.options as CarouselProps;\r\n        return <span>interval {options.interval} ms</span>;\r\n      }\r\n    },\r\n    { displayName: 'Content', name: 'items', valueType: 'webComponent', isArray: true },\r\n    { displayName: 'Carousel Style', name: 'style', valueType: 'style' },\r\n  ]\r\n};","import * as React from 'react';\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport { ICarouselLayoutOptions } from './ICarouselLayoutOptions';\r\nimport { IReactronComponentContext } from '@schirkan/reactron-interfaces';\r\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\r\n\r\nimport './CarouselLayout.css';\r\n\r\nexport default class CarouselLayout extends React.Component<ICarouselLayoutOptions> {\r\n  public context!: IReactronComponentContext;\r\n\r\n  public render() {\r\n    return (\r\n      <section className=\"CarouselLayout\" style={this.props.style}>\r\n        <Carousel autoPlay={true} infiniteLoop={true} showThumbs={false} showArrows={false} showStatus={false} {...this.props.options}>\r\n          {this.props.items.map(id => this.context.renderComponent({ id }))}\r\n        </Carousel>\r\n      </section>\r\n    );\r\n  }\r\n}","import { IReactronComponentDefinition, IInputComponentProps } from \"@schirkan/reactron-interfaces\";\r\nimport GridLayout from \"./GridLayout\";\r\nimport * as React from 'react';\r\nimport { IGridLayoutTileOptions } from \"./IGridLayoutTileOptions\";\r\n\r\nexport const gridLayoutDefinition: IReactronComponentDefinition = {\r\n  component: GridLayout,\r\n  description: 'Grid Layout',\r\n  displayName: 'Grid Layout',\r\n  name: 'GridLayout',\r\n  type: 'layout',\r\n  fields: [\r\n    { displayName: 'Grid Style', name: 'gridStyle', valueType: 'style' },\r\n    { displayName: 'Tile Style', name: 'tileStyle', valueType: 'style' },\r\n    {\r\n      displayName: 'Grid tiles',\r\n      name: 'tiles',\r\n      valueType: 'object',\r\n      isArray: true,\r\n      fields: [\r\n        { displayName: 'Row', name: 'row', valueType: 'number', defaultValue: 1, stepSize: 1, minValue: 1, maxValue: 20 },\r\n        { displayName: 'Column', name: 'col', valueType: 'number', defaultValue: 1, stepSize: 1, minValue: 1, maxValue: 20 },\r\n        { displayName: 'Row span', name: 'rowspan', valueType: 'number', defaultValue: 1, stepSize: 1, minValue: 1, maxValue: 20 },\r\n        { displayName: 'Column span', name: 'colspan', valueType: 'number', defaultValue: 1, stepSize: 1, minValue: 1, maxValue: 20 },\r\n        { displayName: 'Content', name: 'content', valueType: 'webComponent' },\r\n        { displayName: 'Style', name: 'style', valueType: 'style' }\r\n      ],\r\n      inputControl: (props: IInputComponentProps) => {\r\n        const tile = props.value as IGridLayoutTileOptions || {};\r\n        const style = { width: '100%', textOverflow: 'ellipsis', overflow: 'hidden' };\r\n        return (<div style={style}>[ {tile.row} | {tile.col} | {tile.content} ]</div>);\r\n      }\r\n    }\r\n  ]\r\n};","import * as React from 'react';\r\nimport { IGridLayoutOptions, IGridLayoutTileOptions } from './IGridLayoutTileOptions';\r\nimport { IReactronComponentContext } from '@schirkan/reactron-interfaces';\r\n\r\nimport './GridLayout.css';\r\n\r\nexport default class GridLayout extends React.Component<IGridLayoutOptions> {\r\n  public context!: IReactronComponentContext;\r\n  \r\n  constructor(props: IGridLayoutOptions) {\r\n    super(props);\r\n\r\n    this.renderTile = this.renderTile.bind(this);\r\n  }\r\n\r\n  private renderTile(tile: IGridLayoutTileOptions, index: number) {\r\n    const style = { ...this.props.tileStyle, ...tile.style };\r\n    style.gridColumn = tile.col.toString();\r\n    if (tile.colspan > 1) {\r\n      style.gridColumn += ' / span ' + tile.colspan;\r\n    }\r\n\r\n    style.gridRow = tile.row.toString();\r\n    if (tile.rowspan > 1) {\r\n      style.gridRow += ' / span ' + tile.rowspan;\r\n    }\r\n    return (\r\n      <div className=\"GridTile\" key={index} style={style}>\r\n        {this.context.renderComponent({ id: tile.content })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <section className=\"GridLayout\" style={this.props.gridStyle}>\r\n        {this.props.tiles.map(this.renderTile)}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport IFrame from \"./IFrame\";\r\n\r\nexport const iFrameDefinition: IReactronComponentDefinition = {\r\n    component: IFrame,\r\n    description: 'IFrame Component',\r\n    displayName: 'IFrame',\r\n    name: 'IFrame',\r\n    fields: [\r\n        { displayName: 'URL', name: 'url', valueType: 'string' }\r\n    ]\r\n};","import * as React from 'react';\r\nimport { IIFrameOptions } from './IIFrameOptions';\r\n\r\nimport './IFrame.css';\r\n\r\nexport default class IFrame extends React.Component<IIFrameOptions> {\r\n  public render() {\r\n    return <iframe className=\"ui-iframe\" src={this.props.url} />;\r\n  }\r\n}\r\n","import { IReactronComponentDefinition, IInputComponentProps } from \"@schirkan/reactron-interfaces\";\r\nimport ListLayout from \"./ListLayout\";\r\nimport * as React from 'react';\r\nimport { IListLayoutItemOptions } from \"./IListLayoutItemOptions\";\r\n\r\nexport const listLayoutDefinition: IReactronComponentDefinition = {\r\n  component: ListLayout,\r\n  description: 'List Layout',\r\n  displayName: 'List Layout',\r\n  name: 'ListLayout',\r\n  type: 'layout',\r\n  fields: [\r\n    { displayName: 'List Style', name: 'listStyle', valueType: 'style' },\r\n    { displayName: 'Item Style', name: 'itemStyle', valueType: 'style' },\r\n    {\r\n      displayName: 'List items',\r\n      name: 'items',\r\n      valueType: 'object',\r\n      isArray: true,\r\n      fields: [\r\n        { displayName: 'Content', name: 'content', valueType: 'webComponent' },\r\n        { displayName: 'Style', name: 'style', valueType: 'style' }\r\n      ],\r\n      inputControl: (props: IInputComponentProps) => {\r\n        const item = props.value as IListLayoutItemOptions || {};\r\n        const style = { width: '100%', textOverflow: 'ellipsis', overflow: 'hidden' };\r\n        return (<div style={style}>[ {item.content} ]</div>);\r\n      }\r\n    }\r\n  ]\r\n};","import * as React from 'react';\r\nimport { IListLayoutItemOptions } from \"./IListLayoutItemOptions\";\r\nimport { IListLayoutOptions } from \"./IListLayoutOptions\";\r\nimport { IReactronComponentContext } from '@schirkan/reactron-interfaces';\r\n\r\nimport './ListLayout.css';\r\n\r\nexport default class ListLayout extends React.Component<IListLayoutOptions> {\r\n  public context!: IReactronComponentContext;\r\n\r\n  constructor(props: IListLayoutOptions) {\r\n    super(props);\r\n\r\n    this.renderListItem = this.renderListItem.bind(this);\r\n  }\r\n\r\n  private renderListItem(item: IListLayoutItemOptions, index: number) {\r\n    const style = { ...this.props.itemStyle, ...item.style };\r\n\r\n    return (\r\n      <div className=\"ListItem\" key={index} style={style}>\r\n        {this.context.renderComponent({ id: item.content })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <section className=\"ListLayout\">\r\n        {this.props.items.map(this.renderListItem)}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport MarkDown from \"./MarkDown\";\r\n\r\nexport const markDownDefinition: IReactronComponentDefinition = {\r\n  component: MarkDown,\r\n  description: 'MarkDown Component',\r\n  displayName: 'MarkDown',\r\n  name: 'MarkDown',\r\n  fields: [\r\n    { displayName: 'Text', name: 'text', valueType: 'string', textRows: 10 },\r\n    { displayName: 'Style', name: 'style', valueType: 'style' }\r\n  ]\r\n};","import * as React from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport { IMarkDownOptions } from './IMarkDownOptions';\r\n\r\nimport './MarkDown.css';\r\n\r\nexport default class MarkDown extends React.Component<IMarkDownOptions> {\r\n  public render() {\r\n    return (\r\n      <section className=\"MarkDown\" style={this.props.style}>\r\n        <ReactMarkdown source={this.props.text} />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport Notifications from \"./Notifications\";\r\n\r\nexport const notificationsDefinition: IReactronComponentDefinition = {\r\n    component: Notifications,\r\n    description: 'Notifications',\r\n    displayName: 'Notifications',\r\n    name: 'Notifications',\r\n    fields: []\r\n};","import * as React from 'react';\r\n\r\nimport './Notifications.css';\r\n\r\nexport default class Notifications extends React.Component<any, any> {\r\n  constructor(props: any) {\r\n    super(props);\r\n  }\r\n\r\n  public render() {\r\n    return <section className=\"Notifications\">Notifications</section>;\r\n  }\r\n}\r\n","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport { carouselLayoutDefinition } from \"./CarouselLayout/CarouselLayoutDefinition\";\r\nimport { gridLayoutDefinition } from \"./GridLayout/GridLayoutDefinition\";\r\nimport { iFrameDefinition } from \"./IFrame/IFrameDefinition\";\r\nimport { listLayoutDefinition } from \"./ListLayout/ListLayoutDefinition\";\r\nimport { markDownDefinition } from \"./MarkDown/MarkDownDefinition\";\r\nimport { notificationsDefinition } from \"./Notifications/NotificationsDefinition\";\r\nimport { welcomeDefinition } from \"./Welcome/WelcomeDefinition\";\r\n\r\nexport const components: IReactronComponentDefinition[] = [\r\n    listLayoutDefinition,\r\n    carouselLayoutDefinition,\r\n    gridLayoutDefinition,\r\n    welcomeDefinition,\r\n    markDownDefinition,\r\n    notificationsDefinition,\r\n    iFrameDefinition\r\n];","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport Welcome from \"./Welcome\";\r\n\r\nexport const welcomeDefinition: IReactronComponentDefinition = {\r\n    component: Welcome,\r\n    description: 'Welcome Component',\r\n    displayName: 'Welcome',\r\n    name: 'Welcome',\r\n    fields: []\r\n};","import * as SvgIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport { IServerInfo } from '@schirkan/reactron-interfaces';\r\nimport * as React from 'react';\r\nimport { apiClient } from '../../ApiClient';\r\nimport RoundButton from '../../components/RoundButton/RoundButton';\r\nimport logo from './logo.svg';\r\n\r\nimport './Welcome.css';\r\n\r\ninterface IWelcomeState {\r\n  info?: IServerInfo;\r\n}\r\n\r\nexport default class Welcome extends React.Component<any, IWelcomeState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  public componentDidMount() {\r\n    apiClient.getServerInfo().then(info => {\r\n      this.setState({ info });\r\n    });\r\n  }\r\n\r\n  public render() {\r\n    let info;\r\n\r\n    if (this.state.info) {\r\n      info = (<div className=\"info\">\r\n        To edit this page click Admin-Button or visit<br /><br />\r\n        <i>http://{this.state.info.ip}:3000/admin</i>\r\n      </div>);\r\n    }\r\n    return (\r\n      <section className=\"Welcome\">\r\n        <RoundButton to=\"/admin\">\r\n          <FontAwesome.FontAwesomeIcon icon={SvgIcons.faCog} />\r\n          Admin\r\n        </RoundButton>\r\n        <img src={logo} className=\"logo\" alt=\"logo\" />\r\n        <div className=\"title\">Welcome to Reactron</div>\r\n        {info}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import * as SvgCore from '@fortawesome/fontawesome-svg-core';\r\nimport * as BrandIcons from '@fortawesome/free-brands-svg-icons';\r\nimport * as RegularIcons from '@fortawesome/free-regular-svg-icons';\r\nimport * as SolidIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport { IComponentLoader, IModuleRepositoryItem, IReactronComponentDefinition } from '@schirkan/reactron-interfaces';\r\nimport moment from 'moment';\r\nimport momentTimezone from 'moment-timezone';\r\nimport numeral from 'numeral';\r\nimport * as React from 'react';\r\nimport * as ReactDom from 'react-dom';\r\nimport * as ReactRouterDom from 'react-router-dom';\r\nimport { apiClient } from './ApiClient';\r\nimport { inernalModuleContext } from './inernalModuleContext';\r\nimport { components as internalComponents } from \"./internalModule\";\r\n\r\n// tslint:disable:no-string-literal\r\n\r\nconst SystemJS = (window as any).System as SystemJSLoader.System;\r\n\r\nconst externalModules = {};\r\nexternalModules['react'] = React;\r\nexternalModules['react-dom'] = ReactDom;\r\nexternalModules['react-router-dom'] = ReactRouterDom;\r\nexternalModules['numeral'] = { default: numeral };\r\nexternalModules['moment'] = { default: moment };\r\nexternalModules['moment-timezone'] = { default: momentTimezone };\r\nexternalModules['@fortawesome/fontawesome-svg-core'] = SvgCore;\r\nexternalModules['@fortawesome/free-solid-svg-icons'] = SolidIcons;\r\nexternalModules['@fortawesome/free-regular-svg-icons'] = RegularIcons;\r\nexternalModules['@fortawesome/free-brands-svg-icons'] = BrandIcons;\r\nexternalModules['@fortawesome/react-fontawesome'] = FontAwesome;\r\n\r\nif (inernalModuleContext.electron) {\r\n  externalModules['electron'] = inernalModuleContext.electron;\r\n}\r\n\r\nObject.keys(externalModules).forEach(key => {\r\n  const moduleExport = externalModules[key];\r\n  SystemJS.register(key, [], exports => ({ execute: () => exports(moduleExport) }));\r\n});\r\n\r\nexport class ComponentLoader implements IComponentLoader {\r\n  private allComponentsLoaded = false;\r\n  private moduleComponents: { [moduleName: string]: IReactronComponentDefinition[] } = {\r\n    'reactron': internalComponents\r\n  };\r\n\r\n  public async getModuleComponents(moduleName: string): Promise<IReactronComponentDefinition[] | undefined> {\r\n    if (!this.moduleComponents[moduleName]) {\r\n      const modules = await apiClient.getModules();\r\n      const m = modules.find(x => x.name === moduleName);\r\n\r\n      if (!m) {\r\n        console.error('Module not found: ' + moduleName);\r\n        return;\r\n      }\r\n\r\n      await this.registerModuleComponents(m);\r\n    }\r\n\r\n    return this.moduleComponents[moduleName];\r\n  }\r\n\r\n  private async registerModuleComponents(m: IModuleRepositoryItem): Promise<void> {\r\n    if (!m.browserFile) {\r\n      console.log('Module has no browserFile: ' + m.name);\r\n      return;\r\n    }\r\n\r\n    if (this.moduleComponents[m.name]) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      console.log(m.browserFile);\r\n\r\n      const browserFileContent = await SystemJS.import('\\\\' + m.browserFile);\r\n      // tslint:disable-next-line:no-string-literal\r\n      const components = browserFileContent['components'];\r\n\r\n      if (components && typeof components === 'object' && Array.isArray(components)) {\r\n        this.moduleComponents[m.name] = components;\r\n      }\r\n      console.log('Components loaded for module: ' + m.name);\r\n    } catch (error) {\r\n      console.error('Error loading components for module: ' + m.name, error);\r\n    }\r\n  }\r\n\r\n  public async getAllComponents(): Promise<{ [moduleName: string]: IReactronComponentDefinition[] }> {\r\n    if (this.allComponentsLoaded) {\r\n      return this.moduleComponents;\r\n    }\r\n    const modules = await apiClient.getModules();\r\n    for (const m of modules) {\r\n      await this.registerModuleComponents(m);\r\n    }\r\n    this.allComponentsLoaded = true;\r\n    return this.moduleComponents;\r\n  }\r\n}\r\n\r\nexport const componentLoader = new ComponentLoader();","import { SizeProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { IReactronComponentContext } from '@schirkan/reactron-interfaces';\r\nimport React from 'react';\r\nimport { BrowserModuleContext } from \"./BrowserModuleContext\";\r\nimport { componentLoader } from './ComponentLoader';\r\nimport Loading from \"./components/Loading/Loading\";\r\nimport WebComponent, { IWebComponentProps } from \"./components/WebComponent/WebComponent\";\r\n\r\nexport class WebComponentContext extends BrowserModuleContext implements IReactronComponentContext {\r\n    public renderLoading: (text?: string, iconSize?: SizeProp) => any;\r\n    public renderComponent: (props: IWebComponentProps) => any;\r\n    public readonly componentLoader = componentLoader;\r\n\r\n    constructor(moduleName: string, public readonly componentName: string) {\r\n        super(moduleName);\r\n\r\n        this.renderComponent = (props: IWebComponentProps) => {\r\n            const key = props.id + '.' + props.moduleName + '.' + props.componentName;\r\n            return <WebComponent {...props} key={key} />;\r\n        };\r\n\r\n        this.renderLoading = (text?: string, iconSize?: SizeProp) => {\r\n            return <Loading text={text} iconSize={iconSize} />;\r\n        };\r\n    }\r\n}\r\n\r\nexport const WebComponentContextType = React.createContext<IReactronComponentContext>(new WebComponentContext('', ''));","import * as SvgIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport RoundButton from '../RoundButton/RoundButton';\r\nimport { IComponentNotFoundProps } from './IComponentNotFoundProps';\r\n\r\nimport './ComponentNotFound.css';\r\n\r\nexport default class ComponentNotFound extends React.Component<IComponentNotFoundProps> {\r\n  public static defaultProps: Partial<IComponentNotFoundProps> = {\r\n    iconSize: \"4x\"\r\n  };\r\n\r\n  public render() {\r\n    const text = [];\r\n    if (this.props.id) {\r\n      text.push('Id: ' + this.props.id);\r\n    }\r\n    if (this.props.componentName) {\r\n      text.push('Component: ' + this.props.componentName);\r\n    }\r\n    if (this.props.moduleName) {\r\n      text.push('Module: ' + this.props.moduleName);\r\n    }\r\n\r\n    return (\r\n      <section className=\"ComponentNotFound\">\r\n        <FontAwesome.FontAwesomeIcon icon={SvgIcons.faExclamationTriangle} size={this.props.iconSize} />\r\n        <div className=\"text\">Component not found: {text.join(' | ')}</div>\r\n        <RoundButton to=\"/admin\">\r\n          <FontAwesome.FontAwesomeIcon icon={SvgIcons.faCog} /> Admin\r\n        </RoundButton>\r\n      </section>\r\n    );\r\n  }\r\n}","import * as React from 'react';\r\n\r\ninterface IErrorBoundaryState {\r\n  error: any;\r\n}\r\n\r\nexport default class ErrorBoundary extends React.Component<any, IErrorBoundaryState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = { error: null };\r\n  }\r\n\r\n  public componentDidCatch(error: any, info: any) {\r\n    console.log(error);\r\n    console.log(info);\r\n    this.setState({ error });\r\n  }\r\n\r\n  public render() {\r\n    if (this.state.error) {\r\n      return <h1>Something went wrong.</h1>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}","import { IExtraWebComponentProps, IReactronComponentContext, IReactronComponentDefinition, IWebComponentOptions } from '@schirkan/reactron-interfaces';\r\nimport classname from 'classnames';\r\nimport * as React from 'react';\r\nimport { apiClient } from '../../ApiClient';\r\nimport { initModuleContext } from '../../BrowserModuleContext';\r\nimport { componentLoader } from '../../ComponentLoader';\r\nimport { WebComponentContext } from '../../WebComponentContext';\r\nimport { WebComponentContextType } from '../../WebComponentContext';\r\nimport ComponentNotFound from '../ComponentNotFound/ComponentNotFound';\r\nimport ErrorBoundary from '../ErrorBoundary/ErrorBoundary';\r\nimport Loading from '../Loading/Loading';\r\n\r\nimport './WebComponent.css';\r\n\r\nexport interface IWebComponentProps extends Partial<IWebComponentOptions>, IExtraWebComponentProps {\r\n}\r\n\r\ninterface IWebComponentState {\r\n  componentFound?: boolean;\r\n  componentContext?: IReactronComponentContext;\r\n  componentDefinition?: IReactronComponentDefinition;\r\n  componentOptions?: IWebComponentOptions;\r\n}\r\n\r\nexport default class WebComponent extends React.Component<IWebComponentProps, IWebComponentState> {\r\n  constructor(props: IWebComponentProps) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: IWebComponentProps) {\r\n    if (this.props.id !== prevProps.id ||\r\n      this.props.moduleName !== prevProps.moduleName ||\r\n      this.props.componentName !== prevProps.componentName ||\r\n      this.props.options !== prevProps.options) {\r\n      this.loadComponent();\r\n    }\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this.loadComponent();\r\n  }\r\n\r\n  private async loadComponent() {\r\n    try {\r\n      let webComponentOptions: IWebComponentOptions | undefined;\r\n\r\n      if (this.props.id) {\r\n        // nur mit der ID lesen\r\n        const allComponentOptions = await apiClient.getWebComponentOptions();\r\n        webComponentOptions = allComponentOptions.find(x => x.id === this.props.id);\r\n      } else if (this.props.moduleName && this.props.componentName) {\r\n        webComponentOptions = {\r\n          id: '',\r\n          parentId: '',\r\n          moduleName: this.props.moduleName,\r\n          componentName: this.props.componentName,\r\n          options: this.props.options,\r\n        };\r\n      }\r\n\r\n      if (!webComponentOptions) {\r\n        this.setState({ componentFound: false });\r\n        return;\r\n      }\r\n\r\n      const moduleComponents = await componentLoader.getModuleComponents(webComponentOptions.moduleName);\r\n      if (!moduleComponents) {\r\n        this.setState({ componentFound: false });\r\n        return;\r\n      }\r\n\r\n      const componentName = webComponentOptions.componentName;\r\n      const componentDefinition = moduleComponents.find(x => x.name === componentName);\r\n      if (!componentDefinition || !componentDefinition.component) {\r\n        this.setState({ componentFound: false });\r\n        return;\r\n      }\r\n\r\n      // load settings\r\n      await initModuleContext();\r\n\r\n      this.setState({\r\n        componentContext: new WebComponentContext(webComponentOptions.moduleName, webComponentOptions.componentName),\r\n        componentDefinition,\r\n        componentOptions: webComponentOptions,\r\n        componentFound: true\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      this.setState({ componentFound: false });\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    let content = <Loading center={true} />;\r\n\r\n    if (this.state.componentFound === false) {\r\n      content = <ComponentNotFound {...this.props} />;\r\n    }\r\n\r\n    if (this.state.componentDefinition && this.state.componentDefinition.component && this.state.componentContext) {\r\n      const Component = this.state.componentDefinition.component as typeof React.Component;\r\n\r\n      // set contextType\r\n      if (!Component.contextType) {\r\n        Component.contextType = WebComponentContextType;\r\n      }\r\n\r\n      const props = this.state.componentOptions && this.state.componentOptions.options || {};\r\n\r\n      // render context and component\r\n      content = (\r\n        <WebComponentContextType.Provider value={this.state.componentContext}>\r\n          <Component {...props} />\r\n        </WebComponentContextType.Provider>\r\n      );\r\n    }\r\n\r\n    const className = classname(\"WebComponent\", this.props.className);\r\n\r\n    return (\r\n      <section className={className} style={this.props.style}>\r\n        <ErrorBoundary>\r\n          {content}\r\n        </ErrorBoundary>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import { IWebPageOptions } from '@schirkan/reactron-interfaces';\r\nimport moment from 'moment';\r\nimport numeral from 'numeral';\r\nimport * as React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport { inernalModuleContext } from '../../inernalModuleContext';\r\nimport { apiClient } from '../../ApiClient';\r\nimport Loading from '../Loading/Loading';\r\nimport PageNotFound from '../PageNotFound/PageNotFound';\r\nimport WebComponent from '../WebComponent/WebComponent';\r\n\r\n// load moment & numeral locales\r\nimport 'moment/min/locales.min';\r\nimport 'numeral/min/locales.min';\r\n\r\nimport './App.css';\r\n\r\nexport interface IAppState {\r\n  pages?: IWebPageOptions[];\r\n}\r\n\r\nexport default class App extends React.Component<any, IAppState> {\r\n  private reloadTimer: number | undefined;\r\n  private reloadWait: number = 2000;\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {};\r\n    this.reload = this.reload.bind(this);\r\n    this.triggerReload = this.triggerReload.bind(this);\r\n    this.onKeyDown = this.onKeyDown.bind(this);\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this.init();\r\n    this.subscribeTopics();\r\n    document.addEventListener('keydown', this.onKeyDown);\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    this.unsubscribeTopics();\r\n    document.removeEventListener('keydown', this.onKeyDown);\r\n  }\r\n\r\n  private onKeyDown(e: KeyboardEvent) {\r\n    const evtobj = window.event ? window.event as KeyboardEvent : e;\r\n    if (evtobj.keyCode === 65 && evtobj.ctrlKey && evtobj.altKey) {\r\n      window.location.href = '/admin';\r\n    }\r\n  }\r\n\r\n  private subscribeTopics() {\r\n    // register page/component change event\r\n    if (inernalModuleContext.topics) {\r\n      inernalModuleContext.topics.subscribe('pages-updated', this.triggerReload);\r\n      inernalModuleContext.topics.subscribe('components-updated', this.triggerReload);\r\n      inernalModuleContext.topics.subscribe('system-settings-updated', this.triggerReload);\r\n    }\r\n  }\r\n\r\n  private unsubscribeTopics() {\r\n    if (inernalModuleContext.topics) {\r\n      inernalModuleContext.topics.unsubscribe('pages-updated', this.triggerReload);\r\n      inernalModuleContext.topics.unsubscribe('components-updated', this.triggerReload);\r\n      inernalModuleContext.topics.unsubscribe('system-settings-updated', this.triggerReload);\r\n    }\r\n  }\r\n\r\n  private async init() {\r\n    // load settings\r\n    const settings = await apiClient.getSettings();\r\n    moment.locale(settings.lang);\r\n    numeral.locale(settings.lang);\r\n\r\n    // load pages\r\n    const pages = await apiClient.getWebPages();\r\n    return this.setState({ pages });\r\n  }\r\n\r\n  private triggerReload() {\r\n    window.clearTimeout(this.reloadTimer);\r\n    this.reloadTimer = window.setTimeout(this.reload, this.reloadWait);\r\n  }\r\n\r\n  private reload() {\r\n    console.log('reload');\r\n    apiClient.clearCache();\r\n    this.init();\r\n  }\r\n\r\n  public renderPage(id: string, style: any) {\r\n    return () => (\r\n      <section className=\"WebPage\" style={style}>\r\n        <WebComponent id={id} />\r\n      </section>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    let content = <Loading text=\"Loading Reactron...\" center={true} />;\r\n\r\n    if (this.state.pages) {\r\n      content = (\r\n        <Router>\r\n          <Switch>\r\n            {this.state.pages.map(item =>\r\n              (<Route key={item.path} path={item.path} exact={item.path === '/'} component={this.renderPage(item.webComponentId, item.style)} />)\r\n            )}\r\n            <Route component={PageNotFound} />\r\n          </Switch>\r\n        </Router>\r\n      );\r\n    }\r\n\r\n    return <section className=\"App\">{content}</section>;\r\n  }\r\n}\r\n","// main entry file for react\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport App from './browser/components/App/App';\r\nimport ErrorBoundary from './browser/components/ErrorBoundary/ErrorBoundary';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <ErrorBoundary><App /></ErrorBoundary>,\r\n  document.getElementById('root') as HTMLElement\r\n);","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";"],"sourceRoot":""}