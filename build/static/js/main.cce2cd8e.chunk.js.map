{"version":3,"sources":["browser/BrowserModuleHelper.ts","browser/inernalModuleHelper.ts","common/apiRoutes.ts","browser/ApiClient.ts","browser/components/RoundButton/RoundButton.tsx","browser/components/Loading/Loading.tsx","browser/components/Admin/UiFlowLayout/UiFlowLayout.tsx","browser/components/Admin/UiCard/UiCard.tsx","browser/components/Admin/UiCardContent/UiCardContent.tsx","browser/components/Admin/UiCardTitle/UiCardTitle.tsx","browser/components/Admin/UiLoadingCard/UiLoadingCard.tsx","browser/components/Admin/UiOverlay/OverlayManager.ts","browser/components/Admin/UiOverlay/UiOverlay.tsx","browser/components/Admin/UiButton/UiButton.tsx","browser/components/Admin/ModuleManagerPage/AddModuleCard/AddModuleCard.tsx","browser/components/Admin/ModuleManagerPage/CommandResult/CommandResult.tsx","browser/components/Admin/UiCardButtonRow/UiCardButtonRow.tsx","browser/components/Admin/ModuleManagerPage/ModuleCard/ModuleCard.tsx","browser/components/Admin/ModuleManagerPage/UpdateModulesCard/UpdateModulesCard.tsx","browser/components/Admin/ModuleManagerPage/ModuleManagerPage.tsx","browser/components/Admin/Navigation/Navigation.tsx","common/optionsHelper.ts","browser/components/Admin/OptionItem/ArrayForm/ArrayForm.tsx","browser/components/Admin/OptionItem/StyleForm/StyleForm.tsx","browser/internalModule/CarouselLayout/CarouselLayoutDefinition.tsx","browser/internalModule/CarouselLayout/CarouselLayout.tsx","browser/internalModule/GridLayout/GridLayoutDefinition.tsx","browser/internalModule/GridLayout/GridLayout.tsx","browser/internalModule/IFrame/IFrameDefinition.tsx","browser/internalModule/IFrame/IFrame.tsx","browser/internalModule/ListLayout/ListLayoutDefinition.tsx","browser/internalModule/ListLayout/ListLayout.tsx","browser/internalModule/MarkDown/MarkDownDefinition.tsx","browser/internalModule/MarkDown/MarkDown.tsx","browser/internalModule/Notifications/NotificationsDefinition.tsx","browser/internalModule/Notifications/Notifications.tsx","browser/internalModule/index.ts","browser/internalModule/Welcome/WelcomeDefinition.tsx","browser/internalModule/Welcome/Welcome.tsx","browser/ComponentLoader.ts","browser/components/Admin/OptionCard/SimpleEvent.ts","browser/components/Admin/OptionCard/OptionCardContext.ts","browser/components/Admin/OptionItem/WebComponentForm/WebComponentForm.tsx","browser/components/Admin/OptionItem/OptionItem.tsx","browser/components/Admin/OptionList/OptionList.tsx","browser/components/Admin/OptionCard/OptionCard.tsx","browser/components/Admin/PageManagerPage/PageCard/PageCard.tsx","browser/components/Admin/PageManagerPage/pageOptionsFields.tsx","browser/components/Admin/PageManagerPage/PageManagerPage.tsx","browser/components/Admin/ServiceManagerPage/ServiceCard/ServiceCard.tsx","browser/components/Admin/ServiceManagerPage/ServiceGroup/ServiceGroup.tsx","browser/components/Admin/ServiceManagerPage/ServiceManagerPage.tsx","browser/components/Admin/SettingsManagerPage/systemSettingsFields.ts","browser/components/Admin/SettingsManagerPage/SettingsManagerPage.tsx","browser/components/Admin/SystemPage/SystemPage.tsx","browser/components/Admin/Admin.tsx","browser/components/PageNotFound/PageNotFound.tsx","browser/DynamicReactComponentProps.tsx","browser/components/ComponentNotFound/ComponentNotFound.tsx","browser/components/ErrorBoundary/ErrorBoundary.tsx","browser/components/WebComponent/WebComponent.tsx","browser/components/App/App.tsx","index.tsx","browser/internalModule/Welcome/logo.svg"],"names":["BrowserModuleHelper","moduleName","_this","this","window","require","electron","backendService","remote","BackendService","instance","topics","Store","moduleStorage","name","moduleApiPath","getService","serviceName","serviceManager","get","Promise","reject","inernalModuleHelper","ApiRoute","path","method","routes","getServices","getServiceOptions","setServiceOptions","getModules","addModule","deleteModule","rebuildModule","updateModule","checkUpdates","getWebPages","setWebPage","deleteWebPage","getServerInfo","exitApplication","restartApplication","shutdownSystem","rebootSystem","resetApplication","getSettings","setSettings","getWebComponentOptions","setWebComponentOptions","deleteWebComponentOptions","ApiClient_inernalModuleHelper","ApiClient_ApiClient","ApiClient","getAllServices","apiCall","prototype","clearCache","Object","keys","forEach","key","route","cacheResponse","cache","toLocaleLowerCase","call","params","data","resolve","replace","fetch","body","JSON","stringify","headers","Content-Type","then","response","__awaiter","undefined","text","_a","sent","status","toString","startsWith","parse","console","log","Error","apiClient","_super","RoundButton","__extends","render","react","Link","className","to","props","role","children","components_Loading_Loading","Loading","Loading_extends","classnames","center","react_fontawesome_index_es","icon","index_es","size","iconSize","spin","defaultProps","UiFlowLayout","UiFlowLayout_extends","renderChildren","Array","isArray","map","child","index","style","UiCard","UiCard_extends","UiCardContent","UiCardContent_extends","UiCardTitle","UiCardTitle_extends","UiLoadingCard","UiLoadingCard_extends","Admin_UiCard_UiCard","Admin_UiCardTitle_UiCardTitle","Admin_UiCardContent_UiCardContent","overlayManager","OverlayManager","items","add","length","hide","push","remove","indexOf","splice","show","UiOverlay","state","visible","UiOverlay_extends","componentDidMount","componentWillUnmount","setState","hidden","UiButton","disposed","running","onClick","bind","UiButton_extends","e","disabled","preventDefault","bubbles","stopPropagation","catch","AddModuleCard","AddModuleCard_extends","input","ref","el","placeholder","Admin_UiButton_UiButton","onAdd","value","CommandResult","CommandResult_extends","renderCommandResult","result","success","item","i","title","command","args","onClose","results","UiCardButtonRow","UiCardButtonRow_extends","UiCardButtonRowDividerFull","divider","UiCardButtonRowDividerHalf","ModuleCard","showActions","hideActions","onUpdate","onRebuild","onRemove","ModuleCard_extends","module","renderTitle","updateIcon","hasUpdate","renderDescription","description","renderAuthor","authorMail","authorName","author","email","href","renderFooter","repoLink","repository","target","free_brands_svg_icons_index_es","Admin_UiCardButtonRow_UiCardButtonRow","version","renderActions","canBuild","canRemove","UpdateModulesCard","UpdateModulesCard_extends","modulesWithUpdates","modules","filter","x","updatesTitle","some","onCheckUpdates","checkingUpdates","ModuleManagerPage","loading","showResult","loadModules","updateAll","removeModule","hideResult","ModuleManagerPage_extends","modulesWithUpdates_1","_i","apply","showError","error_1","error_2","error_3","error_4","trim","error_5","err","message","Admin_UiOverlay_UiOverlay","ModuleManagerPage_CommandResult_CommandResult","Admin_UiFlowLayout_UiFlowLayout","ModuleManagerPage_AddModuleCard_AddModuleCard","ModuleManagerPage_UpdateModulesCard_UpdateModulesCard","onUpdateAll","onUpdateModule","Admin_UiLoadingCard_UiLoadingCard","ModuleManagerPage_ModuleCard_ModuleCard","Navigation","Navigation_extends","NavLink","activeClassName","getDefaultFieldValue","field","defaultValue","valueType","getDefaultObjectValue","fields","f","ArrayForm","arrayKeys","arrayItemAdd","arrayItemRemove","arrayItemMoveUp","arrayItemMoveDown","ArrayForm_extends","arrayItemChange","definition","newValue","array","slice","valueChange","keyItem","arrayItemDefinition","__assign","renderArrayItem","displayName","v4","Admin_OptionItem_OptionItem","free_regular_svg_icons_index_es","styleProperties","StyleForm","getFields","addField","StyleForm_extends","componentDidUpdate","prevProps","obj","StyleForm_assign","onChange","removeField","fieldName","newPropertySelect","hasOwnProperty","property","carouselLayoutDefinition","component","CarouselLayout","CarouselLayout_extends","gridLayoutDefinition","GridLayout","renderTile","GridLayout_extends","tile","GridLayout_assign","options","tileStyle","gridColumn","col","colspan","gridRow","row","rowspan","renderComponent","id","content","gridStyle","tiles","minValue","iFrameDefinition","IFrame","IFrame_extends","src","url","listLayoutDefinition","ListLayout","renderListItem","ListLayout_extends","ListLayout_assign","itemStyle","markDownDefinition","MarkDown","MarkDown_extends","react_markdown","source","textRows","notificationsDefinition","Notifications","Notifications_extends","components","Welcome","Welcome_extends","info","ip","logo_default","a","alt","components_RoundButton_RoundButton","moment","__webpack_require__","momentTimezone","SystemJS","System","externalModules","react_dom","fontawesome_svg_core_index_es","moduleExport","register","exports","execute","componentLoader","ComponentLoader","allComponentsLoaded","moduleComponents","reactron","getModuleComponents","m","find","registerModuleComponents","browserFile","import","browserFileContent","getAllComponents","modules_1","SimpleEvent","subscriptions","subscribe","callback","unsubscribe","publish","sub","_b","OptionCardContext_OptionsCardContextData","OptionsCardContextData","onSave","removedWebComponents","changedWebComponents","createdWebComponents","saveWebComponents","_f","_c","_e","_d","webComponentRemoved","createdItemIndex","findIndex","webComponentChanged","webComponentCreated","OptionCardContext","OptionItem_WebComponentForm_WebComponentForm","WebComponentForm","loadingWebComponents","loadingComponentDefinitions","webComponents","componentDefinitions","initCurrentComponent","onOptionsChange","removeWebComponent","onSelectedComponentDefinitionChange","WebComponentForm_extends","defineProperty","context","loadComponentDefinitions","loadWebComponents","selectedWebComponentOptions","formEvents","webComponentId","key_1","componentName","selectedComponentDefinition","newWebComponentOptions","newKey","currentTarget","currentWebComponentOptions","newId","newOptions","WebComponentForm_assign","renderComponentSelection","selectedComponentKey","Admin_OptionList_OptionList","contextType","counter","OptionItem","hasDetails","uniqueId","triggerValueChange","onInputChange","onTextareaChange","onCheckboxChange","onSelectValueChange","toggleItemDetails","OptionItem_extends","renderArray","OptionItem_ArrayForm_ArrayForm","renderObject","checked","renderDropDown","values","renderTextInput","rows","type","renderNumberInput","inputType","maxValue","step","stepSize","min","max","renderBooleanInput","renderStyleInput","OptionItem_StyleForm_StyleForm","renderWebComponentInput","detailsVisible","renderItemHeader","subHeaderText","renderLabel","htmlFor","renderInput","data-isarray","renderInputControl","data-hasdetails","data-detailsvisible","data-valuetype","OptionList","OptionList_extends","OptionList_assign","OptionCard","setDefaultValues","formContext","cancel","save","reset","optionsChange","OptionCard_extends","onCancel","renderContent","Provider","showReset","whiteSpace","PageCard","onEdit","onDelete","PageCard_extends","page","renderPath","pageOptionsFields","PageManagerPage","pages","showPageDetailsDialog","loadPages","savePage","hidePageDetailsDialog","confirmPageDeletion","PageManagerPage_extends","deletePage","selectedPage","confirm","renderPageCards","PageManagerPage_PageCard_PageCard","renderPageAddCard","renderPageDetailsDialog","Admin_OptionCard_OptionCard","ServiceCard","showOptions","showLog","ServiceCard_extends","onShowOptions","service","onShowLog","ServiceGroup","groupOpen","toggleGroup","ServiceGroup_extends","services","ServiceManagerPage_ServiceCard_ServiceCard","onShowServiceLog","onShowServiceOptions","ServiceManagerPage","loadingServices","loadingServiceOptions","selectedService","selectedServiceOptions","closeLog","closeOptions","loadOptions","saveOptions","ServiceManagerPage_extends","loadServices","renderServiceOptionsDialog","renderServiceLogDialog","renderServiceGroups","onlyUnique","ServiceManagerPage_ServiceGroup_ServiceGroup","self","systemSettingsFields","SettingsManagerPage","loadSettings","saveSettings","SettingsManagerPage_extends","settings","newSettings","SystemPage","SystemPage_extends","renderInformationCard","free","Math","round","memory","total","cpu","count","speed","hostname","renderApplicationCard","renderSystemCard","renderDangerCard","Admin","Admin_extends","Admin_Navigation_Navigation","Switch","Route","Admin_ModuleManagerPage_ModuleManagerPage","Admin_ServiceManagerPage_ServiceManagerPage","Admin_PageManagerPage_PageManagerPage","Admin_SettingsManagerPage_SettingsManagerPage","Admin_SystemPage_SystemPage","Redirect","PageNotFound","PageNotFound_extends","location","pathname","DynamicReactComponentProps_DynamicReactComponentProps","DynamicReactComponentProps","components_WebComponent_WebComponent","DynamicReactComponentProps_assign","renderLoading","DynamicReactComponentProps_extends","components_ComponentNotFound_ComponentNotFound","ComponentNotFound","ComponentNotFound_extends","join","ErrorBoundary","error","ErrorBoundary_extends","componentDidCatch","WebComponent","WebComponent_extends","prevState","loadComponent","webComponentOptions","allComponentOptions","componentFound","componentName_1","componentDefinition","componentProps","componentOptions","WebComponent_assign","Component","components_ErrorBoundary_ErrorBoundary","App","reloadWait","reload","triggerReload","App_extends","arguments","clearTimeout","reloadTimer","setTimeout","renderPage","BrowserRouter","components_Admin_Admin","exact","components_PageNotFound_PageNotFound","components_App_App","document","getElementById","p"],"mappings":"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","file":"static/js/main.cce2cd8e.chunk.js","sourcesContent":["import { IPubSub } from \"src/interfaces/IPubSub\";\r\nimport { IExternalService } from \"../interfaces/IExternalService\";\r\nimport { IModuleHelper } from \"../interfaces/IModuleHelper\";\r\n\r\nexport class BrowserModuleHelper implements IModuleHelper {\r\n    public readonly electron: Electron.AllElectron;\r\n    public readonly backendService: any; // TODO\r\n    public readonly topics: IPubSub;\r\n    public readonly moduleStorage: ElectronStore;\r\n    public readonly moduleApiPath: string;\r\n    public readonly getService: (serviceName: string, moduleName?: string | undefined) => Promise<IExternalService | undefined>;\r\n\r\n    constructor(public moduleName: string) {\r\n        if ((window as any).require) {\r\n            this.electron = (window as any).require('electron');\r\n            this.backendService = this.electron.remote.require('./dist/server/BackendService').BackendService.instance;\r\n            this.topics = this.backendService.topics;\r\n            const Store = this.electron.remote.require('electron-store');\r\n            this.moduleStorage = new Store({ name: 'module.' + moduleName });\r\n        }\r\n\r\n        this.moduleApiPath = '/api/modules/' + moduleName;\r\n\r\n        // tslint:disable-next-line:no-shadowed-variable\r\n        this.getService = (serviceName: string, moduleName?: string): Promise<IExternalService | undefined> => {\r\n            if(!this.backendService){\r\n                return Promise.reject('Method getService is not supported in browser environment.');\r\n            }\r\n            return this.backendService.serviceManager.get(moduleName || this.moduleName, serviceName);\r\n        }\r\n    }\r\n}\r\n\r\n","import { BrowserModuleHelper } from './BrowserModuleHelper';\r\nexport const inernalModuleHelper = new BrowserModuleHelper('reactron'); // internal module\r\n","import { ICommandResult } from '../interfaces/ICommandResult';\r\nimport { IModuleRepositoryItem } from '../interfaces/IModuleRepositoryItem';\r\nimport { IServerInfo } from '../interfaces/IServerInfo';\r\nimport { IServiceRepositoryItem } from \"../interfaces/IServiceRepositoryItem\";\r\nimport { ISystemSettings } from '../interfaces/ISystemSettings';\r\nimport { IWebComponentOptions } from '../interfaces/IWebComponentOptions';\r\nimport { IWebPageOptions } from '../interfaces/IWebPageOptions';\r\n\r\nexport class ApiRoute<TParams, TBody, TResponse = void>{\r\n    constructor(\r\n        public path: string,\r\n        public method: string\r\n    ) { }\r\n}\r\n\r\nexport const routes = {\r\n    getServices: new ApiRoute<undefined, undefined, IServiceRepositoryItem[]>('/service/', 'get'),\r\n    getServiceOptions: new ApiRoute<{ moduleName: string, serviceName: string }, undefined, object>('/service/:moduleName/:serviceName', 'get'),\r\n    setServiceOptions: new ApiRoute<{ moduleName: string, serviceName: string }, object>('/service/:moduleName/:serviceName', 'post'),\r\n\r\n    getModules: new ApiRoute<undefined, undefined, IModuleRepositoryItem[]>('/modules/', 'get'),\r\n    addModule: new ApiRoute<undefined, { repository: string }, ICommandResult[]>('/modules/', 'post'),\r\n    deleteModule: new ApiRoute<{ moduleName: string }, undefined, ICommandResult[]>('/modules/:moduleName', 'delete'),\r\n    rebuildModule: new ApiRoute<{ moduleName: string }, undefined, ICommandResult[]>('/modules/:moduleName/rebuild', 'post'),\r\n    updateModule: new ApiRoute<{ moduleName: string }, undefined, ICommandResult[]>('/modules/:moduleName/update', 'post'),\r\n    checkUpdates: new ApiRoute<{ moduleName: string }, undefined, ICommandResult[]>('/modules/checkUpdates/update', 'get'),\r\n\r\n    getWebPages: new ApiRoute<undefined, undefined, IWebPageOptions[]>('/pages/', 'get'),\r\n    setWebPage: new ApiRoute<undefined, IWebPageOptions, IWebPageOptions>('/pages/', 'post'),\r\n    deleteWebPage: new ApiRoute<{ id: string }, undefined>('/pages/:id', 'delete'),\r\n\r\n    getServerInfo: new ApiRoute<undefined, undefined, IServerInfo>('/app/', 'get'),\r\n    exitApplication: new ApiRoute<undefined, undefined>('/app/exitApplication', 'post'),\r\n    restartApplication: new ApiRoute<undefined, undefined>('/app/restartApplication', 'post'),\r\n    shutdownSystem: new ApiRoute<undefined, undefined>('/app/shutdownSystem', 'post'),\r\n    rebootSystem: new ApiRoute<undefined, undefined>('/app/restartSystem', 'post'),\r\n    resetApplication: new ApiRoute<undefined, undefined>('/app/resetApplication', 'post'),\r\n    \r\n    getSettings: new ApiRoute<undefined, undefined, ISystemSettings>('/settings/', 'get'),\r\n    setSettings: new ApiRoute<undefined, ISystemSettings>('/settings/', 'post'),\r\n\r\n    getWebComponentOptions: new ApiRoute<undefined, undefined, IWebComponentOptions[]>('/components/', 'get'),\r\n    setWebComponentOptions: new ApiRoute<undefined, IWebComponentOptions, IWebComponentOptions>('/components/', 'post'),\r\n    deleteWebComponentOptions: new ApiRoute<{ id: string }, undefined>('/components/:id', 'delete'),\r\n};","import { ApiRoute, routes } from '../common/apiRoutes';\r\nimport { BrowserModuleHelper } from './BrowserModuleHelper';\r\n\r\nconst inernalModuleHelper = new BrowserModuleHelper('reactron');\r\n\r\nexport class ApiClient {\r\n    public getAllServices = apiCall(routes.getServices, true);\r\n    public getServiceOptions = apiCall(routes.getServiceOptions);\r\n    public setServiceOptions = apiCall(routes.setServiceOptions);\r\n\r\n    public getModules = apiCall(routes.getModules, true);\r\n    public addModule = apiCall(routes.addModule);\r\n    public checkUpdates = apiCall(routes.checkUpdates);\r\n    public deleteModule = apiCall(routes.deleteModule);\r\n    public rebuildModule = apiCall(routes.rebuildModule);\r\n    public updateModule = apiCall(routes.updateModule);\r\n\r\n    public getWebPages = apiCall(routes.getWebPages, true);\r\n    public setWebPage = apiCall(routes.setWebPage);\r\n    public deleteWebPage = apiCall(routes.deleteWebPage);\r\n\r\n    public getServerInfo = apiCall(routes.getServerInfo);\r\n    public exitApplication = apiCall(routes.exitApplication);\r\n    public restartApplication = apiCall(routes.restartApplication);\r\n    public shutdownSystem = apiCall(routes.shutdownSystem);\r\n    public rebootSystem = apiCall(routes.rebootSystem);\r\n    public resetApplication = apiCall(routes.resetApplication);\r\n\r\n    public getSettings = apiCall(routes.getSettings, true);\r\n    public setSettings = apiCall(routes.setSettings);\r\n\r\n    public getWebComponentOptions = apiCall(routes.getWebComponentOptions, true);\r\n    public setWebComponentOptions = apiCall(routes.setWebComponentOptions);\r\n    public deleteWebComponentOptions = apiCall(routes.deleteWebComponentOptions);\r\n\r\n    public clearCache() {\r\n        Object.keys(this).forEach(key => {\r\n            if (this[key] && this[key].clearCache) {\r\n                this[key].clearCache();\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\ninterface IApiCall<TParams, TBody, TResponse> {\r\n    (params?: TParams, body?: TBody): Promise<TResponse>;\r\n    clearCache: () => void;\r\n}\r\n\r\nconst apiCall = <TParams, TBody, TResponse>(\r\n    route: ApiRoute<TParams, TBody, TResponse>,\r\n    cacheResponse: boolean = false) => {\r\n    let cache: any;\r\n    const method = route.method.toLocaleLowerCase();\r\n\r\n    const call: any = (params: TParams, data: TBody): Promise<TResponse> => {\r\n        if (cacheResponse && cache) {\r\n            return Promise.resolve(cache);\r\n        }\r\n\r\n        let path = route.path;\r\n        // replace params in path\r\n        if (params) {\r\n            Object.keys(params).forEach(key => {\r\n                path = path.replace(':' + key, params[key]);\r\n            });\r\n        }\r\n        return fetch(inernalModuleHelper.moduleApiPath + path, {\r\n            method,\r\n            body: data && JSON.stringify(data),\r\n            headers: {\r\n                \"Content-Type\": \"application/json; charset=utf-8\",\r\n            }\r\n        })\r\n            .then(async response => {\r\n                const text = await response.text();\r\n\r\n                if (response.status.toString().startsWith('2')) {\r\n                    if (!text) {\r\n                        return undefined;\r\n                    }\r\n                    return JSON.parse(text);\r\n                }\r\n\r\n                console.log(text);\r\n                throw Error(text);\r\n            })\r\n            .then(response => {\r\n                if (cacheResponse) {\r\n                    cache = response;\r\n                }\r\n                return response;\r\n            });\r\n    };\r\n\r\n    call.clearCache = () => {\r\n        cache = undefined;\r\n    };\r\n\r\n    return call as IApiCall<TParams, TBody, TResponse>;\r\n};\r\n\r\nexport const apiClient = new ApiClient();","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { IRoundButtonProps } from './IRoundButtonProps';\r\nimport './RoundButton.css';\r\n\r\nexport default class RoundButton extends React.Component<IRoundButtonProps> {\r\n  public render() {\r\n    return <Link className=\"RoundButton\" to={this.props.to} role=\"button\">{this.props.children}</Link>;\r\n  }\r\n}\r\n","import * as SvgIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport * as classname from 'classnames';\r\nimport * as React from 'react';\r\nimport { ILoadingProps } from './ILoadingProps';\r\n\r\nimport './Loading.css';\r\n\r\nexport default class Loading extends React.Component<ILoadingProps> {\r\n  public static defaultProps: Partial<ILoadingProps> = {\r\n    iconSize: \"4x\"\r\n  };\r\n\r\n  public render() {\r\n    return (\r\n      <section className={classname('Loading', { 'center': this.props.center })}>\r\n        <FontAwesome.FontAwesomeIcon icon={SvgIcons.faSpinner} size={this.props.iconSize} spin={true} />\r\n        {this.props.text && (\r\n          <div className=\"text\">{this.props.text}</div>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import * as classname from 'classnames';\r\nimport * as React from 'react';\r\nimport { IUiComponentProps } from '../IUiComponentProps';\r\n\r\nimport './UiFlowLayout.css';\r\n\r\nexport default class UiFlowLayout extends React.Component<IUiComponentProps> {\r\n  private renderChildren() {\r\n    if (Array.isArray(this.props.children)) {\r\n      return this.props.children.map((child, index) => <div key={index}>{child}</div>);\r\n    } else {\r\n      return <div>{this.props.children}</div>;\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <section className={classname('UiFlowLayout', this.props.className)} style={this.props.style}>\r\n        {this.renderChildren()}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import * as classname from 'classnames';\r\nimport * as React from 'react';\r\nimport { IUiComponentProps } from '../IUiComponentProps';\r\n\r\nimport './UiCard.css';\r\n\r\nexport default class UiCard extends React.Component<IUiComponentProps> {\r\n  public render() {\r\n    return (\r\n      <section className={classname('UiCard', this.props.className)} style={this.props.style}>\r\n        {this.props.children}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import * as classname from 'classnames';\r\nimport * as React from 'react';\r\nimport { IUiComponentProps } from '../IUiComponentProps';\r\n\r\nimport './UiCardContent.css';\r\n\r\nexport default class UiCardContent extends React.Component<IUiComponentProps> {\r\n  public render() {\r\n    return (\r\n      <div className={classname('UiCardContent', this.props.className)} style={this.props.style}>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as classname from 'classnames';\r\nimport * as React from 'react';\r\nimport { IUiComponentProps } from '../IUiComponentProps';\r\n\r\nimport './UiCardTitle.css';\r\n\r\nexport default class UiCardTitle extends React.Component<IUiComponentProps> {\r\n  public render() {\r\n    return (\r\n      <div className={classname('UiCardTitle', this.props.className)} style={this.props.style}>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport Loading from '../../Loading/Loading';\r\nimport UiCard from '../UiCard/UiCard';\r\nimport UiCardContent from '../UiCardContent/UiCardContent';\r\nimport UiCardTitle from '../UiCardTitle/UiCardTitle';\r\nimport { IUiLoadingCardProps } from './IUiLoadingCard';\r\n\r\nimport './UiLoadingCard.css';\r\n\r\nexport default class UiLoadingCard extends React.Component<IUiLoadingCardProps> {\r\n  constructor(props: IUiLoadingCardProps) {\r\n    super(props);\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <UiCard className=\"UiLoadingCard\">\r\n        <UiCardTitle>\r\n          Loading...\r\n      </UiCardTitle>\r\n        <UiCardContent>\r\n          <Loading />\r\n        </UiCardContent>\r\n      </UiCard>\r\n    );\r\n  }\r\n}\r\n","import UiOverlay from './UiOverlay';\r\n\r\nclass OverlayManager {\r\n  private items: UiOverlay[] = [];\r\n\r\n  public add(instance: UiOverlay) {\r\n    if (this.items.length > 0) {\r\n      const lastItem = this.items[this.items.length - 1];\r\n      lastItem.hide();\r\n    }\r\n    this.items.push(instance);\r\n  }\r\n\r\n  public remove(instance: UiOverlay) {\r\n    const index = this.items.indexOf(instance);\r\n    if (index >= 0) {\r\n      this.items.splice(index);\r\n      if (this.items.length > 0) {\r\n        const lastItem = this.items[this.items.length - 1];\r\n        lastItem.show();\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport const overlayManager = new OverlayManager();","import * as classname from 'classnames';\r\nimport * as React from 'react';\r\nimport { IUiComponentProps } from '../IUiComponentProps';\r\nimport { overlayManager } from './OverlayManager';\r\n\r\nimport './UiOverlay.css';\r\n\r\ninterface IUiComponentState {\r\n  visible: boolean;\r\n}\r\n\r\nexport default class UiOverlay extends React.Component<IUiComponentProps, IUiComponentState> {\r\n  constructor(props: IUiComponentProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      visible: true\r\n    };\r\n  }\r\n\r\n  public componentDidMount() {\r\n    overlayManager.add(this);\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    overlayManager.remove(this);\r\n  }\r\n\r\n  public show() {\r\n    this.setState({ visible: true });\r\n  }\r\n  public hide() {\r\n    this.setState({ visible: false });\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div hidden={!this.state.visible} className={classname('UiOverlay', this.props.className)} style={this.props.style}>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as classname from 'classnames';\r\nimport * as React from 'react';\r\nimport { IUiButtonProps } from './IUiButtonProps';\r\n\r\nimport './UiButton.css';\r\n\r\ninterface IUiButtonState {\r\n  running: boolean;\r\n}\r\n\r\nexport default class UiButton extends React.Component<IUiButtonProps, IUiButtonState> {\r\n  private disposed = false;\r\n\r\n  constructor(props: IUiButtonProps) {\r\n    super(props);\r\n\r\n    this.state = { running: false };\r\n\r\n    this.onClick = this.onClick.bind(this);\r\n  }\r\n\r\n  private onClick(e: React.MouseEvent) {    \r\n    if (!this.props.onClick || this.props.disabled || this.state.running) {\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n    e.bubbles = false;\r\n    e.stopPropagation();\r\n    \r\n    this.setState({ running: true }, () => {\r\n      Promise.resolve(this.props.onClick && this.props.onClick())\r\n        .catch()\r\n        .then(() => {\r\n          if (!this.disposed) {\r\n            this.setState({ running: false });\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    this.disposed = true;\r\n  }\r\n\r\n  public render() {\r\n    const className = classname('UiButton', 'clickable',\r\n      this.props.className, { 'disabled': this.props.disabled || this.state.running });\r\n\r\n    return (\r\n      <div className={className} onClick={this.onClick} style={this.props.style}>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as SolidIcons from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport UiButton from '../../UiButton/UiButton';\r\nimport UiCard from '../../UiCard/UiCard';\r\nimport { IAddModuleCardProps } from './IAddModuleCardProps';\r\n\r\nimport './AddModuleCard.css';\r\n\r\nexport default class AddModuleCard extends React.Component<IAddModuleCardProps> {\r\n  public render() {\r\n    let input: HTMLInputElement | null;\r\n    const onAdd = () => this.props.onAdd(input && input.value);\r\n\r\n    return (\r\n      <UiCard className=\"AddModuleCard\">\r\n        <input ref={el => input = el} placeholder=\"GitHub Repository URL\" />\r\n        <UiButton className=\"addButton\" onClick={onAdd}>\r\n          <FontAwesomeIcon icon={SolidIcons.faPlus} /> Add\r\n        </UiButton>\r\n      </UiCard>\r\n    );\r\n  }\r\n}\r\n","import * as SolidIcons from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport { ICommandResult } from '../../../../../interfaces/ICommandResult';\r\nimport UiCard from '../../UiCard/UiCard';\r\nimport { ICommandResultProps } from './ICommandResultProps';\r\n\r\nimport './CommandResult.css';\r\n\r\nexport default class CommandResult extends React.Component<ICommandResultProps> {\r\n  constructor(props: ICommandResultProps) {\r\n    super(props);\r\n  }\r\n\r\n  public renderCommandResult(result: ICommandResult, key: string) {\r\n    const icon = result.success === false ?\r\n      <FontAwesomeIcon icon={SolidIcons.faTimes} /> :\r\n      result.success === true ?\r\n        <FontAwesomeIcon icon={SolidIcons.faCheck} /> :\r\n        <FontAwesomeIcon icon={SolidIcons.faQuestion} />;\r\n\r\n    let log: JSX.Element | undefined;\r\n    if (result.log && result.log.length) {\r\n      log = (\r\n        <ul className=\"log\">\r\n          {result.log.map((item, i) => <li key={i}>{item}</li>)}\r\n        </ul>\r\n      );\r\n    }\r\n\r\n    let title = result.command || '';\r\n    if (result.args) {\r\n      title += ' | args: ' + result.args;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment key={key}>\r\n        <div className=\"result\">\r\n          <div className=\"commandTitle\">{icon} {title}</div>\r\n          {log}\r\n        </div>\r\n        {result.children && result.children.map((child, index) =>\r\n          this.renderCommandResult(child, key + '.' + index))}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <UiCard className=\"CommandResult\">\r\n        <div className=\"title\">Result</div>\r\n        <div className=\"close clickable\" onClick={this.props.onClose}>\r\n          <FontAwesomeIcon icon={SolidIcons.faTimes} />\r\n        </div>\r\n        <div className=\"results\">\r\n          {this.props.results.map((item, index) => this.renderCommandResult(item, index.toString()))}\r\n        </div>\r\n      </UiCard>\r\n    );\r\n  }\r\n}\r\n","import * as classname from 'classnames';\r\nimport * as React from 'react';\r\nimport { IUiCardButtonRowProps } from './IUiCardButtonRowtProps';\r\n\r\nimport './UiCardButtonRow.css';\r\n\r\nexport default class UiCardButtonRow extends React.Component<IUiCardButtonRowProps> {\r\n  public render() {\r\n    const className = classname('UiCardButtonRow', this.props.className, {\r\n      'UiCardButtonRowDividerFull': this.props.divider === 'full',\r\n      'UiCardButtonRowDividerHalf': this.props.divider === 'half',\r\n    });\r\n\r\n    return (\r\n      <div className={className} style={this.props.style}>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as BrandIcons from '@fortawesome/free-brands-svg-icons';\r\nimport * as SolidIcons from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as classname from 'classnames';\r\nimport * as React from 'react';\r\nimport UiButton from '../../UiButton/UiButton';\r\nimport UiCard from '../../UiCard/UiCard';\r\nimport UiCardButtonRow from '../../UiCardButtonRow/UiCardButtonRow';\r\nimport UiCardContent from '../../UiCardContent/UiCardContent';\r\nimport UiCardTitle from '../../UiCardTitle/UiCardTitle';\r\nimport { IModuleCardProps } from './IModuleCardProps';\r\n\r\nimport './ModuleCard.css';\r\n\r\ninterface IModuleCardState {\r\n  showActions: boolean;\r\n}\r\n\r\nexport default class ModuleCard extends React.Component<IModuleCardProps, IModuleCardState> {\r\n  constructor(props: IModuleCardProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      showActions: false\r\n    };\r\n\r\n    this.showActions = this.showActions.bind(this);\r\n    this.hideActions = this.hideActions.bind(this);\r\n    this.onUpdate = this.onUpdate.bind(this);\r\n    this.onRebuild = this.onRebuild.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  }\r\n\r\n  private showActions() {\r\n    this.setState({ showActions: true });\r\n  }\r\n\r\n  private hideActions() {\r\n    this.setState({ showActions: false });\r\n  }\r\n\r\n  private onUpdate() {\r\n    this.hideActions();\r\n    this.props.onUpdate(this.props.module);\r\n  }\r\n\r\n  private onRebuild() {\r\n    this.hideActions();\r\n    this.props.onRebuild(this.props.module);\r\n  }\r\n\r\n  private onRemove() {\r\n    this.hideActions();\r\n    this.props.onRemove(this.props.module);\r\n  }\r\n\r\n  public renderTitle() {\r\n    let updateIcon: JSX.Element | undefined;\r\n    if (this.props.module.hasUpdate) {\r\n      updateIcon = <span className=\"hasUpdate\"><FontAwesomeIcon icon={SolidIcons.faStarOfLife} /></span>;\r\n    }\r\n\r\n    return (\r\n      <UiCardTitle>\r\n        <FontAwesomeIcon icon={SolidIcons.faCube} /> {this.props.module.name}\r\n        {updateIcon}\r\n      </UiCardTitle>\r\n    );\r\n  }\r\n\r\n  public renderDescription() {\r\n    return (\r\n      <UiCardContent className=\"description\">\r\n        {this.props.module.description || 'no description'}\r\n      </UiCardContent>\r\n    );\r\n  }\r\n\r\n  public renderAuthor() {\r\n    let authorName: string | undefined = 'unknown';\r\n    let authorMail: string | undefined;\r\n    if (typeof this.props.module.author === 'string') {\r\n      authorName = this.props.module.author;\r\n    } else if (typeof this.props.module.author === 'object') {\r\n      authorName = this.props.module.author.name || this.props.module.author.email;\r\n      authorMail = this.props.module.author.email;\r\n    }\r\n    const author = (authorMail) ? (<a href={'mailto://' + authorMail}>{authorName}</a>) : authorName;\r\n\r\n    return (\r\n      <UiCardContent className=\"author\">by {author}</UiCardContent>\r\n    );\r\n  }\r\n\r\n  public renderFooter() {\r\n    let repoLink = <div />;\r\n    if (this.props.module.repository) {\r\n      repoLink = (\r\n        <a className=\"clickable\" href={this.props.module.repository} target=\"_blank\">\r\n          <FontAwesomeIcon icon={BrandIcons.faGithub} /> GitHub\r\n        </a>\r\n      );\r\n    }\r\n\r\n    const className = classname('footer', 'default', { 'hide': this.state.showActions });\r\n\r\n    return (\r\n      <UiCardButtonRow className={className} divider=\"half\">\r\n        <div className=\"version\">{this.props.module.version}</div>\r\n        {repoLink}\r\n        <UiButton onClick={this.showActions}><FontAwesomeIcon icon={SolidIcons.faCog} /> Modify</UiButton>\r\n      </UiCardButtonRow>\r\n    );\r\n  }\r\n\r\n  public renderActions() {\r\n    const className = classname('footer', 'actions', { 'hide': !this.state.showActions });\r\n\r\n    return (\r\n      <UiCardButtonRow className={className} divider=\"full\">\r\n        <UiButton disabled={!this.props.module.hasUpdate} onClick={this.onUpdate}>Update</UiButton>\r\n        <UiButton disabled={!this.props.module.canBuild} onClick={this.onRebuild}>Rebuild</UiButton>\r\n        <UiButton disabled={!this.props.module.canRemove} onClick={this.onRemove}>Remove</UiButton>\r\n        <UiButton onClick={this.hideActions}><FontAwesomeIcon icon={SolidIcons.faTimes} /></UiButton>\r\n      </UiCardButtonRow>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <UiCard className=\"ModuleCard\">\r\n        {this.renderTitle()}\r\n        {this.renderDescription()}\r\n        {this.renderAuthor()}\r\n        {this.renderFooter()}\r\n        {this.renderActions()}\r\n      </UiCard>\r\n    );\r\n  }\r\n}\r\n","import * as SolidIcons from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport UiButton from '../../UiButton/UiButton';\r\nimport UiCard from '../../UiCard/UiCard';\r\nimport UiCardButtonRow from '../../UiCardButtonRow/UiCardButtonRow';\r\nimport { IUpdateModulesCardProps } from './IUpdateModulesCardProps';\r\n\r\nimport './UpdateModulesCard.css';\r\n\r\nexport default class UpdateModulesCard extends React.Component<IUpdateModulesCardProps> {\r\n  public render() {\r\n    const modulesWithUpdates = this.props.modules.filter(x => x.hasUpdate);\r\n    const isChecked = this.props.modules.some(x => x.hasUpdate !== undefined);\r\n    const updatesTitle = isChecked ? modulesWithUpdates.length : '-';\r\n\r\n    return (\r\n      <UiCard className=\"UpdateModulesCard\">\r\n        <UiCardButtonRow divider=\"full\">\r\n          <div>Updates: {updatesTitle}</div>\r\n          <UiButton className=\"checkUpdatesButton\" onClick={this.props.onCheckUpdates} disabled={this.props.checkingUpdates}>\r\n            <FontAwesomeIcon icon={SolidIcons.faSyncAlt} spin={this.props.checkingUpdates} /> Check\r\n          </UiButton>\r\n          <UiButton className=\"updateAllButton\" onClick={this.props.onCheckUpdates} disabled={!modulesWithUpdates.length}>\r\n            <FontAwesomeIcon icon={SolidIcons.faDownload} /> Update All\r\n          </UiButton>\r\n        </UiCardButtonRow>\r\n      </UiCard>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { ICommandResult } from '../../../../interfaces/ICommandResult';\r\nimport { IModuleRepositoryItem } from '../../../../interfaces/IModuleRepositoryItem';\r\nimport { apiClient } from '../../../ApiClient';\r\nimport Loading from '../../Loading/Loading';\r\nimport UiFlowLayout from '../UiFlowLayout/UiFlowLayout';\r\nimport UiLoadingCard from '../UiLoadingCard/UiLoadingCard';\r\nimport UiOverlay from '../UiOverlay/UiOverlay';\r\nimport AddModuleCard from './AddModuleCard/AddModuleCard';\r\nimport CommandResult from './CommandResult/CommandResult';\r\nimport ModuleCard from './ModuleCard/ModuleCard';\r\nimport UpdateModulesCard from './UpdateModulesCard/UpdateModulesCard';\r\n\r\nimport './ModuleManagerPage.css';\r\n\r\nexport interface IModuleManagerPageState {\r\n  loading: boolean;\r\n  checkingUpdates: boolean;\r\n  showResult: boolean;\r\n  results: ICommandResult[];\r\n  modules: IModuleRepositoryItem[];\r\n}\r\n\r\nexport default class ModuleManagerPage extends React.Component<any, IModuleManagerPageState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: false,\r\n      checkingUpdates: false,\r\n      showResult: false,\r\n      results: [],\r\n      modules: []\r\n    };\r\n\r\n    this.loadModules = this.loadModules.bind(this);\r\n    this.checkUpdates = this.checkUpdates.bind(this);\r\n    this.updateAll = this.updateAll.bind(this);\r\n    this.updateModule = this.updateModule.bind(this);\r\n    this.removeModule = this.removeModule.bind(this);\r\n    this.rebuildModule = this.rebuildModule.bind(this);\r\n    this.addModule = this.addModule.bind(this);\r\n    this.hideResult = this.hideResult.bind(this);\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this.loadModules();\r\n  }\r\n\r\n  public loadModules(): Promise<void> {\r\n    return apiClient.getModules()\r\n      .then(modules => this.setState({ modules }))\r\n      .catch(); // TODO\r\n  }\r\n\r\n  public async checkUpdates(): Promise<void> {\r\n    this.setState({ checkingUpdates: true });\r\n    await apiClient.checkUpdates();\r\n    this.setState({ checkingUpdates: false });\r\n    apiClient.getModules.clearCache();\r\n    await this.loadModules();\r\n  }\r\n\r\n  public async updateAll(): Promise<void> {\r\n    const modulesWithUpdates = this.state.modules.filter(x => x.hasUpdate);\r\n    if (!modulesWithUpdates.length) {\r\n      return;\r\n    }\r\n\r\n    const results: ICommandResult[] = [];\r\n    this.setState({ loading: true });\r\n    try {\r\n      for (const module of modulesWithUpdates) {\r\n        const result = await apiClient.updateModule({ moduleName: module.name });\r\n        results.push(...result);\r\n      }\r\n      this.showResult(results);\r\n    } catch (error) {\r\n      this.showError(error);\r\n    }\r\n    apiClient.getModules.clearCache();\r\n    await this.loadModules();\r\n  }\r\n\r\n  public async updateModule(module: IModuleRepositoryItem): Promise<void> {\r\n    if (!module.hasUpdate) {\r\n      return;\r\n    };\r\n\r\n    this.setState({ loading: true });\r\n    try {\r\n      const result = await apiClient.updateModule({ moduleName: module.name });\r\n      this.showResult(result);\r\n    } catch (error) {\r\n      this.showError(error);\r\n    }\r\n    apiClient.getModules.clearCache();\r\n    await this.loadModules();\r\n  }\r\n\r\n  public async rebuildModule(module: IModuleRepositoryItem): Promise<void> {\r\n    if (!module.canBuild) {\r\n      return;\r\n    };\r\n\r\n    this.setState({ loading: true });\r\n    try {\r\n      const result = await apiClient.rebuildModule({ moduleName: module.name });\r\n      this.showResult(result);\r\n    } catch (error) {\r\n      this.showError(error);\r\n    }\r\n    apiClient.getModules.clearCache();\r\n    await this.loadModules();\r\n  }\r\n\r\n  public async removeModule(module: IModuleRepositoryItem): Promise<void> {\r\n    if (!module.canRemove) {\r\n      return;\r\n    };\r\n\r\n    this.setState({ loading: true });\r\n    try {\r\n      const result = await apiClient.deleteModule({ moduleName: module.name });\r\n      this.showResult(result);\r\n    } catch (error) {\r\n      this.showError(error);\r\n    }\r\n    apiClient.getModules.clearCache();\r\n    await this.loadModules();\r\n  }\r\n\r\n  public async addModule(repository: string | null): Promise<void> {\r\n    if (!repository || !repository.trim()) {\r\n      return;\r\n    };\r\n\r\n    this.setState({ loading: true });\r\n    try {\r\n      const result = await apiClient.addModule(undefined, { repository });\r\n      this.showResult(result);\r\n    } catch (error) {\r\n      this.showError(error);\r\n    }\r\n    apiClient.getModules.clearCache();\r\n    await this.loadModules();\r\n  }\r\n\r\n  private showError(err: any) {\r\n    const message = err && err.message || JSON.stringify(err);\r\n    const result = { command: 'Error', success: false, log: [message] } as ICommandResult;\r\n    this.setState({ loading: false, showResult: true, results: [result] });\r\n  }\r\n\r\n  private showResult(results: ICommandResult[]) {\r\n    this.setState({ loading: false, showResult: true, results });\r\n  }\r\n\r\n  public hideResult() {\r\n    this.setState({ showResult: false });\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <section className=\"ModuleManagerPage\">\r\n        {this.state.loading && (\r\n          <UiOverlay><Loading center={true} /></UiOverlay>\r\n        )}\r\n        {this.state.showResult && (\r\n          <UiOverlay>\r\n            <CommandResult results={this.state.results} onClose={this.hideResult} />\r\n          </UiOverlay>\r\n        )}\r\n        <UiFlowLayout>\r\n          <AddModuleCard onAdd={this.addModule} />\r\n          <UpdateModulesCard\r\n            checkingUpdates={this.state.checkingUpdates}\r\n            modules={this.state.modules}\r\n            onCheckUpdates={this.checkUpdates}\r\n            onUpdateAll={this.updateAll}\r\n            onUpdateModule={this.updateModule} />\r\n        </UiFlowLayout>\r\n        {!this.state.modules.length && (\r\n          <UiFlowLayout>\r\n            <UiLoadingCard />\r\n          </UiFlowLayout>\r\n        )}\r\n        <UiFlowLayout>\r\n          {this.state.modules.map(item =>\r\n            <ModuleCard key={item.name}\r\n              module={item}\r\n              onRemove={this.removeModule}\r\n              onRebuild={this.rebuildModule}\r\n              onUpdate={this.updateModule} />)}\r\n        </UiFlowLayout>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport './Navigation.css';\r\n\r\nexport default class Navigation extends React.Component {\r\n  public render() {\r\n    return (\r\n      <section className=\"Navigation\">\r\n        <NavLink activeClassName=\"active\" to=\"/admin/ModuleManager\" role=\"button\" >Modules</NavLink>\r\n        <NavLink activeClassName=\"active\" to=\"/admin/ServiceManager\" role=\"button\">Services</NavLink>\r\n        <NavLink activeClassName=\"active\" to=\"/admin/Pages\" role=\"button\">Pages</NavLink>\r\n        <NavLink activeClassName=\"active\" to=\"/admin/Settings\" role=\"button\">Settings</NavLink>\r\n        <NavLink activeClassName=\"active\" to=\"/admin/System\" role=\"button\">System</NavLink>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import { IFieldDefinition } from '../interfaces/IObjectDefinition';\r\n\r\nexport const getDefaultFieldValue = (field: IFieldDefinition) => {\r\n  const defaultValue = field.defaultValue;\r\n\r\n  if (field.isArray) {\r\n    if (defaultValue && Array.isArray(defaultValue)) {\r\n      return defaultValue;\r\n    }\r\n    return [];\r\n  }\r\n\r\n  switch (field.valueType) {\r\n    case 'object':\r\n      let result: any = defaultValue;\r\n\r\n      if (result === undefined) {\r\n        result = getDefaultObjectValue(field.fields);\r\n      }\r\n\r\n      return result;\r\n    case 'number':\r\n      return defaultValue || 0;\r\n    case 'boolean':\r\n      return defaultValue || false;\r\n    case 'string':\r\n      return defaultValue || '';\r\n    case 'style':\r\n      return defaultValue || {};\r\n    case 'webComponent':\r\n      return undefined;\r\n  }\r\n  return undefined;\r\n};\r\n\r\nexport const getDefaultObjectValue = (fields?: IFieldDefinition[]) => {\r\n  const result = {};\r\n  if (fields) {\r\n    fields.forEach(f => {\r\n      result[f.name] = getDefaultFieldValue(f);\r\n    });\r\n  }\r\n  return result;\r\n};","import * as RegularIcons from '@fortawesome/free-regular-svg-icons';\r\nimport * as SolidIcons from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport { getDefaultFieldValue } from 'src/common/optionsHelper';\r\nimport { IFieldDefinition } from 'src/interfaces/IObjectDefinition';\r\nimport * as uuidv4 from 'uuid/v4';\r\nimport UiButton from '../../UiButton/UiButton';\r\nimport OptionItem from '../OptionItem';\r\n\r\nimport './ArrayForm.css';\r\n\r\ninterface IArrayFormProps {\r\n  definition: IFieldDefinition;\r\n  value: any[];\r\n  valueChange: (newValue: any[]) => void;\r\n}\r\n\r\nexport default class ArrayForm extends React.Component<IArrayFormProps> {\r\n  private arrayKeys: string[] = [];\r\n\r\n  constructor(props: IArrayFormProps) {\r\n    super(props);\r\n\r\n    this.arrayItemAdd = this.arrayItemAdd.bind(this);\r\n    this.arrayItemRemove = this.arrayItemRemove.bind(this);\r\n    this.arrayItemMoveUp = this.arrayItemMoveUp.bind(this);\r\n    this.arrayItemMoveDown = this.arrayItemMoveDown.bind(this);\r\n  }\r\n\r\n  private arrayItemChange(index: number, definition: IFieldDefinition, newValue: any) {\r\n    let array = this.props.value || [];\r\n    array = array.slice();\r\n    array[index] = newValue;\r\n    this.props.valueChange(array);\r\n  }\r\n\r\n  private arrayItemRemove(index: number) {\r\n    let array = this.props.value || [];\r\n    array = array.slice();\r\n    array.splice(index, 1);\r\n    this.arrayKeys.splice(index, 1);\r\n    this.props.valueChange(array);\r\n  }\r\n\r\n  private arrayItemMoveUp(index: number) {\r\n    const array = this.props.value || [];\r\n\r\n    if (index === 0) {\r\n      return;\r\n    }\r\n\r\n    const item = array.splice(index, 1)[0];\r\n    array.splice(index - 1, 0, item);\r\n\r\n    const keyItem = this.arrayKeys.splice(index, 1)[0];\r\n    this.arrayKeys.splice(index - 1, 0, keyItem);\r\n\r\n    this.props.valueChange(array);\r\n  }\r\n\r\n  private arrayItemMoveDown(index: number) {\r\n    const array = this.props.value || [];\r\n\r\n    if (index === array.length - 1) {\r\n      return;\r\n    }\r\n\r\n    const item = array.splice(index, 1)[0];\r\n    array.splice(index + 1, 0, item);\r\n\r\n    const keyItem = this.arrayKeys.splice(index, 1)[0];\r\n    this.arrayKeys.splice(index + 1, 0, keyItem);\r\n\r\n    this.props.valueChange(array);\r\n  }\r\n\r\n  private arrayItemAdd() {\r\n    const arrayItemDefinition = { ...this.props.definition };\r\n    arrayItemDefinition.isArray = false;\r\n\r\n    let array = this.props.value || [];\r\n    array = array.slice();\r\n    array.push(getDefaultFieldValue(arrayItemDefinition));\r\n    this.props.valueChange(array);\r\n  }\r\n\r\n  private renderArrayItem(value: any, index: number) {\r\n    const arrayItemDefinition = { ...this.props.definition };\r\n    arrayItemDefinition.isArray = false;\r\n    arrayItemDefinition.displayName = 'Item ' + (index + 1);\r\n\r\n    let key = this.arrayKeys[index];\r\n    if (!key) {\r\n      key = this.arrayKeys[index] = uuidv4();\r\n    }\r\n\r\n    return (\r\n      <React.Fragment key={key}>\r\n        <OptionItem definition={arrayItemDefinition} value={value}\r\n          valueChange={this.arrayItemChange.bind(this, index)} >\r\n          <UiButton onClick={this.arrayItemRemove.bind(this, index)}>\r\n            <FontAwesomeIcon icon={RegularIcons.faTrashAlt} />\r\n          </UiButton>\r\n          <UiButton onClick={this.arrayItemMoveUp.bind(this, index)}>\r\n            <FontAwesomeIcon icon={RegularIcons.faArrowAltCircleUp} />\r\n          </UiButton>\r\n          <UiButton onClick={this.arrayItemMoveDown.bind(this, index)}>\r\n            <FontAwesomeIcon icon={RegularIcons.faArrowAltCircleDown} />\r\n          </UiButton>\r\n        </OptionItem>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    const array = this.props.value || [];\r\n    return (\r\n      <React.Fragment>\r\n        {array.map((value, index) => this.renderArrayItem(value, index))}\r\n        <UiButton className=\"add-array-item\" onClick={this.arrayItemAdd}>\r\n          <FontAwesomeIcon icon={SolidIcons.faPlus} /> Add item\r\n        </UiButton>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import * as RegularIcons from '@fortawesome/free-regular-svg-icons';\r\nimport * as SolidIcons from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport { IFieldDefinition } from 'src/interfaces/IObjectDefinition';\r\nimport UiButton from '../../UiButton/UiButton';\r\nimport OptionItem from '../OptionItem';\r\n\r\nimport './StyleForm.css';\r\n\r\nconst styleProperties = ['background', 'backgroundAttachment', 'backgroundColor', 'backgroundImage',\r\n  'backgroundPosition', 'backgroundRepeat', 'border', 'borderBottom',\r\n  'borderBottomColor', 'borderBottomStyle', 'borderBottomWidth', 'borderColor',\r\n  'borderLeft', 'borderLeftColor', 'borderLeftStyle', 'borderLeftWidth',\r\n  'borderRight', 'borderRightColor', 'borderRightStyle', 'borderRightWidth',\r\n  'borderStyle', 'borderTop', 'borderTopColor', 'borderTopStyle',\r\n  'borderTopWidth', 'borderWidth', 'clear', 'clip',\r\n  'color', 'cursor', 'display', 'filter',\r\n  'cssFloat', 'font', 'fontFamily', 'fontSize',\r\n  'fontVariant', 'fontWeight', 'height', 'left',\r\n  'letterSpacing', 'lineHeight', 'listStyle', 'listStyleImage',\r\n  'listStylePosition', 'listStyleType', 'margin', 'marginBottom',\r\n  'marginLeft', 'marginRight', 'marginTop', 'overflow',\r\n  'padding', 'paddingBottom', 'paddingLeft', 'paddingRight',\r\n  'paddingTop', 'pageBreakAfter', 'pageBreakBefore', 'position',\r\n  'strokeDasharray', 'strokeDashoffset', 'strokeWidth', 'textAlign',\r\n  'textDecoration', 'textIndent', 'textTransform', 'top',\r\n  'verticalAlign', 'visibility', 'width', 'zIndex'];\r\n\r\ninterface IStyleFormProps {\r\n  value: object;\r\n  onChange: (newValue: object) => any;\r\n}\r\n\r\ninterface IStyleFormState {\r\n  fields: IFieldDefinition[];\r\n}\r\n\r\nexport default class StyleForm extends React.Component<IStyleFormProps, IStyleFormState> {\r\n  private newPropertySelect: HTMLSelectElement | null;\r\n\r\n  constructor(props: IStyleFormProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      fields: this.getFields(this.props.value)\r\n    };\r\n\r\n    this.addField = this.addField.bind(this);\r\n    this.valueChange = this.valueChange.bind(this);\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: IStyleFormProps) {\r\n    if (prevProps !== this.props) {\r\n      this.setState({ fields: this.getFields(this.props.value) });\r\n    }\r\n  }\r\n\r\n  private getFields(obj: object): IFieldDefinition[] {\r\n    const fields: IFieldDefinition[] = [];\r\n\r\n    if (obj) {\r\n      Object.keys(obj).forEach(name => {\r\n        const field: IFieldDefinition = {\r\n          name,\r\n          displayName: name,\r\n          valueType: 'string',\r\n        };\r\n        fields.push(field);\r\n      });\r\n    }\r\n\r\n    return fields;\r\n  }\r\n\r\n  private valueChange(field: IFieldDefinition, value: any) {\r\n    const newValue = { ...this.props.value };\r\n    newValue[field.name] = value;\r\n    this.props.onChange(newValue);\r\n  }\r\n\r\n  private removeField(fieldName: string) {\r\n    const newValue = { ...this.props.value };\r\n    delete (newValue[fieldName]);\r\n    this.props.onChange(newValue);\r\n  }\r\n\r\n  private addField() {\r\n    if (!this.newPropertySelect) {\r\n      return;\r\n    }\r\n\r\n    const fieldName = this.newPropertySelect.value;\r\n\r\n    if (!fieldName || this.props.value && this.props.value.hasOwnProperty(fieldName)) {\r\n      return;\r\n    }\r\n\r\n    const newValue = { ...this.props.value };\r\n    newValue[fieldName] = '';\r\n    this.props.onChange(newValue);\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className=\"StyleForm\">\r\n        {this.state.fields.map(field => {\r\n          const value = this.props.value && this.props.value[field.name];\r\n          return (\r\n            <OptionItem key={field.name} definition={field} value={value} valueChange={this.valueChange} >\r\n              <UiButton onClick={this.removeField.bind(this, field.name)}>\r\n                <FontAwesomeIcon icon={RegularIcons.faTrashAlt} />\r\n              </UiButton>\r\n            </OptionItem>\r\n          );\r\n        })}\r\n        <div className=\"newPropertyRow\">\r\n          <select ref={el => this.newPropertySelect = el}>\r\n            {styleProperties.map(property => <option key={property} value={property}>{property}</option>)}\r\n          </select>\r\n          <UiButton onClick={this.addField}>\r\n            <FontAwesomeIcon icon={SolidIcons.faPlus} /> Add\r\n          </UiButton>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { IComponentDefinition } from \"../../../interfaces/IComponentDefinition\";\r\nimport CarouselLayout from \"./CarouselLayout\";\r\n\r\nexport const carouselLayoutDefinition: IComponentDefinition = {\r\n    component: CarouselLayout,\r\n    description: 'Carousel Layout',\r\n    displayName: 'Carousel Layout',\r\n    name: 'CarouselLayout',\r\n    fields: []\r\n};","import * as React from 'react';\r\n\r\nimport './CarouselLayout.css';\r\n\r\nexport default class CarouselLayout extends React.Component<any, any> {\r\n  constructor(props: any) {\r\n    super(props);\r\n  }\r\n\r\n  public render() {\r\n    return <section className=\"CarouselLayout\">CarouselLayout</section>;\r\n  }\r\n}\r\n","import { IComponentDefinition } from \"../../../interfaces/IComponentDefinition\";\r\nimport GridLayout from \"./GridLayout\";\r\n\r\nexport const gridLayoutDefinition: IComponentDefinition = {\r\n    component: GridLayout,\r\n    description: 'Grid Layout',\r\n    displayName: 'Grid Layout',\r\n    name: 'GridLayout',\r\n    fields: [\r\n        // { displayName: 'Rows', name: 'rows', valueType: 'number', minValue: 0 },\r\n        // { displayName: 'Columns', name: 'cols', valueType: 'number', minValue: 0 },\r\n        { displayName: 'Grid Style', name: 'gridStyle', valueType: 'style' },\r\n        { displayName: 'Tile Style', name: 'tileStyle', valueType: 'style' },\r\n        {\r\n            displayName: 'Grid tiles',\r\n            name: 'tiles',\r\n            valueType: 'object',\r\n            isArray: true,\r\n            fields: [\r\n                { displayName: 'Row', name: 'row', valueType: 'number', minValue: 1, defaultValue: 1 },\r\n                { displayName: 'Column', name: 'col', valueType: 'number', minValue: 1, defaultValue: 1 },\r\n                { displayName: 'Row span', name: 'rowspan', valueType: 'number', minValue: 1, defaultValue: 1 },\r\n                { displayName: 'Column span', name: 'colspan', valueType: 'number', minValue: 1, defaultValue: 1 },\r\n                { displayName: 'Content', name: 'content', valueType: 'webComponent' },\r\n                { displayName: 'Style', name: 'style', valueType: 'style' }\r\n            ]\r\n        }\r\n    ]\r\n};","import * as React from 'react';\r\nimport { IDynamicReactComponentProps } from '../../../interfaces/IDynamicReactComponentClass';\r\nimport { IGridLayoutOptions, IGridLayoutTileOptions } from './IGridLayoutTileOptions';\r\n\r\nimport './GridLayout.css';\r\n\r\nexport default class GridLayout extends React.Component<IDynamicReactComponentProps<IGridLayoutOptions>> {\r\n  constructor(props: IDynamicReactComponentProps<IGridLayoutOptions>) {\r\n    super(props);\r\n\r\n    this.renderTile = this.renderTile.bind(this);\r\n  }\r\n\r\n  private renderTile(tile: IGridLayoutTileOptions, index: number) {\r\n    const style = { ...this.props.options.tileStyle, ...tile.style };\r\n    style.gridColumn = tile.col.toString();\r\n    if (tile.colspan > 1) {\r\n      style.gridColumn += ' / span ' + tile.colspan;\r\n    }\r\n\r\n    style.gridRow = tile.row.toString();\r\n    if (tile.rowspan > 1) {\r\n      style.gridRow += ' / span ' + tile.rowspan;\r\n    }\r\n    return (\r\n      <div className=\"GridTile\" key={index} style={style}>\r\n        {this.props.renderComponent({ id: tile.content })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <section className=\"GridLayout\" style={this.props.options.gridStyle}>\r\n        {this.props.options.tiles.map(this.renderTile)}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import { IComponentDefinition } from \"../../../interfaces/IComponentDefinition\";\r\nimport IFrame from \"./IFrame\";\r\n\r\nexport const iFrameDefinition: IComponentDefinition = {\r\n    component: IFrame,\r\n    description: 'IFrame Component',\r\n    displayName: 'IFrame',\r\n    name: 'IFrame',\r\n    fields: [\r\n        { displayName: 'URL', name: 'url', valueType: 'string' }\r\n    ]\r\n};","import * as React from 'react';\r\nimport { IDynamicReactComponentProps } from '../../../interfaces/IDynamicReactComponentClass';\r\nimport { IIFrameOptions } from './IIFrameOptions';\r\n\r\nimport './IFrame.css';\r\n\r\nexport default class IFrame extends React.Component<IDynamicReactComponentProps<IIFrameOptions>> {\r\n  public render() {\r\n    return <iframe className=\"ui-iframe\" src={this.props.options.url} />;\r\n  }\r\n}\r\n","import { IComponentDefinition } from \"../../../interfaces/IComponentDefinition\";\r\nimport ListLayout from \"./ListLayout\";\r\n\r\nexport const listLayoutDefinition: IComponentDefinition = {\r\n  component: ListLayout,\r\n  description: 'List Layout',\r\n  displayName: 'List Layout',\r\n  name: 'ListLayout',\r\n  fields: [\r\n    { displayName: 'List Style', name: 'listStyle', valueType: 'style' },\r\n    { displayName: 'Item Style', name: 'itemStyle', valueType: 'style' },\r\n    {\r\n      displayName: 'List items',\r\n      name: 'items',\r\n      valueType: 'object',\r\n      isArray: true,\r\n      fields: [\r\n        { displayName: 'Content', name: 'content', valueType: 'webComponent' },\r\n        { displayName: 'Style', name: 'style', valueType: 'style' }\r\n      ]\r\n    }\r\n  ]\r\n};","import * as React from 'react';\r\nimport { IDynamicReactComponentProps } from '../../../interfaces/IDynamicReactComponentClass';\r\nimport { IListLayoutItemOptions, IListLayoutOptions } from './IListLayoutOptions';\r\n\r\nimport './ListLayout.css';\r\n\r\nexport default class ListLayout extends React.Component<IDynamicReactComponentProps<IListLayoutOptions>> {\r\n  constructor(props: IDynamicReactComponentProps<IListLayoutOptions>) {\r\n    super(props);\r\n\r\n    this.renderListItem = this.renderListItem.bind(this);\r\n  }\r\n\r\n  private renderListItem(item: IListLayoutItemOptions, index: number) {\r\n    const style = { ...this.props.options.itemStyle, ...item.style };\r\n\r\n    return (\r\n      <div className=\"ListItem\" key={index} style={style}>\r\n        {this.props.renderComponent({ id: item.content })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <section className=\"ListLayout\">\r\n        {this.props.options.items.map(this.renderListItem)}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import { IComponentDefinition } from \"../../../interfaces/IComponentDefinition\";\r\nimport MarkDown from \"./MarkDown\";\r\n\r\nexport const markDownDefinition: IComponentDefinition = {\r\n  component: MarkDown,\r\n  description: 'MarkDown Component',\r\n  displayName: 'MarkDown',\r\n  name: 'MarkDown',\r\n  fields: [\r\n    { displayName: 'Text', name: 'text', valueType: 'string', textRows: 10 }\r\n  ]\r\n};","import * as React from 'react';\r\nimport * as ReactMarkdown from 'react-markdown';\r\nimport { IDynamicReactComponentProps } from 'src/interfaces/IDynamicReactComponentClass';\r\nimport { IMarkDownOptions } from './IMarkDownProps';\r\n\r\nimport './MarkDown.css';\r\n\r\nexport default class MarkDown extends React.Component<IDynamicReactComponentProps<IMarkDownOptions>> {\r\n  public render() {\r\n    return (\r\n      <section className=\"MarkDown\">\r\n        <ReactMarkdown source={this.props.options.text} />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import { IComponentDefinition } from \"../../../interfaces/IComponentDefinition\";\r\nimport Notifications from \"./Notifications\";\r\n\r\nexport const notificationsDefinition: IComponentDefinition = {\r\n    component: Notifications,\r\n    description: 'Notifications',\r\n    displayName: 'Notifications',\r\n    name: 'Notifications',\r\n    fields: []\r\n};","import * as React from 'react';\r\n\r\nimport './Notifications.css';\r\n\r\nexport default class Notifications extends React.Component<any, any> {\r\n  constructor(props: any) {\r\n    super(props);\r\n  }\r\n\r\n  public render() {\r\n    return <section className=\"Notifications\">Notifications</section>;\r\n  }\r\n}\r\n","import { IComponentDefinition } from \"../../interfaces/IComponentDefinition\";\r\nimport { carouselLayoutDefinition } from \"./CarouselLayout/CarouselLayoutDefinition\";\r\nimport { gridLayoutDefinition } from \"./GridLayout/GridLayoutDefinition\";\r\nimport { iFrameDefinition } from \"./IFrame/IFrameDefinition\";\r\nimport { listLayoutDefinition } from \"./ListLayout/ListLayoutDefinition\";\r\nimport { markDownDefinition } from \"./MarkDown/MarkDownDefinition\";\r\nimport { notificationsDefinition } from \"./Notifications/NotificationsDefinition\";\r\nimport { welcomeDefinition } from \"./Welcome/WelcomeDefinition\";\r\n\r\nexport const components: IComponentDefinition[] = [\r\n    listLayoutDefinition,\r\n    carouselLayoutDefinition,\r\n    gridLayoutDefinition,\r\n    welcomeDefinition,\r\n    markDownDefinition,\r\n    notificationsDefinition,\r\n    iFrameDefinition\r\n];","import { IComponentDefinition } from \"../../../interfaces/IComponentDefinition\";\r\nimport Welcome from \"./Welcome\";\r\n\r\nexport const welcomeDefinition: IComponentDefinition = {\r\n    component: Welcome,\r\n    description: 'Welcome Component',\r\n    displayName: 'Welcome',\r\n    name: 'Welcome',\r\n    fields: []\r\n};","import * as SvgIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport { IServerInfo } from '../../../interfaces/IServerInfo';\r\nimport { apiClient } from '../../ApiClient';\r\nimport RoundButton from '../../components/RoundButton/RoundButton';\r\nimport logo from './logo.svg';\r\n\r\nimport './Welcome.css';\r\n\r\ninterface IWelcomeState {\r\n  info?: IServerInfo;\r\n}\r\n\r\nexport default class Welcome extends React.Component<any, IWelcomeState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  public componentDidMount() {\r\n    apiClient.getServerInfo().then(info => {\r\n      this.setState({ info });\r\n    });\r\n  }\r\n\r\n  public render() {\r\n    let info;\r\n\r\n    if (this.state.info) {\r\n      info = (<div className=\"info\">\r\n        To edit this page click Admin-Button or visit<br /><br />\r\n        <i>http://{this.state.info.ip}:3000/admin</i>\r\n      </div>);\r\n    }\r\n    return (\r\n      <section className=\"Welcome\">\r\n        <img src={logo} className=\"logo\" alt=\"logo\" />\r\n        <div className=\"title\">Welcome to Reactron</div>\r\n        {info}\r\n        <RoundButton to=\"/admin\">\r\n          <FontAwesome.FontAwesomeIcon icon={SvgIcons.faCog} />\r\n          Admin\r\n        </RoundButton>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import * as SvgCore from '@fortawesome/fontawesome-svg-core';\r\nimport * as BrandIcons from '@fortawesome/free-brands-svg-icons';\r\nimport * as RegularIcons from '@fortawesome/free-regular-svg-icons';\r\nimport * as SolidIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport * as ReactDom from 'react-dom';\r\nimport { IModuleRepositoryItem } from 'src/interfaces/IModuleRepositoryItem';\r\nimport { IComponentDefinition } from '../interfaces/IComponentDefinition';\r\nimport { apiClient } from './ApiClient';\r\nimport { inernalModuleHelper } from './inernalModuleHelper';\r\nimport { components as internalComponents } from \"./internalModule\";\r\n\r\n// tslint:disable:no-string-literal\r\n// tslint:disable:no-var-requires\r\n\r\nconst moment = require('moment');\r\nconst momentTimezone = require('moment-timezone');\r\nconst SystemJS = (window as any).System as SystemJSLoader.System;\r\n\r\nconst externalModules = {};\r\nexternalModules['react'] = React;\r\nexternalModules['react-dom'] = ReactDom;\r\nexternalModules['moment'] = moment;\r\nexternalModules['moment-timezone'] = momentTimezone;\r\nexternalModules['@fortawesome/fontawesome-svg-core'] = SvgCore;\r\nexternalModules['@fortawesome/free-solid-svg-icons'] = SolidIcons;\r\nexternalModules['@fortawesome/free-regular-svg-icons'] = RegularIcons;\r\nexternalModules['@fortawesome/free-brands-svg-icons'] = BrandIcons;\r\nexternalModules['@fortawesome/react-fontawesome'] = FontAwesome;\r\n\r\nif (inernalModuleHelper.electron) {\r\n    externalModules['electron'] = inernalModuleHelper.electron;\r\n}\r\n\r\nObject.keys(externalModules).forEach(key => {\r\n    const moduleExport = externalModules[key];\r\n    SystemJS.register(key, [], exports => ({ execute: () => exports(moduleExport) }));\r\n});\r\n\r\nexport class ComponentLoader {\r\n    private allComponentsLoaded = false;\r\n    private moduleComponents: { [moduleName: string]: IComponentDefinition[] } = {\r\n        'reactron': internalComponents\r\n    };\r\n\r\n    public async getModuleComponents(moduleName: string): Promise<IComponentDefinition[] | undefined> {\r\n        if (!this.moduleComponents[moduleName]) {\r\n            const modules = await apiClient.getModules();\r\n            const m = modules.find(x => x.name === moduleName);\r\n\r\n            if (!m) {\r\n                console.log('Module not found loaded: ' + moduleName);\r\n                return;\r\n            }\r\n\r\n            await this.registerModuleComponents(m);\r\n        }\r\n\r\n        return this.moduleComponents[moduleName];\r\n    }\r\n\r\n    private async registerModuleComponents(m: IModuleRepositoryItem): Promise<void> {\r\n        if (!m.browserFile) {\r\n            console.log('Module has no browserFile: ' + m.name);\r\n            return;\r\n        }\r\n\r\n        if (this.moduleComponents[m.name]) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            console.log(m.browserFile);\r\n\r\n            const browserFileContent = await SystemJS.import('\\\\' + m.browserFile);\r\n            // tslint:disable-next-line:no-string-literal\r\n            const components = browserFileContent['components'];\r\n\r\n            if (components && typeof components === 'object' && Array.isArray(components)) {\r\n                this.moduleComponents[m.name] = components;\r\n            }\r\n            console.log('Components loaded for module: ' + m.name);\r\n        } catch (error) {\r\n            console.log('Error loading components for module: ' + m.name, error);\r\n        }\r\n    }\r\n\r\n    public async getAllComponents(): Promise<{ [moduleName: string]: IComponentDefinition[] }> {\r\n        if (this.allComponentsLoaded) {\r\n            return this.moduleComponents;\r\n        }\r\n        const modules = await apiClient.getModules();\r\n        for (const m of modules) {\r\n            await this.registerModuleComponents(m);\r\n        }\r\n        this.allComponentsLoaded = true;\r\n        return this.moduleComponents;\r\n    }\r\n}\r\n\r\nexport const componentLoader = new ComponentLoader();","type Callback<TData> = (data?: TData) => any;\r\n\r\nexport class SimpleEvent<TData = undefined> {\r\n    private subscriptions: Array<Callback<TData>> = [];\r\n\r\n    public subscribe(callback: Callback<TData>) {\r\n        this.subscriptions.push(callback);\r\n    }\r\n\r\n    public unsubscribe(callback: Callback<TData>) {\r\n        const index = this.subscriptions.indexOf(callback);\r\n        if (index >= 0) {\r\n            this.subscriptions.splice(index);\r\n        }\r\n    }\r\n\r\n    public async publish(data?: TData): Promise<void> {\r\n        for (const sub of this.subscriptions) {\r\n            await Promise.resolve(sub(data));\r\n        }\r\n    }\r\n}","import * as React from \"react\";\r\nimport { apiClient } from \"src/browser/ApiClient\";\r\nimport { IWebComponentOptions } from \"src/interfaces/IWebComponentOptions\";\r\nimport { SimpleEvent } from \"./SimpleEvent\";\r\n\r\nexport class OptionsCardContextData {\r\n    public onSave = new SimpleEvent();\r\n    // public onValidate = new SimpleEvent();\r\n    private removedWebComponents: IWebComponentOptions[] = [];\r\n    private changedWebComponents: IWebComponentOptions[] = [];\r\n    private createdWebComponents: IWebComponentOptions[] = [];\r\n\r\n    constructor() {\r\n        this.saveWebComponents = this.saveWebComponents.bind(this);\r\n        this.onSave.subscribe(this.saveWebComponents);\r\n    }\r\n\r\n    private async saveWebComponents(): Promise<void> {\r\n        console.log('removedWebComponents', this.removedWebComponents);\r\n        console.log('createdWebComponents', this.createdWebComponents);\r\n        console.log('changedWebComponents', this.changedWebComponents);\r\n\r\n        // delete webComponents\r\n        for (const item of this.removedWebComponents) {\r\n            await apiClient.deleteWebComponentOptions(item);\r\n        }\r\n\r\n        // add webComponents\r\n        for (const item of this.createdWebComponents) {\r\n            await apiClient.setWebComponentOptions(undefined, item);\r\n        }\r\n\r\n        // change webComponents\r\n        for (const item of this.changedWebComponents) {\r\n            await apiClient.setWebComponentOptions(undefined, item);\r\n        }\r\n\r\n        // reset context\r\n        this.removedWebComponents = [];\r\n        this.changedWebComponents = [];\r\n        this.createdWebComponents = [];\r\n    }\r\n\r\n    public webComponentRemoved(item: IWebComponentOptions) {\r\n        console.log('webComponentRemoved', item);\r\n\r\n        // check if previously created\r\n        const createdItemIndex = this.createdWebComponents.findIndex(x => x.id === item.id);\r\n        if (createdItemIndex >= 0) {\r\n            // remove from createdWebComponents\r\n            this.createdWebComponents.splice(createdItemIndex, 1);\r\n        } else {\r\n            // add to removedWebComponents\r\n            this.removedWebComponents.push(item);\r\n        }\r\n    }\r\n\r\n    public webComponentChanged(item: IWebComponentOptions) {\r\n        console.log('webComponentChanged', item);\r\n\r\n        // check if previously created\r\n        const createdItemIndex = this.createdWebComponents.findIndex(x => x.id === item.id);\r\n        if (createdItemIndex >= 0) {\r\n            // remove old item from createdWebComponents\r\n            this.createdWebComponents.splice(createdItemIndex, 1);\r\n            // and add new item to createdWebComponents\r\n            this.changedWebComponents.push(item);\r\n        } else {\r\n            // remove previously changed items\r\n            this.changedWebComponents = this.changedWebComponents.filter(x => x.id !== item.id);\r\n            // add to changedWebComponents\r\n            this.changedWebComponents.push(item);\r\n        }\r\n    }\r\n\r\n    public webComponentCreated(item: IWebComponentOptions) {\r\n        console.log('webComponentCreated', item);\r\n\r\n        // add to createdWebComponents\r\n        this.createdWebComponents.push(item);\r\n    }\r\n}\r\n\r\nexport const OptionCardContext = React.createContext<OptionsCardContextData>(new OptionsCardContextData());","import * as RegularIcons from '@fortawesome/free-regular-svg-icons';\r\nimport * as SolidIcons from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport { apiClient } from 'src/browser/ApiClient';\r\nimport { componentLoader } from 'src/browser/ComponentLoader';\r\nimport { getDefaultObjectValue } from 'src/common/optionsHelper';\r\nimport { IComponentDefinition } from 'src/interfaces/IComponentDefinition';\r\nimport { IWebComponentOptions } from 'src/interfaces/IWebComponentOptions';\r\nimport * as uuidv4 from 'uuid/v4';\r\nimport { OptionCardContext, OptionsCardContextData } from '../../OptionCard/OptionCardContext';\r\nimport OptionList from '../../OptionList/OptionList';\r\nimport UiButton from '../../UiButton/UiButton';\r\n\r\nimport './WebComponentForm.css';\r\n\r\ninterface IComponentDefinitionItem {\r\n  key: string;\r\n  moduleName: string;\r\n  definition: IComponentDefinition;\r\n}\r\n\r\ninterface IWebComponentFormProps {\r\n  webComponentId?: string;\r\n  onChange: (webComponentId?: string) => any;\r\n}\r\n\r\ninterface IWebComponentFormState {\r\n  loadingWebComponents: boolean\r\n  loadingComponentDefinitions: boolean\r\n  webComponents: IWebComponentOptions[];\r\n  componentDefinitions: IComponentDefinitionItem[];\r\n  selectedComponentDefinition?: IComponentDefinitionItem;\r\n  selectedWebComponentOptions?: IWebComponentOptions;\r\n}\r\n\r\nexport default class WebComponentForm extends React.Component<IWebComponentFormProps, IWebComponentFormState> {\r\n  public static contextType = OptionCardContext;\r\n\r\n  constructor(props: IWebComponentFormProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loadingWebComponents: true,\r\n      loadingComponentDefinitions: true,\r\n      webComponents: [],\r\n      componentDefinitions: []\r\n    };\r\n\r\n    this.initCurrentComponent = this.initCurrentComponent.bind(this);\r\n    this.onOptionsChange = this.onOptionsChange.bind(this);\r\n    this.removeWebComponent = this.removeWebComponent.bind(this);\r\n    this.onSelectedComponentDefinitionChange = this.onSelectedComponentDefinitionChange.bind(this);\r\n  }\r\n\r\n  private get formEvents(): OptionsCardContextData {\r\n    return (this as any).context as OptionsCardContextData;\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this.loadComponentDefinitions();\r\n    this.loadWebComponents();\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    if (this.state.selectedWebComponentOptions) {\r\n      this.formEvents.webComponentRemoved(this.state.selectedWebComponentOptions);\r\n    }\r\n  }\r\n\r\n  private loadComponentDefinitions() {\r\n    return componentLoader.getAllComponents()\r\n      .then(result => {\r\n        const componentDefinitions: IComponentDefinitionItem[] = [];\r\n        Object.keys(result).forEach(moduleName => {\r\n          const components = result[moduleName];\r\n          components.forEach(definition => {\r\n            const key = moduleName + '.' + definition.name;\r\n            componentDefinitions.push({ moduleName, definition, key });\r\n          });\r\n        });\r\n        this.setState({ componentDefinitions, loadingComponentDefinitions: false },\r\n          this.initCurrentComponent);\r\n      })\r\n      .catch(err => console.log(err)); // TODO\r\n  }\r\n\r\n  private loadWebComponents() {\r\n    return apiClient.getWebComponentOptions()\r\n      .then(webComponents => {\r\n        this.setState({ webComponents, loadingWebComponents: false },\r\n          this.initCurrentComponent);\r\n      })\r\n      .catch(err => console.log(err)); // TODO\r\n  }\r\n\r\n  private initCurrentComponent() {\r\n    if (this.state.loadingWebComponents || this.state.loadingComponentDefinitions) {\r\n      return;\r\n    }\r\n\r\n    if (this.props.webComponentId) {\r\n      const selectedWebComponentOptions = this.state.webComponents.find(x => x.id === this.props.webComponentId);\r\n      if (selectedWebComponentOptions) {\r\n        const key = selectedWebComponentOptions.moduleName + '.' + selectedWebComponentOptions.componentName;\r\n        const selectedComponentDefinition = this.state.componentDefinitions.find(x => x.key === key);\r\n        if (selectedComponentDefinition) {\r\n          this.setState({ selectedComponentDefinition, selectedWebComponentOptions });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private onSelectedComponentDefinitionChange(e: React.ChangeEvent<HTMLSelectElement>) {\r\n    const newKey = e.currentTarget.value;\r\n\r\n    const selectedComponentDefinition = this.state.componentDefinitions.find(x => x.key === newKey);\r\n    const currentWebComponentOptions = this.state.selectedWebComponentOptions;\r\n    let newWebComponentOptions: IWebComponentOptions | undefined;\r\n\r\n    if (selectedComponentDefinition) {\r\n      const id = currentWebComponentOptions && currentWebComponentOptions.id ||\r\n        selectedComponentDefinition.definition.name + '_' + uuidv4();\r\n\r\n      newWebComponentOptions = {\r\n        id,\r\n        moduleName: selectedComponentDefinition.moduleName,\r\n        componentName: selectedComponentDefinition.definition.name,\r\n        options: getDefaultObjectValue(selectedComponentDefinition.definition.fields)\r\n      };\r\n    }\r\n\r\n    // trigger id change\r\n    const newId = newWebComponentOptions && newWebComponentOptions.id;\r\n    if (this.props.webComponentId !== newId) {\r\n      this.props.onChange(newId);\r\n\r\n      if (newWebComponentOptions) {\r\n        // notify component created\r\n        this.formEvents.webComponentCreated(newWebComponentOptions);\r\n      } else if (currentWebComponentOptions) {\r\n        // notify component remove\r\n        this.formEvents.webComponentRemoved(currentWebComponentOptions);\r\n      }\r\n    }\r\n\r\n    this.setState({ selectedWebComponentOptions: newWebComponentOptions, selectedComponentDefinition });\r\n  }\r\n\r\n  private removeWebComponent() {\r\n    if (this.state.selectedWebComponentOptions) {\r\n      // notify component remove\r\n      this.formEvents.webComponentRemoved(this.state.selectedWebComponentOptions);\r\n      this.props.onChange(undefined);\r\n      this.setState({ selectedWebComponentOptions: undefined, selectedComponentDefinition: undefined });\r\n    }\r\n  }\r\n\r\n  private onOptionsChange(newOptions: any) {\r\n    if (!this.state.selectedWebComponentOptions) {\r\n      return;\r\n    }\r\n    const newWebComponentOptions = { ...this.state.selectedWebComponentOptions };\r\n    newWebComponentOptions.options = newOptions;\r\n    this.setState({ selectedWebComponentOptions: newWebComponentOptions });\r\n\r\n    // notify component changed\r\n    this.formEvents.webComponentChanged(newWebComponentOptions);\r\n  }\r\n\r\n  public renderComponentSelection() {\r\n    if (this.state.loadingWebComponents || this.state.loadingComponentDefinitions) {\r\n      return null;\r\n    }\r\n\r\n    const selectedComponentKey = this.state.selectedComponentDefinition && this.state.selectedComponentDefinition.key || '';\r\n\r\n    if (this.state.selectedComponentDefinition) {\r\n      return (\r\n        <div className=\"componentTitle\">\r\n          <UiButton>\r\n            <FontAwesomeIcon icon={SolidIcons.faCube} />\r\n          </UiButton>\r\n          <label>\r\n            {this.state.selectedComponentDefinition.definition.displayName} ({this.state.selectedComponentDefinition.moduleName})\r\n          </label>\r\n          <UiButton onClick={this.removeWebComponent}>\r\n            <FontAwesomeIcon icon={RegularIcons.faTrashAlt} />\r\n          </UiButton>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <select className=\"componentSelect\" value={selectedComponentKey} onChange={this.onSelectedComponentDefinitionChange}>\r\n        <option key=\"_\" value=\"\">Select Component...</option>\r\n        {this.state.componentDefinitions.map(item =>\r\n          <option key={item.key} value={item.key}>{item.definition.displayName} ({item.moduleName})</option>\r\n        )}\r\n      </select>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className=\"WebComponentForm\">\r\n        {this.renderComponentSelection()}\r\n        {this.state.selectedWebComponentOptions &&\r\n          this.state.selectedComponentDefinition && (\r\n            <OptionList value={this.state.selectedWebComponentOptions.options}\r\n              fields={this.state.selectedComponentDefinition.definition.fields}\r\n              valueChange={this.onOptionsChange} />\r\n          )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as BrandIcons from '@fortawesome/free-brands-svg-icons';\r\nimport * as RegularIcons from '@fortawesome/free-regular-svg-icons';\r\nimport * as SolidIcons from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport { IFieldDefinition } from '../../../../interfaces/IObjectDefinition';\r\nimport OptionList from '../OptionList/OptionList';\r\nimport UiButton from '../UiButton/UiButton';\r\nimport ArrayForm from './ArrayForm/ArrayForm';\r\nimport StyleForm from './StyleForm/StyleForm';\r\nimport WebComponentForm from './WebComponentForm/WebComponentForm';\r\n\r\nimport './OptionItem.css';\r\n\r\nlet counter = 0;\r\n\r\ninterface IOptionItemProps {\r\n  definition: IFieldDefinition;\r\n  value: any;\r\n  valueChange: (definition: IFieldDefinition, newValue: any) => void;\r\n}\r\n\r\ninterface IOptionItemState {\r\n  uniqueId: string;\r\n  hasDetails: boolean;\r\n  detailsVisible?: boolean;\r\n}\r\n\r\nexport default class OptionItem extends React.Component<IOptionItemProps, IOptionItemState> {\r\n  constructor(props: IOptionItemProps) {\r\n    super(props);\r\n\r\n    let hasDetails = !!props.definition.isArray || (props.definition.textRows !== undefined && props.definition.textRows > 1);\r\n\r\n    switch (props.definition.valueType) {\r\n      case 'object':\r\n      case 'style':\r\n      case 'webComponent':\r\n        hasDetails = true;\r\n        break;\r\n    }\r\n\r\n    this.state = {\r\n      uniqueId: 'ID' + (counter++),\r\n      hasDetails,\r\n    };\r\n\r\n    this.triggerValueChange = this.triggerValueChange.bind(this);\r\n    this.onInputChange = this.onInputChange.bind(this);\r\n    this.onTextareaChange = this.onTextareaChange.bind(this);\r\n    this.onCheckboxChange = this.onCheckboxChange.bind(this);\r\n    this.onSelectValueChange = this.onSelectValueChange.bind(this);\r\n    this.toggleItemDetails = this.toggleItemDetails.bind(this);\r\n  }\r\n\r\n  private triggerValueChange(newValue: any) {\r\n    this.props.valueChange(this.props.definition, newValue);\r\n  }\r\n\r\n  private renderArray() {\r\n    return (\r\n      <ArrayForm definition={this.props.definition} value={this.props.value} valueChange={this.triggerValueChange} />\r\n    );\r\n  }\r\n\r\n  private renderObject() {\r\n    return (\r\n      <OptionList fields={this.props.definition.fields} value={this.props.value} valueChange={this.triggerValueChange} />\r\n    );\r\n  }\r\n\r\n  private onTextareaChange(e: React.ChangeEvent<HTMLTextAreaElement>) {\r\n    this.triggerValueChange(e.currentTarget.value);\r\n  }\r\n\r\n  private onInputChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n    this.triggerValueChange(e.currentTarget.value);\r\n  }\r\n\r\n  private onSelectValueChange(e: React.ChangeEvent<HTMLSelectElement>) {\r\n    this.triggerValueChange(e.currentTarget.value);\r\n  }\r\n\r\n  private onCheckboxChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n    this.triggerValueChange(e.currentTarget.checked);\r\n  }\r\n\r\n  private renderDropDown() {\r\n    const values = this.props.definition.values || [];\r\n    const options = values.map((item, index) =>\r\n      <option key={index} value={item.value}>{item.text}</option>\r\n    );\r\n\r\n    return (\r\n      <select id={this.state.uniqueId} value={this.props.value} onChange={this.onSelectValueChange}>\r\n        {options}\r\n      </select>\r\n    );\r\n  }\r\n\r\n  private renderTextInput() {\r\n    if (this.props.definition.textRows !== undefined && this.props.definition.textRows > 1) {\r\n      return (\r\n        <textarea id={this.state.uniqueId} value={this.props.value} onChange={this.onTextareaChange} rows={this.props.definition.textRows} />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <input type=\"text\" id={this.state.uniqueId} value={this.props.value} onChange={this.onInputChange} />\r\n    );\r\n  }\r\n\r\n  private renderNumberInput() {\r\n    let inputType = 'number';\r\n\r\n    if (this.props.definition.minValue !== undefined &&\r\n      this.props.definition.maxValue !== undefined) {\r\n      inputType = 'range';\r\n    }\r\n\r\n    return (\r\n      <input type={inputType} id={this.state.uniqueId} value={this.props.value}\r\n        onChange={this.onInputChange} step={this.props.definition.stepSize}\r\n        min={this.props.definition.minValue} max={this.props.definition.maxValue} />\r\n    );\r\n  }\r\n\r\n  private renderBooleanInput() {\r\n    return (\r\n      <input type=\"checkbox\" id={this.state.uniqueId} value={this.props.value} onChange={this.onCheckboxChange} />\r\n    );\r\n  }\r\n\r\n  private renderStyleInput() {\r\n    return (\r\n      <StyleForm value={this.props.value} onChange={this.triggerValueChange} />\r\n    );\r\n  }\r\n\r\n  private renderWebComponentInput() {\r\n    return (\r\n      <WebComponentForm webComponentId={this.props.value} onChange={this.triggerValueChange} />\r\n    );\r\n  }\r\n\r\n  private toggleItemDetails() {\r\n    this.setState(state => ({ detailsVisible: !state.detailsVisible }));\r\n  }\r\n\r\n  private renderItemHeader() {\r\n    let subHeaderText = null;\r\n    let icon = null;\r\n\r\n    if (this.props.definition.isArray) {\r\n      const array = this.props.value as any[] || [];\r\n      subHeaderText = '(' + array.length + ' items)';\r\n      icon = SolidIcons.faList;\r\n    } else if (this.props.definition.valueType === 'string') {\r\n      subHeaderText = this.props.value;\r\n    } else if (this.props.definition.valueType === 'style') {\r\n      subHeaderText = JSON.stringify(this.props.value);\r\n      if(subHeaderText === '{}'){\r\n        subHeaderText = '';\r\n      }\r\n      icon = BrandIcons.faCss3;\r\n    } else if (this.props.definition.valueType === 'webComponent') {\r\n      subHeaderText = this.props.value || 'Component';\r\n      icon = RegularIcons.faFile;\r\n    }\r\n\r\n    return (\r\n      <UiButton className=\"item-header\" onClick={this.toggleItemDetails}>\r\n        <label>\r\n          {this.props.children}\r\n          {icon && (<UiButton><FontAwesomeIcon icon={icon} /></UiButton>)}\r\n          <span className=\"header-text\">{this.props.definition.displayName}</span>\r\n        </label>\r\n        <span className=\"sub-header-text\">{subHeaderText}</span>\r\n        <UiButton>\r\n          <FontAwesomeIcon icon={this.state.detailsVisible ? SolidIcons.faCaretDown : SolidIcons.faCaretRight} />\r\n        </UiButton>\r\n      </UiButton>\r\n    );\r\n  }\r\n\r\n  private renderLabel() {\r\n    if (this.state.hasDetails) {\r\n      return this.renderItemHeader();\r\n    }\r\n    return (\r\n      <label htmlFor={this.state.uniqueId}>\r\n        {this.props.children}\r\n        <span className=\"header-text\">{this.props.definition.displayName}</span>\r\n      </label>\r\n    );\r\n  }\r\n\r\n  private renderInput() {\r\n    if (this.state.hasDetails) {\r\n      return (\r\n        <div className=\"item-details\" hidden={!this.state.detailsVisible} data-isarray={this.props.definition.isArray ? 'true' : 'false'}>\r\n          {this.renderInputControl()}\r\n        </div>\r\n      );\r\n    }\r\n    return this.renderInputControl();\r\n  }\r\n\r\n  private renderInputControl() {\r\n    if (this.props.definition.isArray) {\r\n      return this.renderArray();\r\n    }\r\n\r\n    if (this.props.definition.values && this.props.definition.values.length) {\r\n      return this.renderDropDown();\r\n    }\r\n\r\n    switch (this.props.definition.valueType) {\r\n      case 'number':\r\n        return this.renderNumberInput();\r\n      case 'boolean':\r\n        return this.renderBooleanInput();\r\n      case 'string':\r\n        return this.renderTextInput();\r\n      case 'object':\r\n        return this.renderObject();\r\n      case 'style':\r\n        return this.renderStyleInput();\r\n      case 'webComponent':\r\n        return this.renderWebComponentInput();\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className=\"OptionItem\"\r\n        data-hasdetails={this.state.hasDetails ? 'true' : 'false'}\r\n        data-detailsvisible={this.state.detailsVisible ? 'true' : 'false'}\r\n        data-valuetype={this.props.definition.valueType}>\r\n        {this.renderLabel()}\r\n        {this.renderInput()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { IFieldDefinition } from '../../../../interfaces/IObjectDefinition';\r\nimport OptionItem from '../OptionItem/OptionItem';\r\n\r\nimport './OptionList.css';\r\n\r\ninterface IOptionListProps {\r\n  fields?: IFieldDefinition[];\r\n  value: object;\r\n  valueChange: (newValue: object) => void;\r\n}\r\n\r\nexport default class OptionList extends React.Component<IOptionListProps> {\r\n  constructor(props: IOptionListProps) {\r\n    super(props);\r\n\r\n    this.valueChange = this.valueChange.bind(this);\r\n  }\r\n\r\n  private valueChange(field: IFieldDefinition, value: any) {\r\n    const newValue = { ...this.props.value };\r\n    newValue[field.name] = value;\r\n    this.props.valueChange(newValue);\r\n  }\r\n\r\n  public render() {\r\n    if (!this.props.fields || !this.props.fields.length) {\r\n      return null;\r\n      // return <span>No options / fields defined</span>;\r\n    }\r\n\r\n    return (\r\n      <div className=\"OptionList\">\r\n        {this.props.fields.map(field => {\r\n          const value = this.props.value && this.props.value[field.name];\r\n          return <OptionItem key={field.name} definition={field} value={value} valueChange={this.valueChange} />;\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as SolidIcons from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport { getDefaultFieldValue } from '../../../../common/optionsHelper';\r\nimport OptionList from '../OptionList/OptionList';\r\nimport UiButton from '../UiButton/UiButton';\r\nimport UiCard from '../UiCard/UiCard';\r\nimport UiCardButtonRow from '../UiCardButtonRow/UiCardButtonRow';\r\nimport UiCardContent from '../UiCardContent/UiCardContent';\r\nimport UiCardTitle from '../UiCardTitle/UiCardTitle';\r\nimport { IOptionCardProps } from './IOptionCardProps';\r\nimport { OptionCardContext, OptionsCardContextData } from './OptionCardContext';\r\n\r\nimport './OptionCard.css';\r\n\r\ninterface IOptionCardState {\r\n  newOptions: any;\r\n  formContext: OptionsCardContextData;\r\n}\r\n\r\nexport default class OptionCard extends React.Component<IOptionCardProps, IOptionCardState> {\r\n  constructor(props: IOptionCardProps) {\r\n    super(props);\r\n\r\n    const newOptions = this.setDefaultValues(props.options || {});\r\n\r\n    this.state = {\r\n      newOptions,\r\n      formContext: new OptionsCardContextData()\r\n    };\r\n\r\n    this.cancel = this.cancel.bind(this);\r\n    this.save = this.save.bind(this);\r\n    this.reset = this.reset.bind(this);\r\n    this.optionsChange = this.optionsChange.bind(this);\r\n  }\r\n\r\n  // init fields\r\n  private setDefaultValues(options: object) {\r\n    this.props.fields.forEach(field => {\r\n      let value = options[field.name];\r\n\r\n      if (value === undefined) {\r\n        value = getDefaultFieldValue(field);\r\n        if (value !== undefined) {\r\n          options[field.name] = value;\r\n        }\r\n      }\r\n    });\r\n    return options;\r\n  }\r\n\r\n  private reset() {\r\n    const newOptions = this.setDefaultValues(this.props.options || {});\r\n    this.setState({ newOptions });\r\n  }\r\n\r\n  private async save() {\r\n    await this.state.formContext.onSave.publish();\r\n    return this.props.onSave(this.state.newOptions);\r\n  }\r\n\r\n  private cancel() {\r\n    return this.props.onCancel && this.props.onCancel();\r\n  }\r\n\r\n  private optionsChange(newValue: any) {\r\n    this.setState({ newOptions: newValue });\r\n  }\r\n\r\n  public renderTitle() {\r\n    return (\r\n      <UiCardTitle>\r\n        <FontAwesomeIcon icon={this.props.icon} /> {this.props.title}\r\n      </UiCardTitle>\r\n    );\r\n  }\r\n\r\n  public renderContent() {\r\n    return (\r\n      <OptionCardContext.Provider value={this.state.formContext}>\r\n        <OptionList fields={this.props.fields}\r\n          value={this.state.newOptions}\r\n          valueChange={this.optionsChange}\r\n        />\r\n      </OptionCardContext.Provider>\r\n    );\r\n  }\r\n\r\n  public renderFooter() {\r\n    return (\r\n      <UiCardButtonRow divider=\"half\">\r\n        {this.props.onCancel && (\r\n          <UiButton onClick={this.cancel}>\r\n            <FontAwesomeIcon icon={SolidIcons.faTimes} /> Cancel\r\n          </UiButton>\r\n        )}\r\n        {this.props.showReset && (\r\n        <UiButton onClick={this.reset}>\r\n          <FontAwesomeIcon icon={SolidIcons.faUndo} /> Reset\r\n        </UiButton>\r\n        )}\r\n        <UiButton onClick={this.save}>\r\n          <FontAwesomeIcon icon={SolidIcons.faSave} /> Save\r\n        </UiButton>\r\n      </UiCardButtonRow>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    const className = 'OptionCard ' + this.props.className;\r\n\r\n    return (\r\n      <UiCard className={className}>\r\n        {this.renderTitle()}\r\n        {this.renderContent()}\r\n        <UiCardContent className=\"debug\" style={{ whiteSpace: 'pre' }}>\r\n          {JSON.stringify(this.state.newOptions, undefined, 2)}\r\n        </UiCardContent>\r\n        {this.renderFooter()}\r\n      </UiCard >\r\n    );\r\n  }\r\n}\r\n","import * as RegularIcons from '@fortawesome/free-regular-svg-icons';\r\nimport * as SolidIcons from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport UiButton from '../../UiButton/UiButton';\r\nimport UiCard from '../../UiCard/UiCard';\r\nimport UiCardButtonRow from '../../UiCardButtonRow/UiCardButtonRow';\r\nimport UiCardContent from '../../UiCardContent/UiCardContent';\r\nimport UiCardTitle from '../../UiCardTitle/UiCardTitle';\r\nimport { IPageCardProps } from './IPageCardProps';\r\n\r\nimport './PageCard.css';\r\n\r\nexport default class PageCard extends React.Component<IPageCardProps> {\r\n  constructor(props: IPageCardProps) {\r\n    super(props);\r\n\r\n    this.onEdit = this.onEdit.bind(this);\r\n    this.onDelete = this.onDelete.bind(this);\r\n  }\r\n\r\n  private onEdit() {\r\n    return this.props.onEdit(this.props.page);\r\n  }\r\n\r\n  private onDelete() {\r\n    return this.props.onDelete(this.props.page);\r\n  }\r\n\r\n  public renderTitle() {\r\n    return (\r\n      <UiCardTitle>\r\n        <FontAwesomeIcon icon={RegularIcons.faFile} /> {this.props.page.title} ({this.props.page.path})\r\n      </UiCardTitle>\r\n    );\r\n  }\r\n\r\n  public renderPath() {\r\n    return (\r\n      <UiCardContent className=\"path\">\r\n        {this.props.page.path}\r\n      </UiCardContent>\r\n    );\r\n  }\r\n\r\n  public renderFooter() {\r\n    return (\r\n      <UiCardButtonRow divider=\"half\">\r\n        <UiButton onClick={this.onEdit}>\r\n          <FontAwesomeIcon icon={RegularIcons.faEdit} /> Edit\r\n        </UiButton>\r\n        <UiButton onClick={this.onDelete}>\r\n          <FontAwesomeIcon icon={RegularIcons.faTrashAlt} /> Delete\r\n        </UiButton>\r\n      </UiCardButtonRow>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <UiCard className=\"PageCard\">\r\n        {this.renderTitle()}\r\n        {/* {this.renderPath()} */}\r\n        {this.renderFooter()}\r\n      </UiCard>\r\n    );\r\n  }\r\n}\r\n","import { IFieldDefinition } from 'src/interfaces/IObjectDefinition';\r\n\r\nexport const pageOptionsFields: IFieldDefinition[] = [{\r\n  description: 'Path',\r\n  defaultValue: '/',\r\n  displayName: 'Path',\r\n  name: 'path',\r\n  valueType: 'string'\r\n}, {\r\n  description: 'Title',\r\n  defaultValue: 'New Page',\r\n  displayName: 'Title',\r\n  name: 'title',\r\n  valueType: 'string'\r\n}, {\r\n  description: 'Content',\r\n  displayName: 'Content',\r\n  name: 'webComponentId',\r\n  valueType: 'webComponent'\r\n}, {\r\n  description: 'Style',\r\n  displayName: 'Style',\r\n  name: 'style',\r\n  valueType: 'style'\r\n}];","import * as RegularIcons from '@fortawesome/free-regular-svg-icons';\r\nimport * as SolidIcons from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport { IWebPageOptions } from '../../../../interfaces/IWebPageOptions';\r\nimport { apiClient } from '../../../ApiClient';\r\nimport OptionCard from '../OptionCard/OptionCard';\r\nimport UiButton from '../UiButton/UiButton';\r\nimport UiCard from '../UiCard/UiCard';\r\nimport UiFlowLayout from '../UiFlowLayout/UiFlowLayout';\r\nimport UiLoadingCard from '../UiLoadingCard/UiLoadingCard';\r\nimport UiOverlay from '../UiOverlay/UiOverlay';\r\nimport PageCard from './PageCard/PageCard';\r\nimport { pageOptionsFields } from './pageOptionsFields';\r\n\r\nimport './PageManagerPage.css';\r\n\r\nexport interface IModuleManagerPageState {\r\n  loading: boolean;\r\n  pages: IWebPageOptions[];\r\n  showPageDetailsDialog: boolean;\r\n  selectedPage?: IWebPageOptions;\r\n}\r\n\r\nexport default class PageManagerPage extends React.Component<any, IModuleManagerPageState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: true,\r\n      pages: [],\r\n      showPageDetailsDialog: false\r\n    };\r\n\r\n    this.loadPages = this.loadPages.bind(this);\r\n    this.savePage = this.savePage.bind(this);\r\n    this.hidePageDetailsDialog = this.hidePageDetailsDialog.bind(this);\r\n    this.showPageDetailsDialog = this.showPageDetailsDialog.bind(this);\r\n    this.confirmPageDeletion = this.confirmPageDeletion.bind(this);\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this.loadPages();\r\n  }\r\n\r\n  private loadPages(): Promise<void> {\r\n    this.setState({ loading: true });\r\n\r\n    return apiClient.getWebPages()\r\n      .then(pages => this.setState({ pages, loading: false }))\r\n      .catch(err => this.setState({ loading: false })); // TODO\r\n  }\r\n\r\n  private savePage(page: IWebPageOptions): Promise<void> {\r\n    return apiClient.setWebPage(undefined, page)\r\n      .then(this.hidePageDetailsDialog)\r\n      .then(apiClient.getWebPages.clearCache)\r\n      .then(this.loadPages)\r\n      .catch(err => console.log(err)); // TODO\r\n  }\r\n\r\n  private deletePage(page: IWebPageOptions): Promise<void> {\r\n    return apiClient.deleteWebPage(page)\r\n      .then(this.hidePageDetailsDialog)\r\n      .then(apiClient.getWebPages.clearCache)\r\n      .then(this.loadPages)\r\n      .catch(err => console.log(err)); // TODO\r\n  }\r\n\r\n  private showPageDetailsDialog(page?: IWebPageOptions) {\r\n    this.setState({ showPageDetailsDialog: true, selectedPage: page });\r\n  }\r\n\r\n  private hidePageDetailsDialog() {\r\n    this.setState({ showPageDetailsDialog: false, selectedPage: undefined });\r\n  }\r\n\r\n  private confirmPageDeletion(page: IWebPageOptions) {\r\n    if (window.confirm(\"Delete?\")) {\r\n      this.deletePage(page);\r\n    }\r\n  }\r\n\r\n  private renderPageCards() {\r\n    if (this.state.loading) {\r\n      return <UiFlowLayout><UiLoadingCard /></UiFlowLayout>;\r\n    }\r\n\r\n    return (\r\n      <UiFlowLayout>\r\n        {this.state.pages.map((item, index) =>\r\n          <PageCard key={index} page={item} onEdit={this.showPageDetailsDialog}\r\n            onDelete={this.confirmPageDeletion} />\r\n        )}\r\n      </UiFlowLayout>\r\n    );\r\n  }\r\n\r\n  private renderPageAddCard() {\r\n    return (\r\n      <UiFlowLayout>\r\n        <UiCard className=\"AddPageCard\">\r\n          <UiButton className=\"addButton\" onClick={this.showPageDetailsDialog}>\r\n            <FontAwesomeIcon icon={SolidIcons.faPlus} /> Add Page\r\n          </UiButton>\r\n        </UiCard>\r\n      </UiFlowLayout>\r\n    );\r\n  }\r\n\r\n  private renderPageDetailsDialog() {\r\n    if (!this.state.showPageDetailsDialog) {\r\n      return null;\r\n    }\r\n\r\n    const page = this.state.selectedPage;\r\n    const title = page ? 'Edit Page' : 'Add Page';\r\n\r\n    return (\r\n      <UiOverlay>\r\n        <OptionCard icon={RegularIcons.faFile}\r\n          title={title} fields={pageOptionsFields}\r\n          onSave={this.savePage} onCancel={this.hidePageDetailsDialog} options={page || {}}\r\n        />\r\n      </UiOverlay>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <section className=\"PageManagerPage\">\r\n        {this.renderPageAddCard()}\r\n        {this.renderPageCards()}\r\n        {this.renderPageDetailsDialog()}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import * as RegularIcons from '@fortawesome/free-regular-svg-icons';\r\nimport * as SolidIcons from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport UiButton from '../../UiButton/UiButton';\r\nimport UiCard from '../../UiCard/UiCard';\r\nimport UiCardButtonRow from '../../UiCardButtonRow/UiCardButtonRow';\r\nimport UiCardContent from '../../UiCardContent/UiCardContent';\r\nimport UiCardTitle from '../../UiCardTitle/UiCardTitle';\r\nimport { IServiceCardProps } from './IServiceCardProps';\r\n\r\nimport './ServiceCard.css';\r\n\r\nexport default class ServiceCard extends React.Component<IServiceCardProps> {\r\n  constructor(props: IServiceCardProps) {\r\n    super(props);\r\n\r\n    this.showOptions = this.showOptions.bind(this);\r\n    this.showLog = this.showLog.bind(this);\r\n  }\r\n\r\n  private showOptions() {\r\n    return this.props.onShowOptions(this.props.service);\r\n  }\r\n\r\n  private showLog() {\r\n    return this.props.onShowLog(this.props.service);\r\n  }\r\n\r\n  public renderTitle() {\r\n    return (\r\n      <UiCardTitle>\r\n        <FontAwesomeIcon icon={SolidIcons.faCogs} /> {this.props.service.name}\r\n      </UiCardTitle>\r\n    );\r\n  }\r\n\r\n  public renderDescription() {\r\n    return (\r\n      <UiCardContent className=\"description\">\r\n        {this.props.service.description || 'no description'}\r\n      </UiCardContent>\r\n    );\r\n  }\r\n\r\n  public renderFooter() {\r\n    return (\r\n      <UiCardButtonRow divider=\"half\">\r\n        <UiButton onClick={this.showLog}>\r\n          <FontAwesomeIcon icon={RegularIcons.faFile} /> Log\r\n        </UiButton>\r\n        <UiButton onClick={this.showOptions}>\r\n          <FontAwesomeIcon icon={SolidIcons.faCog} /> Options\r\n        </UiButton>\r\n      </UiCardButtonRow>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <UiCard className=\"ServiceCard\">\r\n        {this.renderTitle()}\r\n        {this.renderDescription()}\r\n        {this.renderFooter()}\r\n      </UiCard>\r\n    );\r\n  }\r\n}\r\n","import * as SolidIcons from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport { IServiceRepositoryItem } from 'src/interfaces/IServiceRepositoryItem';\r\nimport UiButton from '../../UiButton/UiButton';\r\nimport UiFlowLayout from '../../UiFlowLayout/UiFlowLayout';\r\nimport ServiceCard from '../ServiceCard/ServiceCard';\r\n\r\nimport './ServiceGroup.css';\r\n\r\nexport interface IModuleManagerPageProps {\r\n  services: IServiceRepositoryItem[];\r\n  moduleName: string;\r\n  onShowServiceLog: (service: IServiceRepositoryItem) => any;\r\n  onShowServiceOptions: (service: IServiceRepositoryItem) => any;\r\n}\r\n\r\nexport interface IModuleManagerPageState {\r\n  groupOpen: boolean;\r\n}\r\n\r\nexport default class ServiceGroup extends React.Component<IModuleManagerPageProps, IModuleManagerPageState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      groupOpen: false\r\n    };\r\n\r\n    this.toggleGroup = this.toggleGroup.bind(this);\r\n  }\r\n\r\n  private toggleGroup() {\r\n    this.setState(state => ({ groupOpen: !state.groupOpen }));\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <section className=\"ServiceGroup\">\r\n        <UiButton className=\"group-header\" onClick={this.toggleGroup}>\r\n          <FontAwesomeIcon icon={SolidIcons.faCube} /> {this.props.moduleName} ({this.props.services.length})\r\n          <FontAwesomeIcon icon={this.state.groupOpen ? SolidIcons.faArrowDown : SolidIcons.faArrowRight} />\r\n        </UiButton>\r\n        {this.state.groupOpen && (\r\n          <UiFlowLayout>\r\n            {this.props.services.map(item =>\r\n              <ServiceCard key={item.name} service={item} onShowLog={this.props.onShowServiceLog} onShowOptions={this.props.onShowServiceOptions} />\r\n            )}\r\n          </UiFlowLayout>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}","import * as RegularIcons from '@fortawesome/free-regular-svg-icons';\r\nimport * as SolidIcons from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport { IServiceRepositoryItem } from '../../../../interfaces/IServiceRepositoryItem';\r\nimport { apiClient } from '../../../ApiClient';\r\nimport Loading from '../../Loading/Loading';\r\nimport OptionCard from '../OptionCard/OptionCard';\r\nimport UiButton from '../UiButton/UiButton';\r\nimport UiCard from '../UiCard/UiCard';\r\nimport UiCardButtonRow from '../UiCardButtonRow/UiCardButtonRow';\r\nimport UiCardContent from '../UiCardContent/UiCardContent';\r\nimport UiCardTitle from '../UiCardTitle/UiCardTitle';\r\nimport UiLoadingCard from '../UiLoadingCard/UiLoadingCard';\r\nimport UiOverlay from '../UiOverlay/UiOverlay';\r\nimport ServiceGroup from './ServiceGroup/ServiceGroup';\r\n\r\nimport './ServiceManagerPage.css';\r\n\r\nexport interface IModuleManagerPageState {\r\n  loadingServices: boolean;\r\n  loadingServiceOptions: boolean;\r\n  services: IServiceRepositoryItem[];\r\n  showOptions: boolean,\r\n  showLog: boolean,\r\n  selectedService: IServiceRepositoryItem | undefined;\r\n  selectedServiceOptions: any;\r\n}\r\n\r\nexport default class ServiceManagerPage extends React.Component<any, IModuleManagerPageState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loadingServices: true,\r\n      loadingServiceOptions: false,\r\n      services: [],\r\n      showOptions: false,\r\n      showLog: false,\r\n      selectedService: undefined,\r\n      selectedServiceOptions: undefined\r\n    };\r\n\r\n    this.showLog = this.showLog.bind(this);\r\n    this.closeLog = this.closeLog.bind(this);\r\n    this.showOptions = this.showOptions.bind(this);\r\n    this.closeOptions = this.closeOptions.bind(this);\r\n    this.loadOptions = this.loadOptions.bind(this);\r\n    this.saveOptions = this.saveOptions.bind(this);\r\n    this.optionsChange = this.optionsChange.bind(this);\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this.loadServices();\r\n  }\r\n\r\n  public loadServices() {\r\n    return apiClient.getAllServices()\r\n      .then(services => this.setState({ services, loadingServices: false }))\r\n      .catch(err => this.setState({ loadingServices: false })); // TODO\r\n  }\r\n\r\n  private showLog(service: IServiceRepositoryItem) {\r\n    this.setState({ showLog: true, selectedService: service });\r\n  }\r\n\r\n  private showOptions(service: IServiceRepositoryItem) {\r\n    this.setState({\r\n      showOptions: true,\r\n      selectedService: service,\r\n      selectedServiceOptions: undefined\r\n    }, this.loadOptions);\r\n  }\r\n\r\n  private closeOptions() {\r\n    this.setState({ showOptions: false, selectedService: undefined });\r\n  }\r\n\r\n  private closeLog() {\r\n    this.setState({ showLog: false, selectedService: undefined });\r\n  }\r\n\r\n  private loadOptions() {\r\n    if (!this.state.selectedService) {\r\n      return;\r\n    }\r\n\r\n    this.setState({ loadingServiceOptions: true });\r\n\r\n    apiClient.getServiceOptions({\r\n      moduleName: this.state.selectedService.moduleName,\r\n      serviceName: this.state.selectedService.name\r\n    })\r\n      .then(options => {\r\n        this.setState({ selectedServiceOptions: options, loadingServiceOptions: false })\r\n      });\r\n  }\r\n\r\n  private optionsChange(newOptions: any) {\r\n    this.setState({ selectedServiceOptions: newOptions })\r\n  }\r\n\r\n  private saveOptions() {\r\n    if (!this.state.selectedService) {\r\n      return;\r\n    }\r\n\r\n    apiClient.setServiceOptions({\r\n      moduleName: this.state.selectedService.moduleName,\r\n      serviceName: this.state.selectedService.name\r\n    },\r\n      this.state.selectedServiceOptions\r\n    );\r\n\r\n    this.closeOptions();\r\n  }\r\n\r\n  private renderServiceOptionsDialog() {\r\n    if (!this.state.showOptions || !this.state.selectedService) {\r\n      return null;\r\n    }\r\n    if (this.state.loadingServiceOptions) {\r\n      return <UiOverlay><UiLoadingCard /></UiOverlay>;\r\n    }\r\n\r\n    const title = 'Options for ' + this.state.selectedService.displayName;\r\n\r\n    return (\r\n      <UiOverlay>\r\n        <OptionCard icon={SolidIcons.faCogs} showReset={true}\r\n          title={title} fields={this.state.selectedService.fields || []}\r\n          options={this.state.selectedServiceOptions}\r\n          onSave={this.saveOptions} onCancel={this.closeOptions}\r\n        />\r\n      </UiOverlay>\r\n    );\r\n  }\r\n\r\n  private renderServiceLogDialog() {\r\n    if (!this.state.showLog || !this.state.selectedService) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <UiOverlay>\r\n        <UiCard className=\"ServiceLogCard\">\r\n          <UiCardTitle>\r\n          <FontAwesomeIcon icon={RegularIcons.faFile} /> Log for {this.state.selectedService.displayName}\r\n          </UiCardTitle>\r\n          <UiCardContent>\r\n            <ul>\r\n              {this.state.selectedService.log.map(item => (\r\n                <li>{item}</li>\r\n              ))}\r\n            </ul>\r\n          </UiCardContent>\r\n          <UiCardButtonRow divider=\"full\">\r\n            <UiButton onClick={this.closeLog}>\r\n              <FontAwesomeIcon icon={SolidIcons.faTimes} /> Close\r\n            </UiButton>\r\n          </UiCardButtonRow>\r\n        </UiCard>\r\n      </UiOverlay>\r\n    );\r\n  }\r\n\r\n  private renderServiceGroups() {\r\n    if (this.state.loadingServices) {\r\n      return <Loading center={true} />;\r\n    }\r\n\r\n    const groups = this.state.services.map(x => x.moduleName).filter(onlyUnique);\r\n\r\n    return groups.map(moduleName => {\r\n      const services = this.state.services.filter(x => x.moduleName === moduleName); // TODO: .sort((a, b) => a.displayName > b.displayName)\r\n      return (\r\n        <ServiceGroup key={moduleName} moduleName={moduleName} services={services}\r\n          onShowServiceLog={this.showLog} onShowServiceOptions={this.showOptions} />\r\n      );\r\n    });\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <section className=\"ServiceManagerPage\">\r\n        {this.renderServiceGroups()}\r\n        {this.renderServiceOptionsDialog()}\r\n        {this.renderServiceLogDialog()}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nfunction onlyUnique(value: any, index: number, self: any[]) {\r\n  return self.indexOf(value) === index;\r\n}","import { IFieldDefinition } from 'src/interfaces/IObjectDefinition';\r\n\r\nexport const systemSettingsFields: IFieldDefinition[] = [{\r\n  description: 'Language',\r\n  displayName: 'Language',\r\n  name: 'lang',\r\n  valueType: 'string',\r\n  values: [\r\n    { value: 'de-DE', text: 'German' },\r\n    { value: 'en-GB', text: 'English' },\r\n    { value: 'fr-FR', text: 'French' },\r\n  ]\r\n}, {\r\n  description: 'Location',\r\n  displayName: 'Location',\r\n  name: 'location',\r\n  valueType: 'string'\r\n}, {\r\n  description: 'Timezone',\r\n  displayName: 'Timezone',\r\n  name: 'timezone',\r\n  valueType: 'string',\r\n  values: [\r\n    { value: 'Europe/Berlin', text: 'Europe/Berlin' },\r\n    { value: 'Europe/London', text: 'Europe/London' },\r\n    { value: 'Asia/Tokyo', text: 'Asia/Tokyo' },\r\n    { value: 'America/New_York', text: 'America/New York' },\r\n  ]\r\n}, {\r\n  description: 'Path of page to show on startup',\r\n  displayName: 'Startup Path',\r\n  name: 'startupPath',\r\n  valueType: 'string'\r\n}, {\r\n  description: 'Sample Checkbox',\r\n  displayName: 'Checkbox',\r\n  name: 'cb1',\r\n  valueType: 'boolean'\r\n}, {\r\n  description: 'Sample Object',\r\n  displayName: 'Object',\r\n  fields: [{\r\n    description: 'Sample Text',\r\n    displayName: 'Text',\r\n    name: 'stringValue',\r\n    valueType: 'string'\r\n  }, {\r\n    description: 'Sample Number',\r\n    displayName: 'Number',\r\n    minValue: 0,\r\n    maxValue: 50,\r\n    stepSize: 5,\r\n    name: 'numericValue',\r\n    valueType: 'number'\r\n  }, {\r\n    description: 'Sample Checkbox',\r\n    displayName: 'Checkbox',\r\n    name: 'booleanValue',\r\n    valueType: 'boolean'\r\n  }, {\r\n    description: 'Sample DropDown',\r\n    displayName: 'DropDown',\r\n    name: 'value',\r\n    valueType: 'string',\r\n    values: [\r\n      { value: '111', text: '1st Item' },\r\n      { value: '222', text: '2nd Item' },\r\n      { value: '333', text: '3rd Item' },\r\n    ]\r\n  }],\r\n  name: 'obj1',\r\n  valueType: 'object'\r\n}, {\r\n  description: 'Sample Array',\r\n  displayName: 'Array',\r\n  isArray: true,\r\n  name: 'arr1',\r\n  valueType: 'string'\r\n}, {\r\n  description: 'Sample Array',\r\n  displayName: 'Array',\r\n  isArray: true,\r\n  fields: [{\r\n    description: 'Sample Text',\r\n    displayName: 'Text',\r\n    name: 'stringValue',\r\n    valueType: 'string'\r\n  }, {\r\n    description: 'Sample Number',\r\n    displayName: 'Number',\r\n    name: 'numericValue',\r\n    valueType: 'number'\r\n  }, {\r\n    description: 'Sample Component',\r\n    displayName: 'Component',\r\n    name: 'content',\r\n    valueType: 'webComponent'\r\n  }],\r\n  name: 'arr2',\r\n  valueType: 'object'\r\n}];","import * as SolidIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as React from 'react';\r\nimport { ISystemSettings } from '../../../../interfaces/ISystemSettings';\r\nimport { apiClient } from '../../../ApiClient';\r\nimport OptionCard from '../OptionCard/OptionCard';\r\nimport UiFlowLayout from '../UiFlowLayout/UiFlowLayout';\r\nimport UiLoadingCard from '../UiLoadingCard/UiLoadingCard';\r\nimport { systemSettingsFields } from './systemSettingsFields';\r\n\r\nimport './SettingsManagerPage.css';\r\n\r\nexport interface IModuleManagerPageState {\r\n  loading: boolean;\r\n  settings?: ISystemSettings;\r\n}\r\n\r\nexport default class SettingsManagerPage extends React.Component<any, IModuleManagerPageState>{\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    this.state = { loading: true };\r\n\r\n    this.loadSettings = this.loadSettings.bind(this);\r\n    this.saveSettings = this.saveSettings.bind(this);\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this.loadSettings();\r\n  }\r\n\r\n  public loadSettings(): Promise<void> {\r\n    return apiClient.getSettings()\r\n      .then(settings => this.setState({ settings, loading: false }))\r\n      .catch(); // TODO\r\n  }\r\n\r\n  public saveSettings(newSettings: ISystemSettings): Promise<void> {\r\n    return apiClient.setSettings(undefined, newSettings)\r\n      .then(apiClient.getSettings.clearCache)\r\n      .catch(); // TODO\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <section className=\"SettingsManagerPage\">\r\n        {this.state.loading && (\r\n          <UiFlowLayout>\r\n            <UiLoadingCard />\r\n          </UiFlowLayout>\r\n        )}\r\n        {this.state.settings && (\r\n          <UiFlowLayout>\r\n            <OptionCard options={this.state.settings} onSave={this.saveSettings}\r\n              fields={systemSettingsFields} icon={SolidIcons.faCogs}\r\n              title=\"Settings\" showReset={true}\r\n            />\r\n          </UiFlowLayout>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import * as SvgIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport { IServerInfo } from '../../../../interfaces/IServerInfo';\r\nimport { apiClient } from '../../../ApiClient';\r\nimport Loading from '../../Loading/Loading';\r\nimport UiButton from '../UiButton/UiButton';\r\nimport UiCard from '../UiCard/UiCard';\r\nimport UiCardButtonRow from '../UiCardButtonRow/UiCardButtonRow';\r\nimport UiCardContent from '../UiCardContent/UiCardContent';\r\nimport UiCardTitle from '../UiCardTitle/UiCardTitle';\r\nimport UiFlowLayout from '../UiFlowLayout/UiFlowLayout';\r\n\r\nimport './SystemPage.css';\r\n\r\ninterface ISystemPageState {\r\n  info?: IServerInfo;\r\n}\r\n\r\nexport default class SystemPage extends React.Component<any, ISystemPageState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {};\r\n\r\n    this.exitApplication = this.exitApplication.bind(this);\r\n    this.restartApplication = this.restartApplication.bind(this);\r\n    this.shutdownSystem = this.shutdownSystem.bind(this);\r\n    this.rebootSystem = this.rebootSystem.bind(this);\r\n    this.resetApplication = this.resetApplication.bind(this);\r\n  }\r\n\r\n  public componentDidMount() {\r\n    apiClient.getServerInfo().then(info => this.setState({ info }));\r\n  }\r\n\r\n  // TODO: confirm dialog\r\n\r\n  public exitApplication() {\r\n    return apiClient.exitApplication();\r\n  }\r\n\r\n  public restartApplication() {\r\n    return apiClient.restartApplication();\r\n  }\r\n\r\n  public shutdownSystem() {\r\n    return apiClient.shutdownSystem();\r\n  }\r\n\r\n  public rebootSystem() {\r\n    return apiClient.rebootSystem();\r\n  }\r\n\r\n  public resetApplication() {\r\n    return apiClient.resetApplication();\r\n  }\r\n\r\n  public renderInformationCard() {\r\n    let content;\r\n    if (!this.state.info) {\r\n      content = <Loading />;\r\n    } else {\r\n      const free = Math.round(this.state.info.memory.free / 1024 / 1024);\r\n      const total = Math.round(this.state.info.memory.total / 1024 / 1024);\r\n      content = (\r\n        <ul>\r\n          <li>\r\n            <span>Version</span>\r\n            <span>{this.state.info.version}</span>\r\n          </li>\r\n          <li>\r\n            <span>CPU</span>\r\n            <span>{this.state.info.cpu.count} x {this.state.info.cpu.speed} MHz</span>\r\n          </li>\r\n          <li>\r\n            <span>Memory</span>\r\n            <span>{free} MB / {total} MB</span>\r\n          </li>\r\n          <li>\r\n            <span>IP</span>\r\n            <span>{this.state.info.ip}</span>\r\n          </li>\r\n          <li>\r\n            <span>Hostname</span>\r\n            <span>{this.state.info.hostname}</span>\r\n          </li>\r\n        </ul>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <UiCard className=\"information\">\r\n        <UiCardTitle>Information</UiCardTitle>\r\n        <UiCardContent>{content}</UiCardContent>\r\n      </UiCard>\r\n    );\r\n  }\r\n\r\n  public renderApplicationCard() {\r\n    return (\r\n      <UiCard>\r\n        <UiCardTitle>Application</UiCardTitle>\r\n        <UiCardButtonRow divider=\"half\">\r\n          <UiButton onClick={this.exitApplication}>\r\n            <FontAwesome.FontAwesomeIcon icon={SvgIcons.faSignOutAlt} /> Exit\r\n          </UiButton>\r\n          <UiButton onClick={this.restartApplication}>\r\n            <FontAwesome.FontAwesomeIcon icon={SvgIcons.faRedo} /> Restart\r\n          </UiButton>\r\n        </UiCardButtonRow>\r\n      </UiCard>\r\n    );\r\n  }\r\n\r\n  public renderSystemCard() {\r\n    return (\r\n      <UiCard>\r\n        <UiCardTitle>System</UiCardTitle>\r\n        <UiCardButtonRow divider=\"half\">\r\n          <UiButton onClick={this.shutdownSystem}>\r\n            <FontAwesome.FontAwesomeIcon icon={SvgIcons.faPowerOff} /> Shutdown\r\n          </UiButton>\r\n          <UiButton onClick={this.rebootSystem}>\r\n            <FontAwesome.FontAwesomeIcon icon={SvgIcons.faRedo} /> Reboot\r\n          </UiButton>\r\n        </UiCardButtonRow>\r\n      </UiCard>\r\n    );\r\n  }\r\n\r\n  public renderDangerCard() {\r\n    return (\r\n      <UiCard className=\"danger\">\r\n        <UiCardTitle>Danger Zone</UiCardTitle>\r\n        <UiCardButtonRow>\r\n          <UiButton onClick={this.resetApplication}>\r\n            <FontAwesome.FontAwesomeIcon icon={SvgIcons.faExclamationTriangle} /> Reset Application\r\n          </UiButton>\r\n        </UiCardButtonRow>\r\n      </UiCard>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <section className=\"SystemPage\">\r\n        <UiFlowLayout>\r\n          {this.renderInformationCard()}\r\n          {this.renderApplicationCard()}\r\n          {this.renderSystemCard()}\r\n          {this.renderDangerCard()}\r\n        </UiFlowLayout>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import * as SvgIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport RoundButton from '../RoundButton/RoundButton';\r\nimport ModuleManagerPage from './ModuleManagerPage/ModuleManagerPage';\r\nimport Navigation from './Navigation/Navigation';\r\nimport PageManagerPage from './PageManagerPage/PageManagerPage';\r\nimport ServiceManagerPage from './ServiceManagerPage/ServiceManagerPage';\r\nimport SettingsManagerPage from './SettingsManagerPage/SettingsManagerPage';\r\nimport SystemPage from './SystemPage/SystemPage';\r\n\r\nimport './Admin.css';\r\n\r\nexport default class Admin extends React.Component {\r\n  public render() {\r\n    return (\r\n      <section className=\"Admin\">\r\n        <header>\r\n          <RoundButton to=\"/\">\r\n            <FontAwesome.FontAwesomeIcon icon={SvgIcons.faHome} /> Home\r\n          </RoundButton>\r\n          <div className=\"title\">Reactron Admin</div>\r\n        </header>\r\n        <Navigation />\r\n        <div className=\"content\">\r\n          <Switch>\r\n            <Route path=\"/admin/ModuleManager\" component={ModuleManagerPage} />\r\n            <Route path=\"/admin/ServiceManager\" component={ServiceManagerPage} />\r\n            <Route path=\"/admin/Pages\" component={PageManagerPage} />\r\n            <Route path=\"/admin/Settings\" component={SettingsManagerPage} />\r\n            <Route path=\"/admin/System\" component={SystemPage} />\r\n            <Redirect to=\"/admin/ModuleManager\" />\r\n          </Switch>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import * as SvgIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport RoundButton from '../RoundButton/RoundButton';\r\nimport { IPageNotFoundProps } from './IPageNotFoundProps';\r\n\r\nimport './PageNotFound.css'\r\n\r\nexport default class PageNotFound extends React.Component<IPageNotFoundProps> {\r\n  public render() {\r\n    return (\r\n      <div className=\"PageNotFound\">\r\n        <h1><FontAwesome.FontAwesomeIcon icon={SvgIcons.faQuestionCircle} /> 404</h1>\r\n        <h2>No page defined for path: {this.props.location.pathname}</h2>\r\n        <RoundButton to=\"/admin\">\r\n          <FontAwesome.FontAwesomeIcon icon={SvgIcons.faCog} /> Admin\r\n        </RoundButton>\r\n        <RoundButton to=\"/\">\r\n          <FontAwesome.FontAwesomeIcon icon={SvgIcons.faHome} /> Home\r\n        </RoundButton>\r\n      </div >\r\n    );\r\n  }\r\n}","import { SizeProp } from '@fortawesome/fontawesome-svg-core';\r\nimport * as React from \"react\";\r\nimport { IDynamicReactComponentProps } from \"../interfaces/IDynamicReactComponentClass\";\r\nimport { BrowserModuleHelper } from \"./BrowserModuleHelper\";\r\nimport Loading from \"./components/Loading/Loading\";\r\nimport { IWebComponentProps } from './components/WebComponent/IWebComponentProps';\r\nimport WebComponent from \"./components/WebComponent/WebComponent\";\r\n\r\nexport class DynamicReactComponentProps extends BrowserModuleHelper implements IDynamicReactComponentProps {\r\n    public renderLoading: (text?: string, iconSize?: SizeProp) => any;\r\n    public renderComponent: (props: IWebComponentProps) => any;\r\n\r\n    constructor(moduleName: string, public readonly componentName: string, public readonly options: any) {\r\n        super(moduleName);\r\n\r\n        this.renderComponent = (props: IWebComponentProps) => {\r\n            return <WebComponent {...props} />;\r\n        };\r\n\r\n        this.renderLoading = (text?: string, iconSize?: SizeProp) => {\r\n            return <Loading text={text} iconSize={iconSize} />;\r\n        };\r\n    }\r\n}","import * as SvgIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport RoundButton from '../RoundButton/RoundButton';\r\nimport { IComponentNotFoundProps } from './IComponentNotFoundProps';\r\n\r\nimport './ComponentNotFound.css';\r\n\r\nexport default class ComponentNotFound extends React.Component<IComponentNotFoundProps> {\r\n  public static defaultProps: Partial<IComponentNotFoundProps> = {\r\n    iconSize: \"4x\"\r\n  };\r\n\r\n  public render() {\r\n    const text = [];\r\n    if (this.props.id) {\r\n      text.push('Id: ' + this.props.id);\r\n    }\r\n    if (this.props.componentName) {\r\n      text.push('Component: ' + this.props.componentName);\r\n    }\r\n    if (this.props.moduleName) {\r\n      text.push('Module: ' + this.props.moduleName);\r\n    }\r\n\r\n    return (\r\n      <section className=\"ComponentNotFound\">\r\n        <FontAwesome.FontAwesomeIcon icon={SvgIcons.faExclamationTriangle} size={this.props.iconSize} />\r\n        <div className=\"text\">Component not found: {text.join(' | ')}</div>\r\n        <RoundButton to=\"/admin\">\r\n          <FontAwesome.FontAwesomeIcon icon={SvgIcons.faCog} /> Admin\r\n        </RoundButton>\r\n      </section>\r\n    );\r\n  }\r\n}","import * as React from 'react';\r\n\r\ninterface IErrorBoundaryState {\r\n  error: any;\r\n}\r\n\r\nexport default class ErrorBoundary extends React.Component<any, IErrorBoundaryState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = { error: null };\r\n  }\r\n\r\n  public componentDidCatch(error: any, info: any) {\r\n    console.log(error);\r\n    console.log(info);\r\n    this.setState({ error });\r\n  }\r\n\r\n  public render() {\r\n    if (this.state.error) {\r\n      return <h1>Something went wrong.</h1>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}","import * as React from 'react';\r\nimport { IComponentDefinition } from '../../../interfaces/IComponentDefinition';\r\nimport { IDynamicReactComponentProps } from '../../../interfaces/IDynamicReactComponentClass';\r\nimport { IWebComponentOptions } from '../../../interfaces/IWebComponentOptions';\r\nimport { apiClient } from '../../ApiClient';\r\nimport { componentLoader } from '../../ComponentLoader';\r\nimport { DynamicReactComponentProps } from '../../DynamicReactComponentProps';\r\nimport ComponentNotFound from '../ComponentNotFound/ComponentNotFound';\r\nimport ErrorBoundary from '../ErrorBoundary/ErrorBoundary';\r\nimport Loading from '../Loading/Loading';\r\nimport { IWebComponentProps } from './IWebComponentProps';\r\n\r\nimport './WebComponent.css';\r\n\r\ninterface IWebComponentState {\r\n  componentFound?: boolean;\r\n  componentProps?: IDynamicReactComponentProps;\r\n  componentDefinition?: IComponentDefinition;\r\n  componentOptions?: IWebComponentOptions;\r\n}\r\n\r\nexport default class WebComponent extends React.Component<IWebComponentProps, IWebComponentState> {\r\n  constructor(props: IWebComponentProps) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: IWebComponentProps, prevState: IWebComponentState) {\r\n    if (this.props.id !== prevProps.id ||\r\n      this.props.moduleName !== prevProps.moduleName ||\r\n      this.props.componentName !== prevProps.componentName ||\r\n      this.props.options !== prevProps.options) {\r\n      this.loadComponent();\r\n    }\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this.loadComponent();\r\n  }\r\n\r\n  private async loadComponent() {\r\n    try {\r\n      let webComponentOptions: IWebComponentOptions | undefined;\r\n\r\n      // nur mit der ID lesen\r\n      if (this.props.id) {\r\n        const allComponentOptions = await apiClient.getWebComponentOptions();\r\n        webComponentOptions = allComponentOptions.find(x => x.id === this.props.id);\r\n      } else if (this.props.moduleName && this.props.componentName) {\r\n        webComponentOptions = {\r\n          id: '',\r\n          moduleName: this.props.moduleName,\r\n          componentName: this.props.componentName,\r\n          options: this.props.options,\r\n        };\r\n      }\r\n\r\n      if (!webComponentOptions) {\r\n        this.setState({ componentFound: false });\r\n        return;\r\n      }\r\n\r\n      const moduleComponents = await componentLoader.getModuleComponents(webComponentOptions.moduleName);\r\n      if (!moduleComponents) {\r\n        this.setState({ componentFound: false });\r\n        return;\r\n      }\r\n      \r\n      const componentName = webComponentOptions.componentName;\r\n      const componentDefinition = moduleComponents.find(x => x.name === componentName);\r\n      if (!componentDefinition || !componentDefinition.component) {\r\n        this.setState({ componentFound: false });\r\n        return;\r\n      }\r\n\r\n      this.setState({\r\n        componentProps: new DynamicReactComponentProps(webComponentOptions.moduleName,\r\n          webComponentOptions.componentName, webComponentOptions.options),\r\n        componentDefinition,\r\n        componentOptions: webComponentOptions,\r\n        componentFound: true\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      this.setState({ componentFound: false });\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    let content = <Loading center={true} />;\r\n\r\n    if (this.state.componentFound === false) {\r\n      content = <ComponentNotFound {...this.props} />;\r\n    }\r\n\r\n    if (this.state.componentDefinition && this.state.componentDefinition.component && this.state.componentProps) {\r\n      const Component = this.state.componentDefinition.component;\r\n      content = <Component {...this.state.componentProps} />;\r\n    }\r\n\r\n    return (\r\n      <section className=\"WebComponent\">\r\n        <ErrorBoundary>{content}</ErrorBoundary>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport { inernalModuleHelper } from 'src/browser/inernalModuleHelper';\r\nimport { IWebPageOptions } from '../../../interfaces/IWebPageOptions';\r\nimport { apiClient } from '../../ApiClient';\r\nimport Admin from '../Admin/Admin';\r\nimport Loading from '../Loading/Loading';\r\nimport PageNotFound from '../PageNotFound/PageNotFound';\r\nimport WebComponent from '../WebComponent/WebComponent';\r\n\r\nimport './App.css';\r\n\r\nexport interface IAppState {\r\n  pages?: IWebPageOptions[];\r\n}\r\n\r\nexport default class App extends React.Component<{}, IAppState> {\r\n  private reloadTimer: number;\r\n  private reloadWait: number = 2000;\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {};\r\n    this.reload = this.reload.bind(this);\r\n    this.triggerReload = this.triggerReload.bind(this);\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this.loadPages();\r\n\r\n    // register page/component change event\r\n    if (inernalModuleHelper.topics) {\r\n      inernalModuleHelper.topics.subscribe('pages-updated', this.triggerReload);\r\n      inernalModuleHelper.topics.subscribe('components-updated', this.triggerReload);\r\n      inernalModuleHelper.topics.subscribe('system-settings-updated', this.triggerReload);\r\n    }\r\n  }\r\n\r\n  private async loadPages() {\r\n    const pages = await apiClient.getWebPages();\r\n    return this.setState({ pages });\r\n  }\r\n\r\n  private triggerReload() {\r\n    console.log('triggerReload', arguments);\r\n    window.clearTimeout(this.reloadTimer);\r\n    this.reloadTimer = window.setTimeout(this.reload, this.reloadWait);\r\n  }\r\n\r\n  private reload() {\r\n    apiClient.getWebPages.clearCache();\r\n    apiClient.getWebComponentOptions.clearCache();\r\n    this.loadPages();\r\n  }\r\n\r\n  public renderPage(id: string, style: any) {\r\n    return () => (\r\n      <section className=\"WebPage\" style={style}>\r\n        <WebComponent id={id} />\r\n      </section>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    let content = <Loading text=\"Loading Reactron...\" center={true} />;\r\n\r\n    if (this.state.pages) {\r\n      content = (\r\n        <Router>\r\n          <Switch>\r\n            <Route path=\"/admin\" component={Admin} />\r\n            {this.state.pages.map(item =>\r\n              (<Route key={item.path} path={item.path} exact={true} component={this.renderPage(item.webComponentId, item.style)} />)\r\n            )}\r\n            <Route component={PageNotFound} />\r\n          </Switch>\r\n        </Router>\r\n      );\r\n    }\r\n\r\n    return <section className=\"App\">{content}</section>;\r\n  }\r\n}\r\n","// main entry file for react\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport App from './browser/components/App/App';\r\nimport ErrorBoundary from './browser/components/ErrorBoundary/ErrorBoundary';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <ErrorBoundary><App /></ErrorBoundary>,\r\n  document.getElementById('root') as HTMLElement\r\n);","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";"],"sourceRoot":""}