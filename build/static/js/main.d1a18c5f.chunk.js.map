{"version":3,"sources":["browser/BrowserModuleContext.ts","common/apiRoutes.ts","browser/RpcClient.ts","browser/ReactronServicesFrontend.ts","browser/internalModule/CarouselLayout/CarouselLayoutDefinition.tsx","browser/internalModule/CarouselLayout/CarouselLayout.tsx","browser/internalModule/GridLayout/GridLayoutDefinition.tsx","browser/internalModule/GridLayout/GridLayout.tsx","browser/internalModule/IFrame/IFrameDefinition.tsx","browser/internalModule/IFrame/IFrame.tsx","browser/internalModule/ListLayout/ListLayoutDefinition.tsx","browser/internalModule/ListLayout/ListLayout.tsx","browser/internalModule/MarkDown/MarkDownDefinition.tsx","browser/internalModule/MarkDown/MarkDown.tsx","browser/internalModule/Notifications/NotificationsDefinition.tsx","browser/internalModule/Notifications/Notifications.tsx","browser/components/RoundButton/RoundButton.tsx","browser/internalModule/index.ts","browser/internalModule/Welcome/WelcomeDefinition.tsx","browser/internalModule/Welcome/Welcome.tsx","browser/ComponentLoader.ts","browser/components/Loading/Loading.tsx","browser/components/PageNotFound/PageNotFound.tsx","common/LogWriter.ts","browser/WebComponentContext.tsx","browser/components/ComponentNotFound/ComponentNotFound.tsx","browser/components/ErrorBoundary/ErrorBoundary.tsx","browser/components/WebComponent/WebComponent.tsx","browser/components/App/App.tsx","index.tsx","browser/internalModule/Welcome/logo.svg"],"names":["electron","settings","Store","routes","callServiceMethod","ApiRoute","path","method","Object","classCallCheck","this","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","data","route","url","options","response","text","wrap","_context","prev","next","toLocaleLowerCase","BrowserModuleContext","inernalModuleContext","moduleApiPath","body","JSON","stringify","headers","Content-Type","fetch","sent","status","toString","startsWith","abrupt","parse","undefined","console","log","Error","stop","_x","apply","arguments","createRemoteService","serviceName","moduleName","Proxy","get","target","prop","_callee2","_len","args","_key","_args2","_context2","length","Array","methodName","error","result","services","ReactronServicesFrontend","_this","moduleController","appController","logController","serviceController","webComponentController","webPageController","_modulesCache","_settingsCache","_servicesCache","_serviceOptionsCache","_pagesCache","_componentsCache","modules","getModules","addModule","repository","deleteModule","updateModule","checkUpdates","rebuildModule","application","getServerInfo","exitApplication","restartApplication","shutdownSystem","rebootSystem","resetApplication","getSettings","setSettings","getLogEntries","getAllServices","getServiceOptions","key","setServiceOptions","components","getWebComponentOptions","setWebComponentOptions","deleteWebComponentOptions","id","pages","getWebPages","setWebPage","deleteWebPage","createClass","value","topics","clearAllSubscriptions","once","publish","subscribe","unsubscribe","escapedModuleName","replace","_getService","explicitModuleName","serviceKey","serviceCache","Promise","resolve","_x2","moduleStoreKey","moduleStoreCache","name","_init","backendService","window","require","remote","BackendService","instance","topicNames","systemSettingsUpdated","event","carouselLayoutDefinition","component","context","_this2","react","className","style","props","lib","assign","autoPlay","infiniteLoop","showThumbs","showArrows","showStatus","items","map","renderComponent","React","description","displayName","type","fields","valueType","defaultValue","minValue","stepSize","maxValue","values","inputControl","interval","isArray","gridLayoutDefinition","GridLayout","possibleConstructorReturn","getPrototypeOf","call","renderTile","bind","assertThisInitialized","tile","index","objectSpread","tileStyle","gridColumn","col","colspan","gridRow","row","rowspan","content","gridStyle","tiles","width","textOverflow","overflow","iFrameDefinition","src","listLayoutDefinition","ListLayout","renderListItem","item","itemStyle","markDownDefinition","react_markdown_default","source","textRows","notificationsDefinition","Notifications","RoundButton","Link","to","role","children","Welcome","state","then","info","setState","ip","RoundButton_RoundButton_RoundButton","react_fontawesome_index_es","icon","SvgIcons","logo","alt","SystemJS","System","externalModules","ReactDom","ReactRouterDom","default","numeral","moment","momentTimezone","SvgCore","SolidIcons","RegularIcons","BrandIcons","FontAwesome","reactronInterfaces","keys","forEach","moduleExport","register","exports","execute","componentLoader","ComponentLoader","allComponentsLoaded","moduleComponents","reactron","internalComponents","_getModuleComponents","m","find","x","registerModuleComponents","_registerModuleComponents","browserFileContent","browserFile","import","t0","_getAllComponents","_callee3","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_context3","Symbol","iterator","done","return","finish","Loading","classname","center","size","iconSize","spin","defaultProps","PageNotFound","location","pathname","LogWriter","severity","message","WebComponentContext","_BrowserModuleContext","renderLoading","componentName","logSource","react_default","createElement","WebComponent_WebComponent_WebComponent","Loading_Loading_Loading","inherits","WebComponentContextType","createContext","parentId","ComponentNotFound","push","join","ErrorBoundary","color","WebComponent","prevProps","loadComponent","allComponentOptions","webComponentOptions","componentFound","getModuleComponents","componentDefinition","componentContext","componentOptions","ComponentNotFound_ComponentNotFound_ComponentNotFound","Component","contextType","Provider","ErrorBoundary_ErrorBoundary","App","reloadTimer","reloadWait","reload","triggerReload","onKeyDown","init","subscribeTopics","document","addEventListener","unsubscribeTopics","removeEventListener","e","evtobj","keyCode","ctrlKey","altKey","href","pagesUpdated","componentsUpdated","locale","lang","getAllComponents","clearTimeout","setTimeout","clearCache","BrowserRouter","Switch","Route","exact","renderPage","webComponentId","ReactDOM","App_App_App","getElementById","module","__webpack_require__","p"],"mappings":"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","file":"static/js/main.d1a18c5f.chunk.js","sourcesContent":["import { IModuleContext, IPubSub, ISystemSettings, ElectronStore, topicNames, IPubSubEvent } from \"@schirkan/reactron-interfaces\";\r\nimport { createRemoteService } from \"./RpcClient\";\r\nimport { services } from \"./ReactronServicesFrontend\";\r\n\r\nlet electron: Electron.AllElectron;\r\nlet settings: ISystemSettings;\r\nlet topics: IPubSub = { // TODO: mock\r\n  clearAllSubscriptions: () => { },\r\n  once: () => { },\r\n  publish: () => { },\r\n  subscribe: () => { },\r\n  unsubscribe: () => { }\r\n};\r\nlet Store: new (options?: any) => ElectronStore;\r\n\r\nexport class BrowserModuleContext implements IModuleContext {\r\n  public static inernalModuleContext: BrowserModuleContext;\r\n  private static moduleStoreCache: { [key: string]: ElectronStore } = {};\r\n  private static serviceCache: { [key: string]: any } = {};\r\n\r\n  constructor(public moduleName: string) {\r\n    const escapedModuleName = (moduleName || '').replace('/', '@');\r\n    this.moduleApiPath = '/api/modules/' + escapedModuleName;\r\n  }\r\n\r\n  public readonly services = services;\r\n  public readonly moduleApiPath: string;\r\n  public get electron(): Electron.AllElectron { return electron };\r\n  public get topics(): IPubSub { return topics; }\r\n  public get settings(): Readonly<ISystemSettings> { return settings; }\r\n\r\n  public get moduleStorage(): ElectronStore {\r\n    const moduleStoreKey = 'module.' + this.moduleName;\r\n    if (Store && !BrowserModuleContext.moduleStoreCache[moduleStoreKey]) {\r\n      BrowserModuleContext.moduleStoreCache[moduleStoreKey] = new Store({ name: moduleStoreKey });\r\n    }\r\n    return BrowserModuleContext.moduleStoreCache[moduleStoreKey];\r\n  }\r\n\r\n  public async getService<TService = any>(serviceName: string, explicitModuleName?: string): Promise<TService | undefined> {\r\n    const moduleName = explicitModuleName || this.moduleName;\r\n    const serviceKey = serviceName + '.' + moduleName;\r\n    if (!BrowserModuleContext.serviceCache[serviceKey]) {\r\n      BrowserModuleContext.serviceCache[serviceKey] = createRemoteService<TService>(serviceName, moduleName);\r\n    }\r\n    return Promise.resolve(BrowserModuleContext.serviceCache[serviceKey]);\r\n  }\r\n\r\n  public static async init(): Promise<void> {\r\n    // check if env is electron\r\n    if (!electron && (window as any).require) {\r\n      electron = (window as any).require('electron');\r\n      const backendService = electron.remote.require('./dist/server/BackendService').BackendService.instance;\r\n      topics = backendService.topics;\r\n      Store = electron.remote.require('electron-store');\r\n\r\n      // subscribe settings change\r\n      topics.subscribe(topicNames.systemSettingsUpdated, (event: IPubSubEvent, data: ISystemSettings) => {\r\n        settings = data;\r\n      });\r\n    }\r\n\r\n    // init internal module\r\n    BrowserModuleContext.inernalModuleContext = new BrowserModuleContext('reactron');\r\n\r\n    // load settings\r\n    if (!settings) {\r\n      settings = await services.application.getSettings();\r\n    }\r\n  }\r\n}","export class ApiRoute<TParams, TBody, TResponse = void>{\r\n  constructor(public path: string, public method: string) { }\r\n}\r\n\r\nexport interface ICallServiceMethodRequest {\r\n  moduleName: string;\r\n  serviceName: string;\r\n  methodName: string;\r\n  args: any[];\r\n}\r\n\r\nexport interface ICallServiceMethodResponse {\r\n  result: any;\r\n  error: string;\r\n}\r\n\r\nexport const routes = {\r\n  callServiceMethod: new ApiRoute<undefined, ICallServiceMethodRequest, ICallServiceMethodResponse>('/service/rpc', 'post'),\r\n};","import { BrowserModuleContext } from \"./BrowserModuleContext\";\r\nimport { routes, ICallServiceMethodRequest, ICallServiceMethodResponse } from \"../common/apiRoutes\";\r\n\r\nconst callServiceMethod = async (data: ICallServiceMethodRequest): Promise<ICallServiceMethodResponse> => {\r\n  const route = routes.callServiceMethod;\r\n  const method = route.method.toLocaleLowerCase();\r\n  const url = BrowserModuleContext.inernalModuleContext.moduleApiPath + route.path;\r\n\r\n  const options: RequestInit = {\r\n    method,\r\n    body: data && JSON.stringify(data),\r\n    headers: { \"Content-Type\": \"application/json; charset=utf-8\", }\r\n  };\r\n\r\n  const response = await fetch(url, options);\r\n  const text = await response.text();\r\n  if (response.status.toString().startsWith('2')) {\r\n    return text ? JSON.parse(text) : undefined;\r\n  }\r\n  console.log(text);\r\n  throw Error(text);\r\n};\r\n\r\nexport const createRemoteService = <TService>(serviceName: string, moduleName: string): TService => {\r\n  const proxy = new Proxy({}, {\r\n    get: (target, prop: string) => {\r\n      if (prop === 'then') {\r\n        return null; // I'm not a Thenable\r\n      }\r\n\r\n      return async (...args: any[]) => {\r\n        const response = await callServiceMethod({ serviceName, moduleName, methodName: prop, args });\r\n        console.log('get ' + moduleName + '.' + serviceName + '.' + prop, { args, response });\r\n        if (response.error) {\r\n          throw new Error(response.error);\r\n        }\r\n        return response.result;\r\n      }\r\n    }\r\n  });\r\n  return proxy as TService;\r\n}","import { IModuleController, IAppController, ILogController, IServiceController, IWebComponentController, IWebPageController, ISystemSettings, IWebPageOptions, IWebComponentOptions, IReactronServices } from '@schirkan/reactron-interfaces';\r\nimport { createRemoteService } from './RpcClient';\r\n\r\nexport class ReactronServicesFrontend implements IReactronServices {\r\n  private moduleController = createRemoteService<IModuleController>('ModuleController', 'reactron');\r\n  private appController = createRemoteService<IAppController>('AppController', 'reactron');\r\n  private logController = createRemoteService<ILogController>('LogController', 'reactron');\r\n  private serviceController = createRemoteService<IServiceController>('ServiceController', 'reactron');\r\n  private webComponentController = createRemoteService<IWebComponentController>('WebComponentController', 'reactron');\r\n  private webPageController = createRemoteService<IWebPageController>('WebPageController', 'reactron');\r\n\r\n  private _modulesCache: any;\r\n  private _settingsCache: any;\r\n  private _servicesCache: any;\r\n  private _serviceOptionsCache: { [key: string]: any } = {};\r\n  private _pagesCache: any;\r\n  private _componentsCache: any;\r\n\r\n  public clearCache(): void {\r\n    delete this._modulesCache;\r\n    delete this._settingsCache;\r\n    delete this._servicesCache;\r\n    this._serviceOptionsCache = {};\r\n    delete this._pagesCache;\r\n    delete this._componentsCache;\r\n  }\r\n\r\n  public readonly modules: IModuleController = {\r\n    getModules: () => {\r\n      return this._modulesCache || (this._modulesCache = this.moduleController.getModules());\r\n    },\r\n    addModule: (repository: string) => {\r\n      delete this._modulesCache;\r\n      return this.moduleController.addModule(repository);\r\n    },\r\n    deleteModule: (moduleName: string) => {\r\n      delete this._modulesCache;\r\n      return this.moduleController.deleteModule(moduleName);\r\n    },\r\n    updateModule: (moduleName: string) => {\r\n      delete this._modulesCache;\r\n      return this.moduleController.updateModule(moduleName);\r\n    },\r\n    checkUpdates: this.moduleController.checkUpdates,\r\n    rebuildModule: this.moduleController.rebuildModule,\r\n  };\r\n\r\n  public readonly application: IAppController = {\r\n    getServerInfo: this.appController.getServerInfo, // TODO: cache\r\n    exitApplication: this.appController.exitApplication,\r\n    restartApplication: this.appController.restartApplication,\r\n    shutdownSystem: this.appController.shutdownSystem,\r\n    rebootSystem: this.appController.rebootSystem,\r\n    resetApplication: this.appController.resetApplication,\r\n    getSettings: () => {\r\n      return this._settingsCache || (this._settingsCache = this.appController.getSettings());\r\n    },\r\n    setSettings: (settings: ISystemSettings) => {\r\n      this._settingsCache = settings;\r\n      return this.appController.setSettings(settings);\r\n    },\r\n  };\r\n\r\n  public readonly log: ILogController = {\r\n    getLogEntries: this.logController.getLogEntries\r\n  };\r\n\r\n  public readonly services: IServiceController = {\r\n    getAllServices: () => {\r\n      return this._servicesCache || (this._servicesCache = this.serviceController.getAllServices());\r\n    },\r\n    getServiceOptions: (moduleName: string, serviceName: string) => {\r\n      const key = moduleName + '.' + serviceName;\r\n      return this._serviceOptionsCache[key] || (this._serviceOptionsCache[key] = this.serviceController.getServiceOptions(moduleName, serviceName));\r\n    },\r\n    setServiceOptions: (moduleName: string, serviceName: string, options: object) => {\r\n      const key = moduleName + '.' + serviceName;\r\n      this._serviceOptionsCache[key] = options;\r\n      return this.serviceController.setServiceOptions(moduleName, serviceName, options);\r\n    },\r\n  };\r\n\r\n  public readonly components: IWebComponentController = {\r\n    getWebComponentOptions: () => {\r\n      return this._componentsCache || (this._componentsCache = this.webComponentController.getWebComponentOptions());\r\n    },\r\n    setWebComponentOptions: (options: IWebComponentOptions) => {\r\n      delete this._componentsCache;\r\n      return this.webComponentController.setWebComponentOptions(options);\r\n    },\r\n    deleteWebComponentOptions: (id: string) => {\r\n      delete this._componentsCache;\r\n      return this.webComponentController.deleteWebComponentOptions(id);\r\n    },\r\n  }\r\n\r\n  public readonly pages: IWebPageController = {\r\n    getWebPages: () => {\r\n      return this._pagesCache || (this._pagesCache = this.webPageController.getWebPages());\r\n    },\r\n    setWebPage: (options: IWebPageOptions) => {\r\n      delete this._pagesCache;\r\n      return this.webPageController.setWebPage(options);\r\n    },\r\n    deleteWebPage: (id: string) => {\r\n      delete this._pagesCache;\r\n      return this.webPageController.deleteWebPage(id);\r\n    },\r\n  };\r\n}\r\n\r\nexport const services: ReactronServicesFrontend = new ReactronServicesFrontend();","import * as React from 'react';\r\nimport { IReactronComponentDefinition, IInputComponentProps } from \"@schirkan/reactron-interfaces\";\r\nimport CarouselLayout from \"./CarouselLayout\";\r\nimport { CarouselProps } from 'react-responsive-carousel';\r\nimport { ICarouselLayoutOptions } from './ICarouselLayoutOptions';\r\n\r\nexport const carouselLayoutDefinition: IReactronComponentDefinition<ICarouselLayoutOptions> = {\r\n  component: CarouselLayout,\r\n  description: 'Carousel Layout',\r\n  displayName: 'Carousel Layout',\r\n  name: 'CarouselLayout',\r\n  type: 'layout',\r\n  fields: [\r\n    {\r\n      displayName: 'Options', name: 'options', valueType: 'object', fields: [\r\n        { displayName: 'Interval in ms', name: 'interval', valueType: 'number', defaultValue: 5000, minValue: 1000, stepSize: 50 },\r\n        { displayName: 'Transition Time in ms', name: 'transitionTime', valueType: 'number', defaultValue: 500, minValue: 100, stepSize: 50 },\r\n        { displayName: 'Show Indicators', name: 'showIndicators', valueType: 'boolean', defaultValue: true },\r\n        { displayName: 'Show Arrows', name: 'showArrows', valueType: 'boolean', defaultValue: false },\r\n        { displayName: 'Show Status', name: 'showStatus', valueType: 'boolean', defaultValue: false },\r\n        { displayName: 'Center Mode', name: 'centerMode', valueType: 'boolean', defaultValue: false },\r\n        { displayName: 'Center Slide Percentage', name: 'centerSlidePercentage', valueType: 'number', defaultValue: 70, minValue: 1, maxValue: 100, stepSize: 1 },\r\n        { displayName: 'Axis', name: 'axis', valueType: 'boolean', defaultValue: 'horizontal', values: [{ value: 'horizontal', text: 'horizontal' }, { value: 'vertical', text: 'vertical' }] },\r\n      ],\r\n      inputControl: (props: IInputComponentProps<CarouselProps>) => {\r\n        const interval = props.value && props.value.interval;\r\n        return <span>interval {interval} ms</span>;\r\n      }\r\n    },\r\n    { displayName: 'Content', name: 'items', valueType: 'webComponent', isArray: true },\r\n    { displayName: 'Carousel Style', name: 'style', valueType: 'style' },\r\n  ]\r\n};","import * as React from 'react';\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport { ICarouselLayoutOptions } from './ICarouselLayoutOptions';\r\nimport { IReactronComponentContext } from '@schirkan/reactron-interfaces';\r\n\r\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\r\nimport './CarouselLayout.scss';\r\n\r\nexport default class CarouselLayout extends React.Component<ICarouselLayoutOptions> {\r\n  public context!: IReactronComponentContext;\r\n\r\n  public render() {\r\n    return (\r\n      <section className=\"CarouselLayout\" style={this.props.style}>\r\n        <Carousel autoPlay={true} infiniteLoop={true} showThumbs={false} showArrows={false} showStatus={false} {...this.props.options}>\r\n          {this.props.items.map(id => this.context.renderComponent({ id }))}\r\n        </Carousel>\r\n      </section>\r\n    );\r\n  }\r\n}","import { IReactronComponentDefinition, IInputComponentProps } from \"@schirkan/reactron-interfaces\";\r\nimport GridLayout from \"./GridLayout\";\r\nimport * as React from 'react';\r\nimport { IGridLayoutTileOptions } from \"./IGridLayoutTileOptions\";\r\n\r\nexport const gridLayoutDefinition: IReactronComponentDefinition = {\r\n  component: GridLayout,\r\n  description: 'Grid Layout',\r\n  displayName: 'Grid Layout',\r\n  name: 'GridLayout',\r\n  type: 'layout',\r\n  fields: [\r\n    { displayName: 'Grid Style', name: 'gridStyle', valueType: 'style' },\r\n    { displayName: 'Tile Style', name: 'tileStyle', valueType: 'style' },\r\n    {\r\n      displayName: 'Grid tiles',\r\n      name: 'tiles',\r\n      valueType: 'object',\r\n      isArray: true,\r\n      fields: [\r\n        { displayName: 'Row', name: 'row', valueType: 'number', defaultValue: 1, stepSize: 1, minValue: 1, maxValue: 20 },\r\n        { displayName: 'Column', name: 'col', valueType: 'number', defaultValue: 1, stepSize: 1, minValue: 1, maxValue: 20 },\r\n        { displayName: 'Row span', name: 'rowspan', valueType: 'number', defaultValue: 1, stepSize: 1, minValue: 1, maxValue: 20 },\r\n        { displayName: 'Column span', name: 'colspan', valueType: 'number', defaultValue: 1, stepSize: 1, minValue: 1, maxValue: 20 },\r\n        { displayName: 'Content', name: 'content', valueType: 'webComponent' },\r\n        { displayName: 'Style', name: 'style', valueType: 'style' }\r\n      ],\r\n      inputControl: (props: IInputComponentProps<IGridLayoutTileOptions>) => {\r\n        const tile = props.value || {};\r\n        const style = { width: '100%', textOverflow: 'ellipsis', overflow: 'hidden' };\r\n        return (<div style={style}>[ {tile.row} | {tile.col} | {tile.content} ]</div>);\r\n      }\r\n    }\r\n  ]\r\n};","import * as React from 'react';\r\nimport { IGridLayoutOptions, IGridLayoutTileOptions } from './IGridLayoutTileOptions';\r\nimport { IReactronComponentContext } from '@schirkan/reactron-interfaces';\r\n\r\nimport './GridLayout.scss';\r\n\r\nexport default class GridLayout extends React.Component<IGridLayoutOptions> {\r\n  public context!: IReactronComponentContext;\r\n  \r\n  constructor(props: IGridLayoutOptions) {\r\n    super(props);\r\n\r\n    this.renderTile = this.renderTile.bind(this);\r\n  }\r\n\r\n  private renderTile(tile: IGridLayoutTileOptions, index: number) {\r\n    const style = { ...this.props.tileStyle, ...tile.style };\r\n    style.gridColumn = tile.col.toString();\r\n    if (tile.colspan > 1) {\r\n      style.gridColumn += ' / span ' + tile.colspan;\r\n    }\r\n\r\n    style.gridRow = tile.row.toString();\r\n    if (tile.rowspan > 1) {\r\n      style.gridRow += ' / span ' + tile.rowspan;\r\n    }\r\n    return (\r\n      <div className=\"GridTile\" key={index} style={style}>\r\n        {this.context.renderComponent({ id: tile.content })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <section className=\"GridLayout\" style={this.props.gridStyle}>\r\n        {this.props.tiles.map(this.renderTile)}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport IFrame from \"./IFrame\";\r\n\r\nexport const iFrameDefinition: IReactronComponentDefinition = {\r\n    component: IFrame,\r\n    description: 'IFrame Component',\r\n    displayName: 'IFrame',\r\n    name: 'IFrame',\r\n    fields: [\r\n        { displayName: 'URL', name: 'url', valueType: 'string' }\r\n    ]\r\n};","import * as React from 'react';\r\nimport { IIFrameOptions } from './IIFrameOptions';\r\n\r\nimport './IFrame.scss';\r\n\r\nexport default class IFrame extends React.Component<IIFrameOptions> {\r\n  public render() {\r\n    return <iframe className=\"ui-iframe\" src={this.props.url} />;\r\n  }\r\n}\r\n","import { IReactronComponentDefinition, IInputComponentProps } from \"@schirkan/reactron-interfaces\";\r\nimport ListLayout from \"./ListLayout\";\r\nimport * as React from 'react';\r\nimport { IListLayoutItemOptions } from \"./IListLayoutItemOptions\";\r\n\r\nexport const listLayoutDefinition: IReactronComponentDefinition = {\r\n  component: ListLayout,\r\n  description: 'List Layout',\r\n  displayName: 'List Layout',\r\n  name: 'ListLayout',\r\n  type: 'layout',\r\n  fields: [\r\n    { displayName: 'List Style', name: 'listStyle', valueType: 'style' },\r\n    { displayName: 'Item Style', name: 'itemStyle', valueType: 'style' },\r\n    {\r\n      displayName: 'List items',\r\n      name: 'items',\r\n      valueType: 'object',\r\n      isArray: true,\r\n      fields: [\r\n        { displayName: 'Content', name: 'content', valueType: 'webComponent' },\r\n        { displayName: 'Style', name: 'style', valueType: 'style' }\r\n      ],\r\n      inputControl: (props: IInputComponentProps<IListLayoutItemOptions>) => {\r\n        const item = props.value || {};\r\n        const style = { width: '100%', textOverflow: 'ellipsis', overflow: 'hidden' };\r\n        return (<div style={style}>[ {item.content} ]</div>);\r\n      }\r\n    }\r\n  ]\r\n};","import * as React from 'react';\r\nimport { IListLayoutItemOptions } from \"./IListLayoutItemOptions\";\r\nimport { IListLayoutOptions } from \"./IListLayoutOptions\";\r\nimport { IReactronComponentContext } from '@schirkan/reactron-interfaces';\r\n\r\nimport './ListLayout.scss';\r\n\r\nexport default class ListLayout extends React.Component<IListLayoutOptions> {\r\n  public context!: IReactronComponentContext;\r\n\r\n  constructor(props: IListLayoutOptions) {\r\n    super(props);\r\n\r\n    this.renderListItem = this.renderListItem.bind(this);\r\n  }\r\n\r\n  private renderListItem(item: IListLayoutItemOptions, index: number) {\r\n    const style = { ...this.props.itemStyle, ...item.style };\r\n\r\n    return (\r\n      <div className=\"ListItem\" key={index} style={style}>\r\n        {this.context.renderComponent({ id: item.content })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <section className=\"ListLayout\">\r\n        {this.props.items.map(this.renderListItem)}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport MarkDown from \"./MarkDown\";\r\n\r\nexport const markDownDefinition: IReactronComponentDefinition = {\r\n  component: MarkDown,\r\n  description: 'MarkDown Component',\r\n  displayName: 'MarkDown',\r\n  name: 'MarkDown',\r\n  fields: [\r\n    { displayName: 'Text', name: 'text', valueType: 'string', textRows: 10 },\r\n    { displayName: 'Style', name: 'style', valueType: 'style' }\r\n  ]\r\n};","import * as React from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport { IMarkDownOptions } from './IMarkDownOptions';\r\n\r\nimport './MarkDown.scss';\r\n\r\nexport default class MarkDown extends React.Component<IMarkDownOptions> {\r\n  public render() {\r\n    return (\r\n      <section className=\"MarkDown\" style={this.props.style}>\r\n        <ReactMarkdown source={this.props.text} />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport Notifications from \"./Notifications\";\r\n\r\nexport const notificationsDefinition: IReactronComponentDefinition = {\r\n    component: Notifications,\r\n    description: 'Notifications',\r\n    displayName: 'Notifications',\r\n    name: 'Notifications',\r\n    fields: []\r\n};","import * as React from 'react';\r\n\r\nimport './Notifications.scss';\r\n\r\nexport default class Notifications extends React.Component<any, any> {\r\n  constructor(props: any) {\r\n    super(props);\r\n  }\r\n\r\n  public render() {\r\n    return <section className=\"Notifications\">Notifications</section>;\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { IRoundButtonProps } from './IRoundButtonProps';\r\nimport './RoundButton.scss';\r\n\r\nexport default class RoundButton extends React.Component<IRoundButtonProps> {\r\n  public render() {\r\n    return <Link className=\"RoundButton\" to={this.props.to} role=\"button\">{this.props.children}</Link>;\r\n  }\r\n}\r\n","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport { carouselLayoutDefinition } from \"./CarouselLayout/CarouselLayoutDefinition\";\r\nimport { gridLayoutDefinition } from \"./GridLayout/GridLayoutDefinition\";\r\nimport { iFrameDefinition } from \"./IFrame/IFrameDefinition\";\r\nimport { listLayoutDefinition } from \"./ListLayout/ListLayoutDefinition\";\r\nimport { markDownDefinition } from \"./MarkDown/MarkDownDefinition\";\r\nimport { notificationsDefinition } from \"./Notifications/NotificationsDefinition\";\r\nimport { welcomeDefinition } from \"./Welcome/WelcomeDefinition\";\r\n\r\nexport const components: IReactronComponentDefinition[] = [\r\n    listLayoutDefinition,\r\n    carouselLayoutDefinition,\r\n    gridLayoutDefinition,\r\n    welcomeDefinition,\r\n    markDownDefinition,\r\n    notificationsDefinition,\r\n    iFrameDefinition\r\n];","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport Welcome from \"./Welcome\";\r\n\r\nexport const welcomeDefinition: IReactronComponentDefinition = {\r\n    component: Welcome,\r\n    description: 'Welcome Component',\r\n    displayName: 'Welcome',\r\n    name: 'Welcome',\r\n    fields: []\r\n};","import * as SvgIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport { IServerInfo } from '@schirkan/reactron-interfaces';\r\nimport * as React from 'react';\r\nimport RoundButton from '../../components/RoundButton/RoundButton';\r\nimport logo from './logo.svg';\r\nimport { services } from '../../ReactronServicesFrontend';\r\n\r\nimport './Welcome.scss';\r\n\r\ninterface IWelcomeState {\r\n  info?: IServerInfo;\r\n}\r\n\r\nexport default class Welcome extends React.Component<any, IWelcomeState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  public componentDidMount() {\r\n    services.application.getServerInfo().then(info => {\r\n      this.setState({ info });\r\n    });\r\n  }\r\n\r\n  public render() {\r\n    let info;\r\n\r\n    if (this.state.info) {\r\n      info = (<div className=\"info\">\r\n        To edit this page click Admin-Button or visit<br /><br />\r\n        <i>http://{this.state.info.ip}:3000/admin</i>\r\n      </div>);\r\n    }\r\n    return (\r\n      <section className=\"Welcome\">\r\n        <RoundButton to=\"/admin\">\r\n          <FontAwesome.FontAwesomeIcon icon={SvgIcons.faCog} />\r\n          Admin\r\n        </RoundButton>\r\n        <img src={logo} className=\"logo\" alt=\"logo\" />\r\n        <div className=\"title\">Welcome to Reactron</div>\r\n        {info}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import * as SvgCore from '@fortawesome/fontawesome-svg-core';\r\nimport * as BrandIcons from '@fortawesome/free-brands-svg-icons';\r\nimport * as RegularIcons from '@fortawesome/free-regular-svg-icons';\r\nimport * as SolidIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport { IComponentLoader, IModuleRepositoryItem, IReactronComponentDefinition } from '@schirkan/reactron-interfaces';\r\nimport * as reactronInterfaces from '@schirkan/reactron-interfaces';\r\nimport moment from 'moment';\r\nimport momentTimezone from 'moment-timezone';\r\nimport numeral from 'numeral';\r\nimport * as React from 'react';\r\nimport * as ReactDom from 'react-dom';\r\nimport * as ReactRouterDom from 'react-router-dom';\r\nimport { components as internalComponents } from './internalModule';\r\nimport { services } from './ReactronServicesFrontend';\r\n\r\n// tslint:disable:no-string-literal\r\n\r\nconst SystemJS = (window as any).System as SystemJSLoader.System;\r\n\r\nconst externalModules = {};\r\nexternalModules['react'] = React;\r\nexternalModules['react-dom'] = ReactDom;\r\nexternalModules['react-router-dom'] = ReactRouterDom;\r\nexternalModules['numeral'] = { default: numeral };\r\nexternalModules['moment'] = { default: moment };\r\nexternalModules['moment-timezone'] = { default: momentTimezone };\r\nexternalModules['@fortawesome/fontawesome-svg-core'] = SvgCore;\r\nexternalModules['@fortawesome/free-solid-svg-icons'] = SolidIcons;\r\nexternalModules['@fortawesome/free-regular-svg-icons'] = RegularIcons;\r\nexternalModules['@fortawesome/free-brands-svg-icons'] = BrandIcons;\r\nexternalModules['@fortawesome/react-fontawesome'] = FontAwesome;\r\nexternalModules['@schirkan/reactron-interfaces'] = reactronInterfaces;\r\n\r\nif ((window as any).require) {\r\n  externalModules['electron'] = (window as any).require('electron');\r\n}\r\n\r\nObject.keys(externalModules).forEach(key => {\r\n  const moduleExport = externalModules[key];\r\n  SystemJS.register(key, [], exports => ({ execute: () => exports(moduleExport) }));\r\n});\r\n\r\nexport class ComponentLoader implements IComponentLoader {\r\n  private allComponentsLoaded = false;\r\n  private moduleComponents: { [moduleName: string]: IReactronComponentDefinition[] } = {\r\n    'reactron': internalComponents\r\n  };\r\n\r\n  public async getModuleComponents(moduleName: string): Promise<IReactronComponentDefinition[] | undefined> {\r\n    if (!this.moduleComponents[moduleName]) {      \r\n      const modules = await services.modules.getModules();\r\n      const m = modules.find(x => x.name === moduleName);\r\n\r\n      if (!m) {\r\n        console.error('Module not found: ' + moduleName);\r\n        return;\r\n      }\r\n\r\n      await this.registerModuleComponents(m);\r\n    }\r\n\r\n    return this.moduleComponents[moduleName];\r\n  }\r\n\r\n  private async registerModuleComponents(m: IModuleRepositoryItem): Promise<void> {\r\n    if (!m.browserFile) {\r\n      console.log('Module has no browserFile: ' + m.name);\r\n      return;\r\n    }\r\n\r\n    if (this.moduleComponents[m.name]) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      console.log(m.browserFile);\r\n\r\n      const browserFileContent = await SystemJS.import('\\\\' + m.browserFile);\r\n      // tslint:disable-next-line:no-string-literal\r\n      const components = browserFileContent['components'];\r\n\r\n      if (components && typeof components === 'object' && Array.isArray(components)) {\r\n        this.moduleComponents[m.name] = components;\r\n      }\r\n      console.log('Components loaded for module: ' + m.name);\r\n    } catch (error) {\r\n      console.error('Error loading components for module: ' + m.name, error);\r\n    }\r\n  }\r\n\r\n  public async getAllComponents(): Promise<{ [moduleName: string]: IReactronComponentDefinition[] }> {\r\n    if (this.allComponentsLoaded) {\r\n      return this.moduleComponents;\r\n    }\r\n    \r\n    const modules = await services.modules.getModules();\r\n\r\n    for (const m of modules) {\r\n      await this.registerModuleComponents(m);\r\n    }\r\n    this.allComponentsLoaded = true;\r\n    return this.moduleComponents;\r\n  }\r\n}\r\n\r\nexport const componentLoader = new ComponentLoader();","import * as SvgIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport classname from 'classnames';\r\nimport * as React from 'react';\r\nimport { ILoadingProps } from './ILoadingProps';\r\n\r\nimport './Loading.scss';\r\n\r\nexport default class Loading extends React.Component<ILoadingProps> {\r\n  public static defaultProps: Partial<ILoadingProps> = {\r\n    iconSize: \"4x\"\r\n  };\r\n\r\n  public render() {\r\n    return (\r\n      <section className={classname('Loading', { 'center': this.props.center })}>\r\n        <FontAwesome.FontAwesomeIcon icon={SvgIcons.faSpinner} size={this.props.iconSize} spin={true} />\r\n        {this.props.text && (\r\n          <div className=\"text\">{this.props.text}</div>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import * as SvgIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport RoundButton from '../RoundButton/RoundButton';\r\nimport { IPageNotFoundProps } from './IPageNotFoundProps';\r\n\r\nimport './PageNotFound.scss'\r\n\r\nexport default class PageNotFound extends React.Component<IPageNotFoundProps> {\r\n  public render() {\r\n    return (\r\n      <div className=\"PageNotFound\">\r\n        <h1><FontAwesome.FontAwesomeIcon icon={SvgIcons.faQuestionCircle} /> 404</h1>\r\n        <h2>No page defined for path: {this.props.location.pathname}</h2>\r\n        <RoundButton to=\"/admin\">\r\n          <FontAwesome.FontAwesomeIcon icon={SvgIcons.faCog} /> Admin\r\n        </RoundButton>\r\n        <RoundButton to=\"/\">\r\n          <FontAwesome.FontAwesomeIcon icon={SvgIcons.faHome} /> Home\r\n        </RoundButton>\r\n      </div >\r\n    );\r\n  }\r\n}","import { ILogWriter, IPubSub, topicNames, Severity } from \"@schirkan/reactron-interfaces\";\r\n\r\nexport class LogWriter implements ILogWriter {\r\n  constructor(private topics: IPubSub, public readonly source: string) { }\r\n\r\n  private log(severity: Severity, message: string, data?: any): void {\r\n    this.topics && this.topics.publish(topicNames.log, { source: this.source, severity, message, data });\r\n  }\r\n\r\n  public error(message: string, data?: any): void {\r\n    this.log('error', message, data);\r\n  }\r\n\r\n  public warning(message: string, data?: any): void {\r\n    this.log('warning', message, data);\r\n  }\r\n\r\n  public info(message: string, data?: any): void {\r\n    this.log('information', message, data);\r\n  }\r\n\r\n  public debug(message: string, data?: any): void {\r\n    this.log('debug', message, data);\r\n  }\r\n}","import { SizeProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { IReactronComponentContext, ILogWriter, IWebComponentOptions } from '@schirkan/reactron-interfaces';\r\nimport React from 'react';\r\nimport { BrowserModuleContext } from \"./BrowserModuleContext\";\r\nimport { componentLoader } from './ComponentLoader';\r\nimport Loading from \"./components/Loading/Loading\";\r\nimport WebComponent, { IWebComponentProps } from \"./components/WebComponent/WebComponent\";\r\nimport { LogWriter } from '../common/LogWriter';\r\n\r\nexport class WebComponentContext extends BrowserModuleContext implements IReactronComponentContext {\r\n  public readonly renderLoading: (text?: string, iconSize?: SizeProp) => any;\r\n  public readonly renderComponent: (props: IWebComponentProps) => any;\r\n  public readonly componentLoader = componentLoader;\r\n  public readonly log: ILogWriter;\r\n  public readonly componentName: string;\r\n\r\n  constructor(props: IWebComponentOptions) {\r\n    super(props.moduleName);\r\n\r\n    const logSource = props.id || (props.moduleName + '.' + props.componentName);\r\n    this.log = new LogWriter(this.topics, logSource);\r\n    this.componentName = props.componentName;\r\n\r\n    this.renderComponent = (props: IWebComponentProps) => {\r\n      const key = props.id + '.' + props.moduleName + '.' + props.componentName;\r\n      return <WebComponent {...props} key={key} />;\r\n    };\r\n\r\n    this.renderLoading = (text?: string, iconSize?: SizeProp) => {\r\n      return <Loading text={text} iconSize={iconSize} />;\r\n    };\r\n  }\r\n}\r\n\r\nexport const WebComponentContextType = React.createContext<IReactronComponentContext>(new WebComponentContext({ moduleName: '', parentId: '', componentName: '', id: '' }));","import * as SvgIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport RoundButton from '../RoundButton/RoundButton';\r\nimport { IComponentNotFoundProps } from './IComponentNotFoundProps';\r\n\r\nimport './ComponentNotFound.scss';\r\n\r\nexport default class ComponentNotFound extends React.Component<IComponentNotFoundProps> {\r\n  public static defaultProps: Partial<IComponentNotFoundProps> = {\r\n    iconSize: \"4x\"\r\n  };\r\n\r\n  public render() {\r\n    const text = [];\r\n    if (this.props.id) {\r\n      text.push('Id: ' + this.props.id);\r\n    }\r\n    if (this.props.componentName) {\r\n      text.push('Component: ' + this.props.componentName);\r\n    }\r\n    if (this.props.moduleName) {\r\n      text.push('Module: ' + this.props.moduleName);\r\n    }\r\n\r\n    return (\r\n      <section className=\"ComponentNotFound\">\r\n        <FontAwesome.FontAwesomeIcon icon={SvgIcons.faExclamationTriangle} size={this.props.iconSize} />\r\n        <div className=\"text\">Component not found: {text.join(' | ')}</div>\r\n        <RoundButton to=\"/admin\">\r\n          <FontAwesome.FontAwesomeIcon icon={SvgIcons.faCog} /> Admin\r\n        </RoundButton>\r\n      </section>\r\n    );\r\n  }\r\n}","import * as React from 'react';\r\n\r\ninterface IErrorBoundaryState {\r\n  error: any;\r\n}\r\n\r\nexport default class ErrorBoundary extends React.Component<any, IErrorBoundaryState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = { error: null };\r\n  }\r\n\r\n  public componentDidCatch(error: any, info: any) {\r\n    console.log(error);\r\n    console.log(info);\r\n    this.setState({ error });\r\n  }\r\n\r\n  public render() {\r\n    if (this.state.error) {\r\n      return <span style={{ color: 'red' }}>Something went wrong.</span>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}","import { IExtraWebComponentProps, IReactronComponentContext, IReactronComponentDefinition, IWebComponentOptions } from '@schirkan/reactron-interfaces';\r\nimport classname from 'classnames';\r\nimport * as React from 'react';\r\nimport { services } from '../../ReactronServicesFrontend';\r\nimport { componentLoader } from '../../ComponentLoader';\r\nimport { WebComponentContext } from '../../WebComponentContext';\r\nimport { WebComponentContextType } from '../../WebComponentContext';\r\nimport ComponentNotFound from '../ComponentNotFound/ComponentNotFound';\r\nimport ErrorBoundary from '../ErrorBoundary/ErrorBoundary';\r\nimport Loading from '../Loading/Loading';\r\n\r\nimport './WebComponent.scss';\r\n\r\nexport interface IWebComponentProps extends Partial<IWebComponentOptions>, IExtraWebComponentProps {\r\n}\r\n\r\ninterface IWebComponentState {\r\n  componentFound?: boolean;\r\n  componentContext?: IReactronComponentContext;\r\n  componentDefinition?: IReactronComponentDefinition;\r\n  componentOptions?: IWebComponentOptions;\r\n}\r\n\r\nexport default class WebComponent extends React.Component<IWebComponentProps, IWebComponentState> {\r\n  constructor(props: IWebComponentProps) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: IWebComponentProps) {\r\n    if (this.props.id !== prevProps.id ||\r\n      this.props.moduleName !== prevProps.moduleName ||\r\n      this.props.componentName !== prevProps.componentName ||\r\n      this.props.options !== prevProps.options) {\r\n      this.loadComponent();\r\n    }\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this.loadComponent();\r\n  }\r\n\r\n  private async loadComponent() {\r\n    try {\r\n      let webComponentOptions: IWebComponentOptions | undefined;\r\n\r\n      if (this.props.id) {\r\n        // nur mit der ID lesen\r\n        const allComponentOptions = await services.components.getWebComponentOptions();\r\n        webComponentOptions = allComponentOptions.find(x => x.id === this.props.id);\r\n      } else if (this.props.moduleName && this.props.componentName) {\r\n        webComponentOptions = {\r\n          id: '',\r\n          parentId: '',\r\n          moduleName: this.props.moduleName,\r\n          componentName: this.props.componentName,\r\n          options: this.props.options,\r\n        };\r\n      }\r\n\r\n      if (!webComponentOptions) {\r\n        this.setState({ componentFound: false });\r\n        return;\r\n      }\r\n\r\n      const moduleComponents = await componentLoader.getModuleComponents(webComponentOptions.moduleName);\r\n      if (!moduleComponents) {\r\n        this.setState({ componentFound: false });\r\n        return;\r\n      }\r\n\r\n      const componentName = webComponentOptions.componentName;\r\n      const componentDefinition = moduleComponents.find(x => x.name === componentName);\r\n      if (!componentDefinition || !componentDefinition.component) {\r\n        this.setState({ componentFound: false });\r\n        return;\r\n      }\r\n\r\n      this.setState({\r\n        componentContext: new WebComponentContext(webComponentOptions),\r\n        componentDefinition,\r\n        componentOptions: webComponentOptions,\r\n        componentFound: true\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      this.setState({ componentFound: false });\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    let content = <Loading center={true} />;\r\n\r\n    if (this.state.componentFound === false) {\r\n      content = <ComponentNotFound {...this.props} />;\r\n    }\r\n\r\n    if (this.state.componentDefinition && this.state.componentDefinition.component && this.state.componentContext) {\r\n      const Component = this.state.componentDefinition.component as typeof React.Component;\r\n\r\n      // set contextType\r\n      if (!Component.contextType) {\r\n        Component.contextType = WebComponentContextType;\r\n      }\r\n\r\n      const props = this.state.componentOptions && this.state.componentOptions.options || {};\r\n\r\n      // render context and component\r\n      content = (\r\n        <WebComponentContextType.Provider value={this.state.componentContext}>\r\n          <Component {...props} />\r\n        </WebComponentContextType.Provider>\r\n      );\r\n    }\r\n\r\n    const className = classname(\"WebComponent\", this.props.className);\r\n\r\n    return (\r\n      <section className={className} style={this.props.style}>\r\n        <ErrorBoundary>\r\n          {content}\r\n        </ErrorBoundary>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import { IWebPageOptions, topicNames } from '@schirkan/reactron-interfaces';\r\nimport moment from 'moment';\r\nimport numeral from 'numeral';\r\nimport * as React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport { BrowserModuleContext } from '../../BrowserModuleContext';\r\nimport { componentLoader } from '../../ComponentLoader';\r\nimport { services } from '../../ReactronServicesFrontend';\r\nimport Loading from '../Loading/Loading';\r\nimport PageNotFound from '../PageNotFound/PageNotFound';\r\nimport WebComponent from '../WebComponent/WebComponent';\r\n\r\n// load moment & numeral locales\r\nimport 'moment/min/locales.min';\r\nimport 'numeral/min/locales.min';\r\n\r\nimport './App.scss';\r\n\r\nexport interface IAppState {\r\n  pages?: IWebPageOptions[];\r\n}\r\n\r\nexport default class App extends React.Component<any, IAppState> {\r\n  private reloadTimer: number | undefined;\r\n  private reloadWait: number = 2000;\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {};\r\n    this.reload = this.reload.bind(this);\r\n    this.triggerReload = this.triggerReload.bind(this);\r\n    this.onKeyDown = this.onKeyDown.bind(this);\r\n  }\r\n\r\n  public async componentDidMount() {\r\n    await this.init();\r\n    this.subscribeTopics();\r\n    document.addEventListener('keydown', this.onKeyDown);\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    this.unsubscribeTopics();\r\n    document.removeEventListener('keydown', this.onKeyDown);\r\n  }\r\n\r\n  private onKeyDown(e: KeyboardEvent) {\r\n    const evtobj = window.event ? window.event as KeyboardEvent : e;\r\n    if (evtobj.keyCode === 65 && evtobj.ctrlKey && evtobj.altKey) {\r\n      window.location.href = '/admin';\r\n    }\r\n  }\r\n\r\n  private subscribeTopics() {\r\n    // register page/component change event\r\n    if (BrowserModuleContext.inernalModuleContext.topics) {\r\n      BrowserModuleContext.inernalModuleContext.topics.subscribe(topicNames.pagesUpdated, this.triggerReload);\r\n      BrowserModuleContext.inernalModuleContext.topics.subscribe(topicNames.componentsUpdated, this.triggerReload);\r\n      BrowserModuleContext.inernalModuleContext.topics.subscribe(topicNames.systemSettingsUpdated, this.triggerReload);\r\n    }\r\n  }\r\n\r\n  private unsubscribeTopics() {\r\n    if (BrowserModuleContext.inernalModuleContext.topics) {\r\n      BrowserModuleContext.inernalModuleContext.topics.unsubscribe(topicNames.pagesUpdated, this.triggerReload);\r\n      BrowserModuleContext.inernalModuleContext.topics.unsubscribe(topicNames.componentsUpdated, this.triggerReload);\r\n      BrowserModuleContext.inernalModuleContext.topics.unsubscribe(topicNames.systemSettingsUpdated, this.triggerReload);\r\n    }\r\n  }\r\n\r\n  private async init() {\r\n    // init BrowserModuleContext\r\n    await BrowserModuleContext.init();\r\n\r\n    // load settings\r\n    moment.locale(BrowserModuleContext.inernalModuleContext.settings.lang);\r\n    numeral.locale(BrowserModuleContext.inernalModuleContext.settings.lang);\r\n\r\n    // load all modules\r\n    await componentLoader.getAllComponents();\r\n\r\n    // load pages\r\n    const pages = await services.pages.getWebPages();\r\n    return this.setState({ pages });\r\n  }\r\n\r\n  private triggerReload() {\r\n    window.clearTimeout(this.reloadTimer);\r\n    this.reloadTimer = window.setTimeout(this.reload, this.reloadWait);\r\n  }\r\n\r\n  private reload() {\r\n    console.log('reload');\r\n    services.clearCache();\r\n    this.init();\r\n  }\r\n\r\n  public renderPage(id: string, style: any) {\r\n    return () => (\r\n      <section className=\"WebPage\" style={style}>\r\n        <WebComponent id={id} />\r\n      </section>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    let content = <Loading text=\"Loading Reactron...\" center={true} />;\r\n\r\n    if (this.state.pages) {\r\n      content = (\r\n        <Router>\r\n          <Switch>\r\n            {this.state.pages.map(item =>\r\n              (<Route key={item.path} path={item.path} exact={item.path === '/'} component={this.renderPage(item.webComponentId, item.style)} />)\r\n            )}\r\n            <Route component={PageNotFound} />\r\n          </Switch>\r\n        </Router>\r\n      );\r\n    }\r\n\r\n    return <section className=\"App\">{content}</section>;\r\n  }\r\n}\r\n","// main entry file for react\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport App from './browser/components/App/App';\r\nimport ErrorBoundary from './browser/components/ErrorBoundary/ErrorBoundary';\r\n\r\nimport './index.scss';\r\n\r\nReactDOM.render(\r\n  <ErrorBoundary><App /></ErrorBoundary>,\r\n  document.getElementById('root') as HTMLElement\r\n);","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";"],"sourceRoot":""}