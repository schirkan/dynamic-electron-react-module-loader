{"version":3,"sources":["browser/BrowserModuleContext.ts","common/apiRoutes.ts","browser/ApiClient.ts","browser/RpcClient.ts","browser/inernalModuleContext.ts","browser/components/Loading/Loading.tsx","browser/components/RoundButton/RoundButton.tsx","browser/components/PageNotFound/PageNotFound.tsx","browser/internalModule/CarouselLayout/CarouselLayoutDefinition.tsx","browser/internalModule/CarouselLayout/CarouselLayout.tsx","browser/internalModule/GridLayout/GridLayoutDefinition.tsx","browser/internalModule/GridLayout/GridLayout.tsx","browser/internalModule/IFrame/IFrameDefinition.tsx","browser/internalModule/IFrame/IFrame.tsx","browser/internalModule/ListLayout/ListLayoutDefinition.tsx","browser/internalModule/ListLayout/ListLayout.tsx","browser/internalModule/MarkDown/MarkDownDefinition.tsx","browser/internalModule/MarkDown/MarkDown.tsx","browser/internalModule/Notifications/NotificationsDefinition.tsx","browser/internalModule/Notifications/Notifications.tsx","browser/internalModule/index.ts","browser/internalModule/Welcome/WelcomeDefinition.tsx","browser/internalModule/Welcome/Welcome.tsx","browser/ComponentLoader.ts","common/LogWriter.ts","browser/WebComponentContext.tsx","browser/components/ComponentNotFound/ComponentNotFound.tsx","browser/components/ErrorBoundary/ErrorBoundary.tsx","browser/components/WebComponent/WebComponent.tsx","browser/components/App/App.tsx","index.tsx","browser/internalModule/Welcome/logo.svg"],"names":["electron","backendService","Store","settings","ApiRoute","path","method","Object","classCallCheck","this","routes","getServices","getServiceOptions","setServiceOptions","callServiceMethod","getModules","addModule","deleteModule","rebuildModule","updateModule","checkUpdates","getWebPages","setWebPage","deleteWebPage","getServerInfo","exitApplication","restartApplication","shutdownSystem","rebootSystem","resetApplication","getSettings","setSettings","getWebComponentOptions","setWebComponentOptions","deleteWebComponentOptions","getLogEntries","ApiClient","getAllServices","apiCall","createClass","key","value","_this","keys","forEach","clearCache","route","cache","cacheResponse","arguments","length","undefined","toLocaleLowerCase","call","params","data","Promise","resolve","replace","p","fetch","inernalModuleContext","instance","moduleApiPath","body","JSON","stringify","headers","Content-Type","then","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","response","text","wrap","_context","prev","next","sent","status","toString","startsWith","abrupt","parse","console","log","Error","stop","_x","apply","apiClient","createRemoteService","serviceName","moduleName","Proxy","get","target","prop","_len","args","_key","_args","Array","methodName","error","result","topics","clearAllSubscriptions","once","publish","subscribe","unsubscribe","moduleStoreCache","initSettings","initModuleContext","_ref2","_callee2","_context2","window","require","remote","BackendService","topicNames","systemSettingsUpdated","event","BrowserModuleContext","moduleStorage","getService","moduleStoreKey","name","escapedModuleName","explicitModuleName","obj","init","_init","Loading","react","className","classname","center","props","react_fontawesome_index_es","icon","SvgIcons","size","iconSize","spin","React","defaultProps","RoundButton","Link","to","role","children","PageNotFound","location","pathname","RoundButton_RoundButton_RoundButton","carouselLayoutDefinition","component","context","_this2","style","lib","assign","autoPlay","infiniteLoop","showThumbs","showArrows","showStatus","options","items","map","id","renderComponent","description","displayName","type","fields","valueType","defaultValue","minValue","stepSize","maxValue","values","inputControl","interval","isArray","gridLayoutDefinition","GridLayout","possibleConstructorReturn","getPrototypeOf","renderTile","bind","assertThisInitialized","tile","index","objectSpread","tileStyle","gridColumn","col","colspan","gridRow","row","rowspan","content","gridStyle","tiles","width","textOverflow","overflow","iFrameDefinition","src","url","listLayoutDefinition","ListLayout","renderListItem","item","itemStyle","markDownDefinition","react_markdown_default","source","textRows","notificationsDefinition","Notifications","components","Welcome","state","info","setState","ip","logo","alt","SystemJS","System","externalModules","ReactDom","ReactRouterDom","default","numeral","moment","momentTimezone","SvgCore","SolidIcons","RegularIcons","BrandIcons","FontAwesome","reactronInterfaces","moduleExport","register","exports","execute","componentLoader","ComponentLoader","allComponentsLoaded","moduleComponents","reactron","internalComponents","_getModuleComponents","modules","m","find","x","registerModuleComponents","_registerModuleComponents","browserFileContent","browserFile","import","t0","_x2","_getAllComponents","_callee3","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_context3","Symbol","iterator","done","return","finish","LogWriter","severity","message","WebComponentContext","_BrowserModuleContext","componentName","renderLoading","react_default","createElement","WebComponent_WebComponent_WebComponent","Loading_Loading_Loading","inherits","WebComponentContextType","createContext","ComponentNotFound","push","join","ErrorBoundary","color","WebComponent","prevProps","loadComponent","allComponentOptions","webComponentOptions","parentId","componentFound","getModuleComponents","componentDefinition","componentContext","componentOptions","ComponentNotFound_ComponentNotFound_ComponentNotFound","Component","contextType","Provider","ErrorBoundary_ErrorBoundary","App","reloadTimer","reloadWait","reload","triggerReload","onKeyDown","subscribeTopics","document","addEventListener","unsubscribeTopics","removeEventListener","e","evtobj","keyCode","ctrlKey","altKey","href","pagesUpdated","componentsUpdated","locale","lang","pages","clearTimeout","setTimeout","BrowserRouter","Switch","Route","exact","renderPage","webComponentId","ReactDOM","App_App_App","getElementById","module","__webpack_require__"],"mappings":"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","file":"static/js/main.d3f230bb.chunk.js","sourcesContent":["import { IBackendService, IModuleContext, IPubSub, ISystemSettings, ElectronStore, topicNames } from \"@schirkan/reactron-interfaces\";\r\nimport { apiClient } from \"./ApiClient\";\r\nimport { createRemoteService } from \"./RpcClient\";\r\n\r\nlet electron: Electron.AllElectron;\r\nlet backendService: IBackendService;\r\nlet topics: IPubSub = { // TODO: mock\r\n  clearAllSubscriptions: () => { },\r\n  once: () => { },\r\n  publish: () => { },\r\n  subscribe: () => { },\r\n  unsubscribe: () => { }\r\n};\r\nlet Store: new (options?: any) => ElectronStore;\r\n\r\nconst moduleStoreCache: { [key: string]: ElectronStore } = {};\r\nconst serviceCache: { [key: string]: any } = {};\r\nlet settings: ISystemSettings;\r\n\r\nexport const initSettings = async () => {\r\n  if (!settings) {\r\n    settings = await apiClient.getSettings();\r\n  }\r\n}\r\n\r\nexport const initModuleContext = async () => {\r\n  // check if env is electron\r\n  if (!electron && (window as any).require) {\r\n    electron = (window as any).require('electron');\r\n    backendService = electron.remote.require('./dist/server/BackendService').BackendService.instance;\r\n    topics = backendService.topics;\r\n    Store = electron.remote.require('electron-store');\r\n\r\n    // on settings change\r\n    topics.subscribe(topicNames.systemSettingsUpdated, (event, data: ISystemSettings) => {\r\n      settings = data;\r\n    });\r\n  }\r\n}\r\n\r\nexport class BrowserModuleContext implements IModuleContext {\r\n  public readonly electron: Electron.AllElectron;\r\n  public readonly backendService: IBackendService;\r\n  public readonly topics: IPubSub;\r\n  public readonly moduleStorage: ElectronStore;\r\n  public readonly moduleApiPath: string;\r\n  public getService: <TService = any>(serviceName: string, moduleName?: string | undefined) => TService | undefined;\r\n  public get settings(): Readonly<ISystemSettings> {\r\n    return settings;\r\n  }\r\n\r\n  constructor(public moduleName: string) {\r\n    this.electron = electron;\r\n    this.backendService = backendService;\r\n    this.topics = topics;\r\n\r\n    const moduleStoreKey = 'module.' + moduleName;\r\n    if (Store && !moduleStoreCache[moduleStoreKey]) {\r\n      moduleStoreCache[moduleStoreKey] = new Store({ name: 'module.' + moduleName });\r\n    }\r\n    this.moduleStorage = moduleStoreCache[moduleStoreKey];\r\n\r\n    const escapedModuleName = moduleName.replace('/', '@');\r\n    this.moduleApiPath = '/api/modules/' + escapedModuleName;\r\n\r\n    this.getService = (serviceName: string, explicitModuleName?: string) => {\r\n      return createRemoteService(serviceName, explicitModuleName || moduleName);\r\n\r\n      // if (!this.backendService) {\r\n      //   console.log('Method getService() is not supported in browser environment.');\r\n      //   return undefined;\r\n      // }\r\n      // const serviceKey = (explicitModuleName || moduleName) + '.' + serviceName;\r\n      // if (!serviceCache[serviceKey]) {\r\n      //   serviceCache[serviceKey] = this.backendService.serviceManager.get(explicitModuleName || moduleName, serviceName);\r\n      // }\r\n      // return serviceCache[serviceKey] as TService | undefined;\r\n    }\r\n  }\r\n}\r\n\r\n","import { ICommandResult, IModuleRepositoryItem, IServerInfo, IServiceRepositoryItem, ISystemSettings, IWebComponentOptions, IWebPageOptions, ILogEntry } from '@schirkan/reactron-interfaces';\r\n\r\nexport class ApiRoute<TParams, TBody, TResponse = void>{\r\n  constructor(public path: string, public method: string) { }\r\n}\r\n\r\nexport const routes = {\r\n  getServices: new ApiRoute<undefined, undefined, IServiceRepositoryItem[]>('/service/', 'get'),\r\n  getServiceOptions: new ApiRoute<undefined, { moduleName: string, serviceName: string }, object>('/service/getOptions', 'post'),\r\n  setServiceOptions: new ApiRoute<undefined, { moduleName: string, serviceName: string, options: object }>('/service/setOptions', 'post'),\r\n  callServiceMethod: new ApiRoute<undefined, { moduleName: string, serviceName: string, methodName: string, args: any[] }, { result: any, error: string }>('/service/rpc', 'post'),\r\n\r\n  getModules: new ApiRoute<undefined, undefined, IModuleRepositoryItem[]>('/modules/', 'get'),\r\n  addModule: new ApiRoute<undefined, { repository: string }, ICommandResult[]>('/modules/', 'post'),\r\n  deleteModule: new ApiRoute<undefined, { moduleName: string }, ICommandResult[]>('/modules/delete', 'delete'),\r\n  rebuildModule: new ApiRoute<undefined, { moduleName: string }, ICommandResult[]>('/modules/rebuild', 'post'),\r\n  updateModule: new ApiRoute<undefined, { moduleName: string }, ICommandResult[]>('/modules/update', 'post'),\r\n  checkUpdates: new ApiRoute<undefined, undefined, ICommandResult[]>('/modules/checkUpdates', 'post'),\r\n\r\n  getWebPages: new ApiRoute<undefined, undefined, IWebPageOptions[]>('/pages/', 'get'),\r\n  setWebPage: new ApiRoute<undefined, IWebPageOptions, IWebPageOptions>('/pages/', 'post'),\r\n  deleteWebPage: new ApiRoute<{ id: string }, undefined>('/pages/:id', 'delete'),\r\n\r\n  getServerInfo: new ApiRoute<undefined, undefined, IServerInfo>('/app/', 'get'),\r\n  exitApplication: new ApiRoute<undefined, undefined>('/app/exitApplication', 'post'),\r\n  restartApplication: new ApiRoute<undefined, undefined>('/app/restartApplication', 'post'),\r\n  shutdownSystem: new ApiRoute<undefined, undefined>('/app/shutdownSystem', 'post'),\r\n  rebootSystem: new ApiRoute<undefined, undefined>('/app/restartSystem', 'post'),\r\n  resetApplication: new ApiRoute<undefined, undefined>('/app/resetApplication', 'post'),\r\n\r\n  getSettings: new ApiRoute<undefined, undefined, ISystemSettings>('/settings/', 'get'),\r\n  setSettings: new ApiRoute<undefined, ISystemSettings>('/settings/', 'post'),\r\n\r\n  getWebComponentOptions: new ApiRoute<undefined, undefined, IWebComponentOptions[]>('/components/', 'get'),\r\n  setWebComponentOptions: new ApiRoute<undefined, IWebComponentOptions, IWebComponentOptions>('/components/', 'post'),\r\n  deleteWebComponentOptions: new ApiRoute<{ id: string }, undefined>('/components/:id', 'delete'),\r\n\r\n  getLogEntries: new ApiRoute<undefined, { source?: string }, ILogEntry[]>('/log/entries', 'post'),\r\n};","import { ApiRoute, routes } from '../common/apiRoutes';\r\nimport inernalModuleContext from './inernalModuleContext';\r\n\r\nexport class ApiClient {\r\n  public getAllServices = apiCall(routes.getServices, true);\r\n  public getServiceOptions = apiCall(routes.getServiceOptions);\r\n  public setServiceOptions = apiCall(routes.setServiceOptions);\r\n  public callServiceMethod = apiCall(routes.callServiceMethod);\r\n\r\n  public getModules = apiCall(routes.getModules, true);\r\n  public addModule = apiCall(routes.addModule);\r\n  public checkUpdates = apiCall(routes.checkUpdates);\r\n  public deleteModule = apiCall(routes.deleteModule);\r\n  public rebuildModule = apiCall(routes.rebuildModule);\r\n  public updateModule = apiCall(routes.updateModule);\r\n\r\n  public getWebPages = apiCall(routes.getWebPages, true);\r\n  public setWebPage = apiCall(routes.setWebPage);\r\n  public deleteWebPage = apiCall(routes.deleteWebPage);\r\n\r\n  public getServerInfo = apiCall(routes.getServerInfo);\r\n  public exitApplication = apiCall(routes.exitApplication);\r\n  public restartApplication = apiCall(routes.restartApplication);\r\n  public shutdownSystem = apiCall(routes.shutdownSystem);\r\n  public rebootSystem = apiCall(routes.rebootSystem);\r\n  public resetApplication = apiCall(routes.resetApplication);\r\n\r\n  public getSettings = apiCall(routes.getSettings, true);\r\n  public setSettings = apiCall(routes.setSettings);\r\n\r\n  public getWebComponentOptions = apiCall(routes.getWebComponentOptions, true);\r\n  public setWebComponentOptions = apiCall(routes.setWebComponentOptions);\r\n  public deleteWebComponentOptions = apiCall(routes.deleteWebComponentOptions);\r\n\r\n  public getLogEntries = apiCall(routes.getLogEntries);\r\n\r\n  public clearCache() {\r\n    Object.keys(this).forEach(key => {\r\n      if (this[key] && this[key].clearCache) {\r\n        this[key].clearCache();\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\ninterface IApiCall<TParams, TBody, TResponse> {\r\n  (params?: TParams, body?: TBody): Promise<TResponse>;\r\n  clearCache: () => void;\r\n}\r\n\r\nconst apiCall = <TParams, TBody, TResponse>(\r\n  route: ApiRoute<TParams, TBody, TResponse>,\r\n  cacheResponse: boolean = false) => {\r\n  let cache: any;\r\n  const method = route.method.toLocaleLowerCase();\r\n\r\n  const call: any = (params: TParams, data: TBody): Promise<TResponse> => {\r\n    if (cacheResponse && cache) {\r\n      return Promise.resolve(cache);\r\n    }\r\n\r\n    let path = route.path;\r\n    // replace params in path\r\n    if (params) {\r\n      Object.keys(params).forEach(key => {\r\n        path = path.replace(':' + key, params[key]);\r\n      });\r\n    }\r\n    const p = fetch(inernalModuleContext.instance.moduleApiPath + path, {\r\n      method,\r\n      body: data && JSON.stringify(data),\r\n      headers: {\r\n        \"Content-Type\": \"application/json; charset=utf-8\",\r\n      }\r\n    })\r\n      .then(async response => {\r\n        const text = await response.text();\r\n\r\n        if (response.status.toString().startsWith('2')) {\r\n          if (!text) {\r\n            return undefined;\r\n          }\r\n          return JSON.parse(text);\r\n        }\r\n\r\n        console.log(text);\r\n        throw Error(text);\r\n      });\r\n      // .then(response => {\r\n      //   if (cacheResponse) {\r\n      //     cache = response;\r\n      //   }\r\n      //   return response;\r\n      // });\r\n\r\n      if (cacheResponse) {\r\n        cache = p;\r\n      }\r\n      return p;\r\n  };\r\n\r\n  call.clearCache = () => {\r\n    cache = undefined;\r\n  };\r\n\r\n  return call as IApiCall<TParams, TBody, TResponse>;\r\n};\r\n\r\nexport const apiClient = new ApiClient();","import { apiClient } from \"./ApiClient\";\r\n\r\nexport const createRemoteService = <TService>(serviceName: string, moduleName: string): TService => {\r\n  const proxy = new Proxy({}, {\r\n    get: (target, prop: string) => {\r\n      return async (...args: any[]) => {\r\n        const response = await apiClient.callServiceMethod(undefined, { serviceName, moduleName, methodName: prop, args });\r\n        console.log('get ' + moduleName + '.' + serviceName + '.' + prop, { args, response });\r\n        if (response.error) {\r\n          throw new Error(response.error);\r\n        }\r\n        return response.result;\r\n      }\r\n    }\r\n  });\r\n  return proxy as TService;\r\n}","import { BrowserModuleContext, initModuleContext, initSettings } from './BrowserModuleContext';\r\n\r\nconst obj = {\r\n    init: async () => {\r\n        await initModuleContext();\r\n        // internal module\r\n        obj.instance = new BrowserModuleContext('reactron');\r\n        await initSettings();\r\n    },\r\n    instance: undefined as unknown as BrowserModuleContext\r\n};\r\n\r\nexport default obj;","import * as SvgIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport classname from 'classnames';\r\nimport * as React from 'react';\r\nimport { ILoadingProps } from './ILoadingProps';\r\n\r\nimport './Loading.scss';\r\n\r\nexport default class Loading extends React.Component<ILoadingProps> {\r\n  public static defaultProps: Partial<ILoadingProps> = {\r\n    iconSize: \"4x\"\r\n  };\r\n\r\n  public render() {\r\n    return (\r\n      <section className={classname('Loading', { 'center': this.props.center })}>\r\n        <FontAwesome.FontAwesomeIcon icon={SvgIcons.faSpinner} size={this.props.iconSize} spin={true} />\r\n        {this.props.text && (\r\n          <div className=\"text\">{this.props.text}</div>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { IRoundButtonProps } from './IRoundButtonProps';\r\nimport './RoundButton.scss';\r\n\r\nexport default class RoundButton extends React.Component<IRoundButtonProps> {\r\n  public render() {\r\n    return <Link className=\"RoundButton\" to={this.props.to} role=\"button\">{this.props.children}</Link>;\r\n  }\r\n}\r\n","import * as SvgIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport RoundButton from '../RoundButton/RoundButton';\r\nimport { IPageNotFoundProps } from './IPageNotFoundProps';\r\n\r\nimport './PageNotFound.scss'\r\n\r\nexport default class PageNotFound extends React.Component<IPageNotFoundProps> {\r\n  public render() {\r\n    return (\r\n      <div className=\"PageNotFound\">\r\n        <h1><FontAwesome.FontAwesomeIcon icon={SvgIcons.faQuestionCircle} /> 404</h1>\r\n        <h2>No page defined for path: {this.props.location.pathname}</h2>\r\n        <RoundButton to=\"/admin\">\r\n          <FontAwesome.FontAwesomeIcon icon={SvgIcons.faCog} /> Admin\r\n        </RoundButton>\r\n        <RoundButton to=\"/\">\r\n          <FontAwesome.FontAwesomeIcon icon={SvgIcons.faHome} /> Home\r\n        </RoundButton>\r\n      </div >\r\n    );\r\n  }\r\n}","import * as React from 'react';\r\nimport { IReactronComponentDefinition, IInputComponentProps } from \"@schirkan/reactron-interfaces\";\r\nimport CarouselLayout from \"./CarouselLayout\";\r\nimport { CarouselProps } from 'react-responsive-carousel';\r\nimport { ICarouselLayoutOptions } from './ICarouselLayoutOptions';\r\n\r\nexport const carouselLayoutDefinition: IReactronComponentDefinition<ICarouselLayoutOptions> = {\r\n  component: CarouselLayout,\r\n  description: 'Carousel Layout',\r\n  displayName: 'Carousel Layout',\r\n  name: 'CarouselLayout',\r\n  type: 'layout',\r\n  fields: [\r\n    {\r\n      displayName: 'Options', name: 'options', valueType: 'object', fields: [\r\n        { displayName: 'Interval in ms', name: 'interval', valueType: 'number', defaultValue: 5000, minValue: 1000, stepSize: 50 },\r\n        { displayName: 'Transition Time in ms', name: 'transitionTime', valueType: 'number', defaultValue: 500, minValue: 100, stepSize: 50 },\r\n        { displayName: 'Show Indicators', name: 'showIndicators', valueType: 'boolean', defaultValue: true },\r\n        { displayName: 'Show Arrows', name: 'showArrows', valueType: 'boolean', defaultValue: false },\r\n        { displayName: 'Show Status', name: 'showStatus', valueType: 'boolean', defaultValue: false },\r\n        { displayName: 'Center Mode', name: 'centerMode', valueType: 'boolean', defaultValue: false },\r\n        { displayName: 'Center Slide Percentage', name: 'centerSlidePercentage', valueType: 'number', defaultValue: 70, minValue: 1, maxValue: 100, stepSize: 1 },\r\n        { displayName: 'Axis', name: 'axis', valueType: 'boolean', defaultValue: 'horizontal', values: [{ value: 'horizontal', text: 'horizontal' }, { value: 'vertical', text: 'vertical' }] },\r\n      ],\r\n      inputControl: (props: IInputComponentProps<CarouselProps>) => {\r\n        const interval = props.value && props.value.interval;\r\n        return <span>interval {interval} ms</span>;\r\n      }\r\n    },\r\n    { displayName: 'Content', name: 'items', valueType: 'webComponent', isArray: true },\r\n    { displayName: 'Carousel Style', name: 'style', valueType: 'style' },\r\n  ]\r\n};","import * as React from 'react';\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport { ICarouselLayoutOptions } from './ICarouselLayoutOptions';\r\nimport { IReactronComponentContext } from '@schirkan/reactron-interfaces';\r\n\r\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\r\nimport './CarouselLayout.scss';\r\n\r\nexport default class CarouselLayout extends React.Component<ICarouselLayoutOptions> {\r\n  public context!: IReactronComponentContext;\r\n\r\n  public render() {\r\n    return (\r\n      <section className=\"CarouselLayout\" style={this.props.style}>\r\n        <Carousel autoPlay={true} infiniteLoop={true} showThumbs={false} showArrows={false} showStatus={false} {...this.props.options}>\r\n          {this.props.items.map(id => this.context.renderComponent({ id }))}\r\n        </Carousel>\r\n      </section>\r\n    );\r\n  }\r\n}","import { IReactronComponentDefinition, IInputComponentProps } from \"@schirkan/reactron-interfaces\";\r\nimport GridLayout from \"./GridLayout\";\r\nimport * as React from 'react';\r\nimport { IGridLayoutTileOptions } from \"./IGridLayoutTileOptions\";\r\n\r\nexport const gridLayoutDefinition: IReactronComponentDefinition = {\r\n  component: GridLayout,\r\n  description: 'Grid Layout',\r\n  displayName: 'Grid Layout',\r\n  name: 'GridLayout',\r\n  type: 'layout',\r\n  fields: [\r\n    { displayName: 'Grid Style', name: 'gridStyle', valueType: 'style' },\r\n    { displayName: 'Tile Style', name: 'tileStyle', valueType: 'style' },\r\n    {\r\n      displayName: 'Grid tiles',\r\n      name: 'tiles',\r\n      valueType: 'object',\r\n      isArray: true,\r\n      fields: [\r\n        { displayName: 'Row', name: 'row', valueType: 'number', defaultValue: 1, stepSize: 1, minValue: 1, maxValue: 20 },\r\n        { displayName: 'Column', name: 'col', valueType: 'number', defaultValue: 1, stepSize: 1, minValue: 1, maxValue: 20 },\r\n        { displayName: 'Row span', name: 'rowspan', valueType: 'number', defaultValue: 1, stepSize: 1, minValue: 1, maxValue: 20 },\r\n        { displayName: 'Column span', name: 'colspan', valueType: 'number', defaultValue: 1, stepSize: 1, minValue: 1, maxValue: 20 },\r\n        { displayName: 'Content', name: 'content', valueType: 'webComponent' },\r\n        { displayName: 'Style', name: 'style', valueType: 'style' }\r\n      ],\r\n      inputControl: (props: IInputComponentProps<IGridLayoutTileOptions>) => {\r\n        const tile = props.value || {};\r\n        const style = { width: '100%', textOverflow: 'ellipsis', overflow: 'hidden' };\r\n        return (<div style={style}>[ {tile.row} | {tile.col} | {tile.content} ]</div>);\r\n      }\r\n    }\r\n  ]\r\n};","import * as React from 'react';\r\nimport { IGridLayoutOptions, IGridLayoutTileOptions } from './IGridLayoutTileOptions';\r\nimport { IReactronComponentContext } from '@schirkan/reactron-interfaces';\r\n\r\nimport './GridLayout.scss';\r\n\r\nexport default class GridLayout extends React.Component<IGridLayoutOptions> {\r\n  public context!: IReactronComponentContext;\r\n  \r\n  constructor(props: IGridLayoutOptions) {\r\n    super(props);\r\n\r\n    this.renderTile = this.renderTile.bind(this);\r\n  }\r\n\r\n  private renderTile(tile: IGridLayoutTileOptions, index: number) {\r\n    const style = { ...this.props.tileStyle, ...tile.style };\r\n    style.gridColumn = tile.col.toString();\r\n    if (tile.colspan > 1) {\r\n      style.gridColumn += ' / span ' + tile.colspan;\r\n    }\r\n\r\n    style.gridRow = tile.row.toString();\r\n    if (tile.rowspan > 1) {\r\n      style.gridRow += ' / span ' + tile.rowspan;\r\n    }\r\n    return (\r\n      <div className=\"GridTile\" key={index} style={style}>\r\n        {this.context.renderComponent({ id: tile.content })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <section className=\"GridLayout\" style={this.props.gridStyle}>\r\n        {this.props.tiles.map(this.renderTile)}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport IFrame from \"./IFrame\";\r\n\r\nexport const iFrameDefinition: IReactronComponentDefinition = {\r\n    component: IFrame,\r\n    description: 'IFrame Component',\r\n    displayName: 'IFrame',\r\n    name: 'IFrame',\r\n    fields: [\r\n        { displayName: 'URL', name: 'url', valueType: 'string' }\r\n    ]\r\n};","import * as React from 'react';\r\nimport { IIFrameOptions } from './IIFrameOptions';\r\n\r\nimport './IFrame.scss';\r\n\r\nexport default class IFrame extends React.Component<IIFrameOptions> {\r\n  public render() {\r\n    return <iframe className=\"ui-iframe\" src={this.props.url} />;\r\n  }\r\n}\r\n","import { IReactronComponentDefinition, IInputComponentProps } from \"@schirkan/reactron-interfaces\";\r\nimport ListLayout from \"./ListLayout\";\r\nimport * as React from 'react';\r\nimport { IListLayoutItemOptions } from \"./IListLayoutItemOptions\";\r\n\r\nexport const listLayoutDefinition: IReactronComponentDefinition = {\r\n  component: ListLayout,\r\n  description: 'List Layout',\r\n  displayName: 'List Layout',\r\n  name: 'ListLayout',\r\n  type: 'layout',\r\n  fields: [\r\n    { displayName: 'List Style', name: 'listStyle', valueType: 'style' },\r\n    { displayName: 'Item Style', name: 'itemStyle', valueType: 'style' },\r\n    {\r\n      displayName: 'List items',\r\n      name: 'items',\r\n      valueType: 'object',\r\n      isArray: true,\r\n      fields: [\r\n        { displayName: 'Content', name: 'content', valueType: 'webComponent' },\r\n        { displayName: 'Style', name: 'style', valueType: 'style' }\r\n      ],\r\n      inputControl: (props: IInputComponentProps<IListLayoutItemOptions>) => {\r\n        const item = props.value || {};\r\n        const style = { width: '100%', textOverflow: 'ellipsis', overflow: 'hidden' };\r\n        return (<div style={style}>[ {item.content} ]</div>);\r\n      }\r\n    }\r\n  ]\r\n};","import * as React from 'react';\r\nimport { IListLayoutItemOptions } from \"./IListLayoutItemOptions\";\r\nimport { IListLayoutOptions } from \"./IListLayoutOptions\";\r\nimport { IReactronComponentContext } from '@schirkan/reactron-interfaces';\r\n\r\nimport './ListLayout.scss';\r\n\r\nexport default class ListLayout extends React.Component<IListLayoutOptions> {\r\n  public context!: IReactronComponentContext;\r\n\r\n  constructor(props: IListLayoutOptions) {\r\n    super(props);\r\n\r\n    this.renderListItem = this.renderListItem.bind(this);\r\n  }\r\n\r\n  private renderListItem(item: IListLayoutItemOptions, index: number) {\r\n    const style = { ...this.props.itemStyle, ...item.style };\r\n\r\n    return (\r\n      <div className=\"ListItem\" key={index} style={style}>\r\n        {this.context.renderComponent({ id: item.content })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <section className=\"ListLayout\">\r\n        {this.props.items.map(this.renderListItem)}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport MarkDown from \"./MarkDown\";\r\n\r\nexport const markDownDefinition: IReactronComponentDefinition = {\r\n  component: MarkDown,\r\n  description: 'MarkDown Component',\r\n  displayName: 'MarkDown',\r\n  name: 'MarkDown',\r\n  fields: [\r\n    { displayName: 'Text', name: 'text', valueType: 'string', textRows: 10 },\r\n    { displayName: 'Style', name: 'style', valueType: 'style' }\r\n  ]\r\n};","import * as React from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport { IMarkDownOptions } from './IMarkDownOptions';\r\n\r\nimport './MarkDown.scss';\r\n\r\nexport default class MarkDown extends React.Component<IMarkDownOptions> {\r\n  public render() {\r\n    return (\r\n      <section className=\"MarkDown\" style={this.props.style}>\r\n        <ReactMarkdown source={this.props.text} />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport Notifications from \"./Notifications\";\r\n\r\nexport const notificationsDefinition: IReactronComponentDefinition = {\r\n    component: Notifications,\r\n    description: 'Notifications',\r\n    displayName: 'Notifications',\r\n    name: 'Notifications',\r\n    fields: []\r\n};","import * as React from 'react';\r\n\r\nimport './Notifications.scss';\r\n\r\nexport default class Notifications extends React.Component<any, any> {\r\n  constructor(props: any) {\r\n    super(props);\r\n  }\r\n\r\n  public render() {\r\n    return <section className=\"Notifications\">Notifications</section>;\r\n  }\r\n}\r\n","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport { carouselLayoutDefinition } from \"./CarouselLayout/CarouselLayoutDefinition\";\r\nimport { gridLayoutDefinition } from \"./GridLayout/GridLayoutDefinition\";\r\nimport { iFrameDefinition } from \"./IFrame/IFrameDefinition\";\r\nimport { listLayoutDefinition } from \"./ListLayout/ListLayoutDefinition\";\r\nimport { markDownDefinition } from \"./MarkDown/MarkDownDefinition\";\r\nimport { notificationsDefinition } from \"./Notifications/NotificationsDefinition\";\r\nimport { welcomeDefinition } from \"./Welcome/WelcomeDefinition\";\r\n\r\nexport const components: IReactronComponentDefinition[] = [\r\n    listLayoutDefinition,\r\n    carouselLayoutDefinition,\r\n    gridLayoutDefinition,\r\n    welcomeDefinition,\r\n    markDownDefinition,\r\n    notificationsDefinition,\r\n    iFrameDefinition\r\n];","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport Welcome from \"./Welcome\";\r\n\r\nexport const welcomeDefinition: IReactronComponentDefinition = {\r\n    component: Welcome,\r\n    description: 'Welcome Component',\r\n    displayName: 'Welcome',\r\n    name: 'Welcome',\r\n    fields: []\r\n};","import * as SvgIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport { IServerInfo } from '@schirkan/reactron-interfaces';\r\nimport * as React from 'react';\r\nimport { apiClient } from '../../ApiClient';\r\nimport RoundButton from '../../components/RoundButton/RoundButton';\r\nimport logo from './logo.svg';\r\n\r\nimport './Welcome.scss';\r\n\r\ninterface IWelcomeState {\r\n  info?: IServerInfo;\r\n}\r\n\r\nexport default class Welcome extends React.Component<any, IWelcomeState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  public componentDidMount() {\r\n    apiClient.getServerInfo().then(info => {\r\n      this.setState({ info });\r\n    });\r\n  }\r\n\r\n  public render() {\r\n    let info;\r\n\r\n    if (this.state.info) {\r\n      info = (<div className=\"info\">\r\n        To edit this page click Admin-Button or visit<br /><br />\r\n        <i>http://{this.state.info.ip}:3000/admin</i>\r\n      </div>);\r\n    }\r\n    return (\r\n      <section className=\"Welcome\">\r\n        <RoundButton to=\"/admin\">\r\n          <FontAwesome.FontAwesomeIcon icon={SvgIcons.faCog} />\r\n          Admin\r\n        </RoundButton>\r\n        <img src={logo} className=\"logo\" alt=\"logo\" />\r\n        <div className=\"title\">Welcome to Reactron</div>\r\n        {info}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import * as SvgCore from '@fortawesome/fontawesome-svg-core';\r\nimport * as BrandIcons from '@fortawesome/free-brands-svg-icons';\r\nimport * as RegularIcons from '@fortawesome/free-regular-svg-icons';\r\nimport * as SolidIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport { IComponentLoader, IModuleRepositoryItem, IReactronComponentDefinition } from '@schirkan/reactron-interfaces';\r\nimport * as reactronInterfaces from '@schirkan/reactron-interfaces';\r\nimport moment from 'moment';\r\nimport momentTimezone from 'moment-timezone';\r\nimport numeral from 'numeral';\r\nimport * as React from 'react';\r\nimport * as ReactDom from 'react-dom';\r\nimport * as ReactRouterDom from 'react-router-dom';\r\nimport { apiClient } from './ApiClient';\r\nimport { components as internalComponents } from './internalModule';\r\n\r\n// tslint:disable:no-string-literal\r\n\r\nconst SystemJS = (window as any).System as SystemJSLoader.System;\r\n\r\nconst externalModules = {};\r\nexternalModules['react'] = React;\r\nexternalModules['react-dom'] = ReactDom;\r\nexternalModules['react-router-dom'] = ReactRouterDom;\r\nexternalModules['numeral'] = { default: numeral };\r\nexternalModules['moment'] = { default: moment };\r\nexternalModules['moment-timezone'] = { default: momentTimezone };\r\nexternalModules['@fortawesome/fontawesome-svg-core'] = SvgCore;\r\nexternalModules['@fortawesome/free-solid-svg-icons'] = SolidIcons;\r\nexternalModules['@fortawesome/free-regular-svg-icons'] = RegularIcons;\r\nexternalModules['@fortawesome/free-brands-svg-icons'] = BrandIcons;\r\nexternalModules['@fortawesome/react-fontawesome'] = FontAwesome;\r\nexternalModules['@schirkan/reactron-interfaces'] = reactronInterfaces;\r\n\r\nif ((window as any).require) {\r\n  externalModules['electron'] = (window as any).require('electron');\r\n}\r\n\r\nObject.keys(externalModules).forEach(key => {\r\n  const moduleExport = externalModules[key];\r\n  SystemJS.register(key, [], exports => ({ execute: () => exports(moduleExport) }));\r\n});\r\n\r\nexport class ComponentLoader implements IComponentLoader {\r\n  private allComponentsLoaded = false;\r\n  private moduleComponents: { [moduleName: string]: IReactronComponentDefinition[] } = {\r\n    'reactron': internalComponents\r\n  };\r\n\r\n  public async getModuleComponents(moduleName: string): Promise<IReactronComponentDefinition[] | undefined> {\r\n    if (!this.moduleComponents[moduleName]) {\r\n      const modules = await apiClient.getModules();\r\n      const m = modules.find(x => x.name === moduleName);\r\n\r\n      if (!m) {\r\n        console.error('Module not found: ' + moduleName);\r\n        return;\r\n      }\r\n\r\n      await this.registerModuleComponents(m);\r\n    }\r\n\r\n    return this.moduleComponents[moduleName];\r\n  }\r\n\r\n  private async registerModuleComponents(m: IModuleRepositoryItem): Promise<void> {\r\n    if (!m.browserFile) {\r\n      console.log('Module has no browserFile: ' + m.name);\r\n      return;\r\n    }\r\n\r\n    if (this.moduleComponents[m.name]) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      console.log(m.browserFile);\r\n\r\n      const browserFileContent = await SystemJS.import('\\\\' + m.browserFile);\r\n      // tslint:disable-next-line:no-string-literal\r\n      const components = browserFileContent['components'];\r\n\r\n      if (components && typeof components === 'object' && Array.isArray(components)) {\r\n        this.moduleComponents[m.name] = components;\r\n      }\r\n      console.log('Components loaded for module: ' + m.name);\r\n    } catch (error) {\r\n      console.error('Error loading components for module: ' + m.name, error);\r\n    }\r\n  }\r\n\r\n  public async getAllComponents(): Promise<{ [moduleName: string]: IReactronComponentDefinition[] }> {\r\n    if (this.allComponentsLoaded) {\r\n      return this.moduleComponents;\r\n    }\r\n    const modules = await apiClient.getModules();\r\n    for (const m of modules) {\r\n      await this.registerModuleComponents(m);\r\n    }\r\n    this.allComponentsLoaded = true;\r\n    return this.moduleComponents;\r\n  }\r\n}\r\n\r\nexport const componentLoader = new ComponentLoader();","import { ILogWriter, IPubSub, topicNames, Severity } from \"@schirkan/reactron-interfaces\";\r\n\r\nexport class LogWriter implements ILogWriter {\r\n  constructor(private topics: IPubSub, public readonly source: string) { }\r\n\r\n  private log(severity: Severity, message: string, data?: any): void {\r\n    this.topics && this.topics.publish(topicNames.log, { source: this.source, severity, message, data });\r\n  }\r\n\r\n  public error(message: string, data?: any): void {\r\n    this.log('error', message, data);\r\n  }\r\n\r\n  public warning(message: string, data?: any): void {\r\n    this.log('warning', message, data);\r\n  }\r\n\r\n  public info(message: string, data?: any): void {\r\n    this.log('information', message, data);\r\n  }\r\n\r\n  public debug(message: string, data?: any): void {\r\n    this.log('debug', message, data);\r\n  }\r\n}","import { SizeProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { IReactronComponentContext, ILogWriter } from '@schirkan/reactron-interfaces';\r\nimport React from 'react';\r\nimport { BrowserModuleContext } from \"./BrowserModuleContext\";\r\nimport { componentLoader } from './ComponentLoader';\r\nimport Loading from \"./components/Loading/Loading\";\r\nimport WebComponent, { IWebComponentProps } from \"./components/WebComponent/WebComponent\";\r\nimport { LogWriter } from '../common/LogWriter';\r\n\r\nexport class WebComponentContext extends BrowserModuleContext implements IReactronComponentContext {\r\n  public renderLoading: (text?: string, iconSize?: SizeProp) => any;\r\n  public renderComponent: (props: IWebComponentProps) => any;\r\n  public readonly componentLoader = componentLoader;\r\n  public readonly log: ILogWriter;\r\n\r\n  constructor(moduleName: string, public readonly componentName: string) {\r\n    super(moduleName);\r\n\r\n    this.renderComponent = (props: IWebComponentProps) => {\r\n      const key = props.id + '.' + props.moduleName + '.' + props.componentName;\r\n      return <WebComponent {...props} key={key} />;\r\n    };\r\n\r\n    this.renderLoading = (text?: string, iconSize?: SizeProp) => {\r\n      return <Loading text={text} iconSize={iconSize} />;\r\n    };\r\n\r\n    this.log = new LogWriter(this.backendService && this.backendService.topics, moduleName + '.' + componentName);\r\n  }\r\n}\r\n\r\nexport const WebComponentContextType = React.createContext<IReactronComponentContext>(new WebComponentContext('', ''));","import * as SvgIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport RoundButton from '../RoundButton/RoundButton';\r\nimport { IComponentNotFoundProps } from './IComponentNotFoundProps';\r\n\r\nimport './ComponentNotFound.scss';\r\n\r\nexport default class ComponentNotFound extends React.Component<IComponentNotFoundProps> {\r\n  public static defaultProps: Partial<IComponentNotFoundProps> = {\r\n    iconSize: \"4x\"\r\n  };\r\n\r\n  public render() {\r\n    const text = [];\r\n    if (this.props.id) {\r\n      text.push('Id: ' + this.props.id);\r\n    }\r\n    if (this.props.componentName) {\r\n      text.push('Component: ' + this.props.componentName);\r\n    }\r\n    if (this.props.moduleName) {\r\n      text.push('Module: ' + this.props.moduleName);\r\n    }\r\n\r\n    return (\r\n      <section className=\"ComponentNotFound\">\r\n        <FontAwesome.FontAwesomeIcon icon={SvgIcons.faExclamationTriangle} size={this.props.iconSize} />\r\n        <div className=\"text\">Component not found: {text.join(' | ')}</div>\r\n        <RoundButton to=\"/admin\">\r\n          <FontAwesome.FontAwesomeIcon icon={SvgIcons.faCog} /> Admin\r\n        </RoundButton>\r\n      </section>\r\n    );\r\n  }\r\n}","import * as React from 'react';\r\n\r\ninterface IErrorBoundaryState {\r\n  error: any;\r\n}\r\n\r\nexport default class ErrorBoundary extends React.Component<any, IErrorBoundaryState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = { error: null };\r\n  }\r\n\r\n  public componentDidCatch(error: any, info: any) {\r\n    console.log(error);\r\n    console.log(info);\r\n    this.setState({ error });\r\n  }\r\n\r\n  public render() {\r\n    if (this.state.error) {\r\n      return <span style={{ color: 'red' }}>Something went wrong.</span>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}","import { IExtraWebComponentProps, IReactronComponentContext, IReactronComponentDefinition, IWebComponentOptions } from '@schirkan/reactron-interfaces';\r\nimport classname from 'classnames';\r\nimport * as React from 'react';\r\nimport { apiClient } from '../../ApiClient';\r\nimport { componentLoader } from '../../ComponentLoader';\r\nimport { WebComponentContext } from '../../WebComponentContext';\r\nimport { WebComponentContextType } from '../../WebComponentContext';\r\nimport ComponentNotFound from '../ComponentNotFound/ComponentNotFound';\r\nimport ErrorBoundary from '../ErrorBoundary/ErrorBoundary';\r\nimport Loading from '../Loading/Loading';\r\n\r\nimport './WebComponent.scss';\r\n\r\nexport interface IWebComponentProps extends Partial<IWebComponentOptions>, IExtraWebComponentProps {\r\n}\r\n\r\ninterface IWebComponentState {\r\n  componentFound?: boolean;\r\n  componentContext?: IReactronComponentContext;\r\n  componentDefinition?: IReactronComponentDefinition;\r\n  componentOptions?: IWebComponentOptions;\r\n}\r\n\r\nexport default class WebComponent extends React.Component<IWebComponentProps, IWebComponentState> {\r\n  constructor(props: IWebComponentProps) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: IWebComponentProps) {\r\n    if (this.props.id !== prevProps.id ||\r\n      this.props.moduleName !== prevProps.moduleName ||\r\n      this.props.componentName !== prevProps.componentName ||\r\n      this.props.options !== prevProps.options) {\r\n      this.loadComponent();\r\n    }\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this.loadComponent();\r\n  }\r\n\r\n  private async loadComponent() {\r\n    try {\r\n      let webComponentOptions: IWebComponentOptions | undefined;\r\n\r\n      if (this.props.id) {\r\n        // nur mit der ID lesen\r\n        const allComponentOptions = await apiClient.getWebComponentOptions();\r\n        webComponentOptions = allComponentOptions.find(x => x.id === this.props.id);\r\n      } else if (this.props.moduleName && this.props.componentName) {\r\n        webComponentOptions = {\r\n          id: '',\r\n          parentId: '',\r\n          moduleName: this.props.moduleName,\r\n          componentName: this.props.componentName,\r\n          options: this.props.options,\r\n        };\r\n      }\r\n\r\n      if (!webComponentOptions) {\r\n        this.setState({ componentFound: false });\r\n        return;\r\n      }\r\n\r\n      const moduleComponents = await componentLoader.getModuleComponents(webComponentOptions.moduleName);\r\n      if (!moduleComponents) {\r\n        this.setState({ componentFound: false });\r\n        return;\r\n      }\r\n\r\n      const componentName = webComponentOptions.componentName;\r\n      const componentDefinition = moduleComponents.find(x => x.name === componentName);\r\n      if (!componentDefinition || !componentDefinition.component) {\r\n        this.setState({ componentFound: false });\r\n        return;\r\n      }\r\n\r\n      this.setState({\r\n        componentContext: new WebComponentContext(webComponentOptions.moduleName, webComponentOptions.componentName),\r\n        componentDefinition,\r\n        componentOptions: webComponentOptions,\r\n        componentFound: true\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      this.setState({ componentFound: false });\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    let content = <Loading center={true} />;\r\n\r\n    if (this.state.componentFound === false) {\r\n      content = <ComponentNotFound {...this.props} />;\r\n    }\r\n\r\n    if (this.state.componentDefinition && this.state.componentDefinition.component && this.state.componentContext) {\r\n      const Component = this.state.componentDefinition.component as typeof React.Component;\r\n\r\n      // set contextType\r\n      if (!Component.contextType) {\r\n        Component.contextType = WebComponentContextType;\r\n      }\r\n\r\n      const props = this.state.componentOptions && this.state.componentOptions.options || {};\r\n\r\n      // render context and component\r\n      content = (\r\n        <WebComponentContextType.Provider value={this.state.componentContext}>\r\n          <Component {...props} />\r\n        </WebComponentContextType.Provider>\r\n      );\r\n    }\r\n\r\n    const className = classname(\"WebComponent\", this.props.className);\r\n\r\n    return (\r\n      <section className={className} style={this.props.style}>\r\n        <ErrorBoundary>\r\n          {content}\r\n        </ErrorBoundary>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import { IWebPageOptions, topicNames } from '@schirkan/reactron-interfaces';\r\nimport moment from 'moment';\r\nimport numeral from 'numeral';\r\nimport * as React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport inernalModuleContext from '../../inernalModuleContext';\r\nimport { apiClient } from '../../ApiClient';\r\nimport Loading from '../Loading/Loading';\r\nimport PageNotFound from '../PageNotFound/PageNotFound';\r\nimport WebComponent from '../WebComponent/WebComponent';\r\n\r\n// load moment & numeral locales\r\nimport 'moment/min/locales.min';\r\nimport 'numeral/min/locales.min';\r\n\r\nimport './App.scss';\r\n\r\nexport interface IAppState {\r\n  pages?: IWebPageOptions[];\r\n}\r\n\r\nexport default class App extends React.Component<any, IAppState> {\r\n  private reloadTimer: number | undefined;\r\n  private reloadWait: number = 2000;\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {};\r\n    this.reload = this.reload.bind(this);\r\n    this.triggerReload = this.triggerReload.bind(this);\r\n    this.onKeyDown = this.onKeyDown.bind(this);\r\n  }\r\n\r\n  public async componentDidMount() {\r\n    await this.init();\r\n    this.subscribeTopics();\r\n    document.addEventListener('keydown', this.onKeyDown);\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    this.unsubscribeTopics();\r\n    document.removeEventListener('keydown', this.onKeyDown);\r\n  }\r\n\r\n  private onKeyDown(e: KeyboardEvent) {\r\n    const evtobj = window.event ? window.event as KeyboardEvent : e;\r\n    if (evtobj.keyCode === 65 && evtobj.ctrlKey && evtobj.altKey) {\r\n      window.location.href = '/admin';\r\n    }\r\n  }\r\n\r\n  private subscribeTopics() {\r\n    // register page/component change event\r\n    if (inernalModuleContext.instance.topics) {\r\n      inernalModuleContext.instance.topics.subscribe(topicNames.pagesUpdated, this.triggerReload);\r\n      inernalModuleContext.instance.topics.subscribe(topicNames.componentsUpdated, this.triggerReload);\r\n      inernalModuleContext.instance.topics.subscribe(topicNames.systemSettingsUpdated, this.triggerReload);\r\n    }\r\n  }\r\n\r\n  private unsubscribeTopics() {\r\n    if (inernalModuleContext.instance.topics) {\r\n      inernalModuleContext.instance.topics.unsubscribe(topicNames.pagesUpdated, this.triggerReload);\r\n      inernalModuleContext.instance.topics.unsubscribe(topicNames.componentsUpdated, this.triggerReload);\r\n      inernalModuleContext.instance.topics.unsubscribe(topicNames.systemSettingsUpdated, this.triggerReload);\r\n    }\r\n  }\r\n\r\n  private async init() {\r\n    // init inernalModuleContext\r\n    await inernalModuleContext.init();\r\n\r\n    // load settings\r\n    moment.locale(inernalModuleContext.instance.settings.lang);\r\n    numeral.locale(inernalModuleContext.instance.settings.lang);\r\n\r\n    // load pages\r\n    const pages = await apiClient.getWebPages();\r\n    return this.setState({ pages });\r\n  }\r\n\r\n  private triggerReload() {\r\n    window.clearTimeout(this.reloadTimer);\r\n    this.reloadTimer = window.setTimeout(this.reload, this.reloadWait);\r\n  }\r\n\r\n  private reload() {\r\n    console.log('reload');\r\n    apiClient.clearCache();\r\n    this.init();\r\n  }\r\n\r\n  public renderPage(id: string, style: any) {\r\n    return () => (\r\n      <section className=\"WebPage\" style={style}>\r\n        <WebComponent id={id} />\r\n      </section>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    let content = <Loading text=\"Loading Reactron...\" center={true} />;\r\n\r\n    if (this.state.pages) {\r\n      content = (\r\n        <Router>\r\n          <Switch>\r\n            {this.state.pages.map(item =>\r\n              (<Route key={item.path} path={item.path} exact={item.path === '/'} component={this.renderPage(item.webComponentId, item.style)} />)\r\n            )}\r\n            <Route component={PageNotFound} />\r\n          </Switch>\r\n        </Router>\r\n      );\r\n    }\r\n\r\n    return <section className=\"App\">{content}</section>;\r\n  }\r\n}\r\n","// main entry file for react\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport App from './browser/components/App/App';\r\nimport ErrorBoundary from './browser/components/ErrorBoundary/ErrorBoundary';\r\n\r\nimport './index.scss';\r\n\r\nReactDOM.render(\r\n  <ErrorBoundary><App /></ErrorBoundary>,\r\n  document.getElementById('root') as HTMLElement\r\n);","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";"],"sourceRoot":""}