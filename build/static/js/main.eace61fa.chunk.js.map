{"version":3,"sources":["browser/BrowserModuleContext.ts","browser/inernalModuleContext.ts","common/apiRoutes.ts","browser/ApiClient.ts","browser/components/RoundButton/RoundButton.tsx","browser/components/Loading/Loading.tsx","browser/components/Admin/UiFlowLayout/UiFlowLayout.tsx","browser/components/Admin/UiCard/UiCard.tsx","browser/components/Admin/UiCardContent/UiCardContent.tsx","browser/components/Admin/UiCardTitle/UiCardTitle.tsx","browser/components/Admin/UiLoadingCard/UiLoadingCard.tsx","browser/components/Admin/UiOverlay/OverlayManager.ts","browser/components/Admin/UiOverlay/UiOverlay.tsx","browser/components/Admin/UiButton/UiButton.tsx","browser/components/Admin/ModuleManagerPage/AddModuleCard/AddModuleCard.tsx","browser/components/Admin/ModuleManagerPage/CommandResult/CommandResult.tsx","browser/components/Admin/UiCardButtonRow/UiCardButtonRow.tsx","browser/components/Admin/ModuleManagerPage/ModuleCard/ModuleCard.tsx","browser/components/Admin/ModuleManagerPage/UpdateModulesCard/UpdateModulesCard.tsx","browser/components/Admin/ModuleManagerPage/ModuleManagerPage.tsx","browser/components/Admin/Navigation/Navigation.tsx","common/optionsHelper.ts","browser/components/Admin/OptionItem/ArrayForm/ArrayForm.tsx","browser/components/Admin/OptionItem/StyleForm/StyleForm.tsx","browser/internalModule/CarouselLayout/CarouselLayoutDefinition.tsx","browser/internalModule/CarouselLayout/CarouselLayout.tsx","browser/internalModule/GridLayout/GridLayoutDefinition.tsx","browser/internalModule/GridLayout/GridLayout.tsx","browser/internalModule/IFrame/IFrameDefinition.tsx","browser/internalModule/IFrame/IFrame.tsx","browser/internalModule/ListLayout/ListLayoutDefinition.tsx","browser/internalModule/ListLayout/ListLayout.tsx","browser/internalModule/MarkDown/MarkDownDefinition.tsx","browser/internalModule/MarkDown/MarkDown.tsx","browser/internalModule/Notifications/NotificationsDefinition.tsx","browser/internalModule/Notifications/Notifications.tsx","browser/internalModule/index.ts","browser/internalModule/Welcome/WelcomeDefinition.tsx","browser/internalModule/Welcome/Welcome.tsx","browser/ComponentLoader.ts","browser/components/Admin/OptionCard/SimpleEvent.ts","browser/components/Admin/OptionCard/OptionCardContext.ts","browser/components/Admin/OptionItem/WebComponentForm/WebComponentForm.tsx","browser/components/Admin/OptionItem/OptionItem.tsx","browser/components/Admin/OptionList/OptionList.tsx","browser/components/Admin/OptionCard/OptionCard.tsx","browser/components/Admin/PageManagerPage/PageCard/PageCard.tsx","browser/components/Admin/PageManagerPage/pageOptionsFields.tsx","browser/components/Admin/PageManagerPage/PageManagerPage.tsx","browser/components/Admin/ServiceManagerPage/ServiceCard/ServiceCard.tsx","browser/components/Admin/ServiceManagerPage/ServiceGroup/ServiceGroup.tsx","browser/components/Admin/ServiceManagerPage/ServiceManagerPage.tsx","browser/components/Admin/SettingsManagerPage/systemSettingsFields.ts","browser/components/Admin/SettingsManagerPage/SettingsManagerPage.tsx","browser/components/Admin/SystemPage/SystemPage.tsx","browser/components/Admin/Admin.tsx","browser/components/PageNotFound/PageNotFound.tsx","browser/WebComponentContext.tsx","browser/components/ComponentNotFound/ComponentNotFound.tsx","browser/components/ErrorBoundary/ErrorBoundary.tsx","browser/components/WebComponent/WebComponent.tsx","browser/components/App/App.tsx","index.tsx","browser/internalModule/Welcome/logo.svg"],"names":["electron","backendService","topics","Store","window","require","remote","BackendService","instance","moduleStoreCache","serviceCache","BrowserModuleContext","moduleName","_this","this","moduleStoreKey","name","moduleStorage","escapedModuleName","replace","moduleApiPath","getService","serviceName","explicitModuleName","serviceKey","serviceManager","get","console","log","inernalModuleContext","ApiRoute","path","method","routes","getServices","getServiceOptions","setServiceOptions","getModules","addModule","deleteModule","rebuildModule","updateModule","checkUpdates","getWebPages","setWebPage","deleteWebPage","getServerInfo","exitApplication","restartApplication","shutdownSystem","rebootSystem","resetApplication","getSettings","setSettings","getWebComponentOptions","setWebComponentOptions","deleteWebComponentOptions","ApiClient_ApiClient","ApiClient","getAllServices","apiCall","prototype","clearCache","Object","keys","forEach","key","route","cacheResponse","cache","toLocaleLowerCase","call","params","data","Promise","resolve","fetch","body","JSON","stringify","headers","Content-Type","then","response","__awaiter","undefined","text","_a","sent","status","toString","startsWith","parse","Error","apiClient","_super","RoundButton","__extends","render","react","Link","className","to","props","role","children","components_Loading_Loading","Loading","Loading_extends","classnames","center","react_fontawesome_index_es","icon","index_es","size","iconSize","spin","defaultProps","UiFlowLayout","UiFlowLayout_extends","renderChildren","Array","isArray","map","child","index","style","UiCard","UiCard_extends","UiCardContent","UiCardContent_extends","UiCardTitle","UiCardTitle_extends","UiLoadingCard","UiLoadingCard_extends","Admin_UiCard_UiCard","Admin_UiCardTitle_UiCardTitle","Admin_UiCardContent_UiCardContent","overlayManager","OverlayManager","items","add","length","hide","push","remove","indexOf","splice","show","UiOverlay","state","visible","UiOverlay_extends","componentDidMount","componentWillUnmount","setState","hidden","UiButton","disposed","running","onClick","bind","UiButton_extends","e","disabled","preventDefault","bubbles","stopPropagation","catch","AddModuleCard","AddModuleCard_extends","input","ref","el","placeholder","Admin_UiButton_UiButton","onAdd","value","CommandResult","CommandResult_extends","renderCommandResult","result","success","item","i","title","command","args","onClose","results","UiCardButtonRow","UiCardButtonRow_extends","UiCardButtonRowDividerFull","divider","UiCardButtonRowDividerHalf","ModuleCard","showActions","hideActions","onUpdate","onRebuild","onRemove","ModuleCard_extends","module","renderTitle","updateIcon","hasUpdate","renderDescription","description","renderAuthor","authorMail","authorName","author","email","href","renderFooter","repoLink","repository","target","free_brands_svg_icons_index_es","Admin_UiCardButtonRow_UiCardButtonRow","version","renderActions","canBuild","canRemove","UpdateModulesCard","UpdateModulesCard_extends","modulesWithUpdates","modules","filter","x","updatesTitle","some","onCheckUpdates","checkingUpdates","onUpdateAll","ModuleManagerPage","loading","showResult","loadModules","updateAll","removeModule","hideResult","ModuleManagerPage_extends","modulesWithUpdates_1","_i","apply","showError","error_1","error_2","error_3","error_4","trim","error_5","err","message","Admin_UiOverlay_UiOverlay","ModuleManagerPage_CommandResult_CommandResult","Admin_UiFlowLayout_UiFlowLayout","ModuleManagerPage_AddModuleCard_AddModuleCard","ModuleManagerPage_UpdateModulesCard_UpdateModulesCard","onUpdateModule","Admin_UiLoadingCard_UiLoadingCard","ModuleManagerPage_ModuleCard_ModuleCard","Navigation","Navigation_extends","NavLink","activeClassName","getDefaultFieldValue","field","defaultValue","valueType","getDefaultObjectValue","fields","f","ArrayForm","arrayKeys","arrayItemAdd","arrayItemRemove","arrayItemMoveUp","arrayItemMoveDown","ArrayForm_extends","arrayItemChange","definition","newValue","array","slice","valueChange","keyItem","arrayItemDefinition","__assign","renderArrayItem","displayName","v4","Admin_OptionItem_OptionItem","free_regular_svg_icons_index_es","styleProperties","StyleForm","getFields","addField","StyleForm_extends","componentDidUpdate","prevProps","obj","StyleForm_assign","onChange","removeField","fieldName","newPropertySelect","hasOwnProperty","property","carouselLayoutDefinition","component","CarouselLayout","CarouselLayout_extends","gridLayoutDefinition","GridLayout","renderTile","GridLayout_extends","tile","GridLayout_assign","tileStyle","gridColumn","col","colspan","gridRow","row","rowspan","context","renderComponent","id","content","gridStyle","tiles","minValue","iFrameDefinition","IFrame","IFrame_extends","src","url","listLayoutDefinition","ListLayout","renderListItem","ListLayout_extends","ListLayout_assign","itemStyle","markDownDefinition","MarkDown","MarkDown_extends","react_markdown","source","textRows","notificationsDefinition","Notifications","Notifications_extends","components","Welcome","Welcome_extends","info","ip","components_RoundButton_RoundButton","logo_default","a","alt","moment","__webpack_require__","momentTimezone","SystemJS","System","externalModules","react_dom","es","fontawesome_svg_core_index_es","moduleExport","register","exports","execute","componentLoader","ComponentLoader","allComponentsLoaded","moduleComponents","@schirkan/reactron","getModuleComponents","m","find","registerModuleComponents","error","browserFile","import","browserFileContent","getAllComponents","modules_1","SimpleEvent","subscriptions","subscribe","callback","unsubscribe","publish","sub","_b","OptionCardContext_OptionsCardContextData","OptionsCardContextData","onSave","removedWebComponents","changedWebComponents","createdWebComponents","saveWebComponents","_f","_c","_e","_d","webComponentRemoved","createdItemIndex","findIndex","webComponentChanged","webComponentCreated","OptionCardContext","OptionItem_WebComponentForm_WebComponentForm","WebComponentForm","loadingWebComponents","loadingComponentDefinitions","webComponents","componentDefinitions","initCurrentComponent","onOptionsChange","removeWebComponent","onSelectedComponentDefinitionChange","WebComponentForm_extends","defineProperty","loadComponentDefinitions","loadWebComponents","selectedWebComponentOptions","formEvents","webComponentId","key_1","componentName","selectedComponentDefinition","newWebComponentOptions","newKey","currentTarget","currentWebComponentOptions","options","newId","newOptions","WebComponentForm_assign","renderComponentSelection","selectedComponentKey","Admin_OptionList_OptionList","contextType","counter","OptionItem","hasDetails","uniqueId","triggerValueChange","onInputChange","onTextareaChange","onCheckboxChange","onSelectValueChange","toggleItemDetails","OptionItem_extends","renderArray","OptionItem_ArrayForm_ArrayForm","renderObject","checked","renderDropDown","values","renderTextInput","rows","type","renderNumberInput","inputType","maxValue","step","stepSize","min","max","renderBooleanInput","renderStyleInput","OptionItem_StyleForm_StyleForm","renderWebComponentInput","detailsVisible","renderItemHeader","subHeaderText","renderLabel","htmlFor","renderInput","data-isarray","renderInputControl","data-hasdetails","data-detailsvisible","data-valuetype","OptionList","OptionList_extends","OptionList_assign","OptionCard","setDefaultValues","formContext","cancel","save","reset","optionsChange","OptionCard_extends","onCancel","renderContent","Provider","showReset","whiteSpace","PageCard","onEdit","onDelete","PageCard_extends","page","renderPath","pageOptionsFields","PageManagerPage","pages","showPageDetailsDialog","loadPages","savePage","hidePageDetailsDialog","confirmPageDeletion","PageManagerPage_extends","deletePage","selectedPage","confirm","renderPageCards","PageManagerPage_PageCard_PageCard","renderPageAddCard","renderPageDetailsDialog","Admin_OptionCard_OptionCard","ServiceCard","showOptions","showLog","ServiceCard_extends","onShowOptions","service","onShowLog","ServiceGroup","groupOpen","toggleGroup","ServiceGroup_extends","services","ServiceManagerPage_ServiceCard_ServiceCard","onShowServiceLog","onShowServiceOptions","ServiceManagerPage","loadingServices","loadingServiceOptions","selectedService","selectedServiceOptions","closeLog","closeOptions","loadOptions","saveOptions","ServiceManagerPage_extends","loadServices","renderServiceOptionsDialog","renderServiceLogDialog","renderServiceGroups","onlyUnique","ServiceManagerPage_ServiceGroup_ServiceGroup","self","systemSettingsFields","SettingsManagerPage","loadSettings","saveSettings","SettingsManagerPage_extends","settings","newSettings","SystemPage","SystemPage_extends","renderInformationCard","free","Math","round","memory","total","cpu","count","speed","hostname","renderApplicationCard","renderSystemCard","renderDangerCard","Admin","Admin_extends","Admin_Navigation_Navigation","Switch","Route","Admin_ModuleManagerPage_ModuleManagerPage","Admin_ServiceManagerPage_ServiceManagerPage","Admin_PageManagerPage_PageManagerPage","Admin_SettingsManagerPage_SettingsManagerPage","Admin_SystemPage_SystemPage","Redirect","PageNotFound","PageNotFound_extends","location","pathname","WebComponentContext_WebComponentContext","WebComponentContext","react_default","createElement","components_WebComponent_WebComponent","WebComponentContext_assign","renderLoading","WebComponentContext_extends","WebComponentContextType","createContext","components_ComponentNotFound_ComponentNotFound","ComponentNotFound","ComponentNotFound_extends","join","ErrorBoundary","ErrorBoundary_extends","componentDidCatch","WebComponent","WebComponent_extends","prevState","loadComponent","webComponentOptions","allComponentOptions","componentFound","componentName_1","componentDefinition","componentContext","componentOptions","WebComponent_assign","Component","components_ErrorBoundary_ErrorBoundary","App","reloadWait","reload","triggerReload","App_extends","arguments","clearTimeout","reloadTimer","setTimeout","renderPage","BrowserRouter","components_Admin_Admin","exact","components_PageNotFound_PageNotFound","components_App_App","document","getElementById","p"],"mappings":"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","file":"static/js/main.eace61fa.chunk.js","sourcesContent":["import { IBackendService, IModuleContext, IPubSub } from \"@schirkan/reactron-interfaces\";\r\n\r\nlet electron: Electron.AllElectron;\r\nlet backendService: IBackendService;\r\nlet topics: IPubSub;\r\nlet Store: typeof ElectronStore;\r\n\r\nif ((window as any).require) {\r\n    electron = (window as any).require('electron');\r\n    backendService = electron.remote.require('./dist/server/BackendService').BackendService.instance;\r\n    topics = backendService.topics;\r\n    Store = electron.remote.require('electron-store');\r\n}\r\n\r\nconst moduleStoreCache: { [key: string]: ElectronStore } = {};\r\nconst serviceCache: { [key: string]: any } = {};\r\n\r\nexport class BrowserModuleContext implements IModuleContext {\r\n    public readonly electron: Electron.AllElectron;\r\n    public readonly backendService: IBackendService;\r\n    public readonly topics: IPubSub;\r\n    public readonly moduleStorage: ElectronStore;\r\n    public readonly moduleApiPath: string;\r\n    public readonly getService: <TService = any>(serviceName: string, moduleName?: string | undefined) => TService | undefined;\r\n\r\n    constructor(public moduleName: string) {\r\n        this.electron = electron;\r\n        this.backendService = backendService;\r\n        this.topics = topics;\r\n\r\n        const moduleStoreKey = 'module.' + moduleName;\r\n        if (!moduleStoreCache[moduleStoreKey]) {\r\n            moduleStoreCache[moduleStoreKey] = new Store({ name: 'module.' + moduleName });\r\n        }\r\n        this.moduleStorage = moduleStoreCache[moduleStoreKey];\r\n\r\n        const escapedModuleName = moduleName.replace('/', '@');\r\n        this.moduleApiPath = '/api/modules/' + escapedModuleName;\r\n\r\n        this.getService = <TService>(serviceName: string, explicitModuleName?: string) => {\r\n            if (!this.backendService) {\r\n                console.log('Method getService() is not supported in browser environment.');\r\n                return undefined;\r\n            }\r\n            const serviceKey = (explicitModuleName || moduleName) + '.' + serviceName;\r\n            if (!serviceCache[serviceKey]) {\r\n                serviceCache[serviceKey] = this.backendService.serviceManager.get(explicitModuleName || moduleName, serviceName);\r\n            }\r\n            return serviceCache[serviceKey] as TService | undefined;\r\n        }\r\n    }\r\n}\r\n\r\n","import { BrowserModuleContext } from './BrowserModuleContext';\r\nexport const inernalModuleContext = new BrowserModuleContext('@schirkan/reactron'); // internal module\r\n","import { ICommandResult, IModuleRepositoryItem, IServiceRepositoryItem, ISystemSettings, IWebComponentOptions, IWebPageOptions } from '@schirkan/reactron-interfaces';\r\nimport { IServerInfo } from '../interfaces/IServerInfo';\r\n\r\nexport class ApiRoute<TParams, TBody, TResponse = void>{\r\n    constructor(\r\n        public path: string,\r\n        public method: string\r\n    ) { }\r\n}\r\n\r\nexport const routes = {\r\n    getServices: new ApiRoute<undefined, undefined, IServiceRepositoryItem[]>('/service/', 'get'),\r\n    getServiceOptions: new ApiRoute<{ moduleName: string, serviceName: string }, undefined, object>('/service/:moduleName/:serviceName', 'get'),\r\n    setServiceOptions: new ApiRoute<{ moduleName: string, serviceName: string }, object>('/service/:moduleName/:serviceName', 'post'),\r\n\r\n    getModules: new ApiRoute<undefined, undefined, IModuleRepositoryItem[]>('/modules/', 'get'),\r\n    addModule: new ApiRoute<undefined, { repository: string }, ICommandResult[]>('/modules/', 'post'),\r\n    deleteModule: new ApiRoute<{ moduleName: string }, undefined, ICommandResult[]>('/modules/:moduleName', 'delete'),\r\n    rebuildModule: new ApiRoute<{ moduleName: string }, undefined, ICommandResult[]>('/modules/:moduleName/rebuild', 'post'),\r\n    updateModule: new ApiRoute<{ moduleName: string }, undefined, ICommandResult[]>('/modules/:moduleName/update', 'post'),\r\n    checkUpdates: new ApiRoute<{ moduleName: string }, undefined, ICommandResult[]>('/modules/checkUpdates/update', 'get'),\r\n\r\n    getWebPages: new ApiRoute<undefined, undefined, IWebPageOptions[]>('/pages/', 'get'),\r\n    setWebPage: new ApiRoute<undefined, IWebPageOptions, IWebPageOptions>('/pages/', 'post'),\r\n    deleteWebPage: new ApiRoute<{ id: string }, undefined>('/pages/:id', 'delete'),\r\n\r\n    getServerInfo: new ApiRoute<undefined, undefined, IServerInfo>('/app/', 'get'),\r\n    exitApplication: new ApiRoute<undefined, undefined>('/app/exitApplication', 'post'),\r\n    restartApplication: new ApiRoute<undefined, undefined>('/app/restartApplication', 'post'),\r\n    shutdownSystem: new ApiRoute<undefined, undefined>('/app/shutdownSystem', 'post'),\r\n    rebootSystem: new ApiRoute<undefined, undefined>('/app/restartSystem', 'post'),\r\n    resetApplication: new ApiRoute<undefined, undefined>('/app/resetApplication', 'post'),\r\n    \r\n    getSettings: new ApiRoute<undefined, undefined, ISystemSettings>('/settings/', 'get'),\r\n    setSettings: new ApiRoute<undefined, ISystemSettings>('/settings/', 'post'),\r\n\r\n    getWebComponentOptions: new ApiRoute<undefined, undefined, IWebComponentOptions[]>('/components/', 'get'),\r\n    setWebComponentOptions: new ApiRoute<undefined, IWebComponentOptions, IWebComponentOptions>('/components/', 'post'),\r\n    deleteWebComponentOptions: new ApiRoute<{ id: string }, undefined>('/components/:id', 'delete'),\r\n};","import { ApiRoute, routes } from '../common/apiRoutes';\r\nimport { inernalModuleContext } from './inernalModuleContext';\r\n\r\nexport class ApiClient {\r\n    public getAllServices = apiCall(routes.getServices, true);\r\n    public getServiceOptions = apiCall(routes.getServiceOptions);\r\n    public setServiceOptions = apiCall(routes.setServiceOptions);\r\n\r\n    public getModules = apiCall(routes.getModules, true);\r\n    public addModule = apiCall(routes.addModule);\r\n    public checkUpdates = apiCall(routes.checkUpdates);\r\n    public deleteModule = apiCall(routes.deleteModule);\r\n    public rebuildModule = apiCall(routes.rebuildModule);\r\n    public updateModule = apiCall(routes.updateModule);\r\n\r\n    public getWebPages = apiCall(routes.getWebPages, true);\r\n    public setWebPage = apiCall(routes.setWebPage);\r\n    public deleteWebPage = apiCall(routes.deleteWebPage);\r\n\r\n    public getServerInfo = apiCall(routes.getServerInfo);\r\n    public exitApplication = apiCall(routes.exitApplication);\r\n    public restartApplication = apiCall(routes.restartApplication);\r\n    public shutdownSystem = apiCall(routes.shutdownSystem);\r\n    public rebootSystem = apiCall(routes.rebootSystem);\r\n    public resetApplication = apiCall(routes.resetApplication);\r\n\r\n    public getSettings = apiCall(routes.getSettings, true);\r\n    public setSettings = apiCall(routes.setSettings);\r\n\r\n    public getWebComponentOptions = apiCall(routes.getWebComponentOptions, true);\r\n    public setWebComponentOptions = apiCall(routes.setWebComponentOptions);\r\n    public deleteWebComponentOptions = apiCall(routes.deleteWebComponentOptions);\r\n\r\n    public clearCache() {\r\n        Object.keys(this).forEach(key => {\r\n            if (this[key] && this[key].clearCache) {\r\n                this[key].clearCache();\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\ninterface IApiCall<TParams, TBody, TResponse> {\r\n    (params?: TParams, body?: TBody): Promise<TResponse>;\r\n    clearCache: () => void;\r\n}\r\n\r\nconst apiCall = <TParams, TBody, TResponse>(\r\n    route: ApiRoute<TParams, TBody, TResponse>,\r\n    cacheResponse: boolean = false) => {\r\n    let cache: any;\r\n    const method = route.method.toLocaleLowerCase();\r\n\r\n    const call: any = (params: TParams, data: TBody): Promise<TResponse> => {\r\n        if (cacheResponse && cache) {\r\n            return Promise.resolve(cache);\r\n        }\r\n\r\n        let path = route.path;\r\n        // replace params in path\r\n        if (params) {\r\n            Object.keys(params).forEach(key => {\r\n                path = path.replace(':' + key, params[key]);\r\n            });\r\n        }\r\n        return fetch(inernalModuleContext.moduleApiPath + path, {\r\n            method,\r\n            body: data && JSON.stringify(data),\r\n            headers: {\r\n                \"Content-Type\": \"application/json; charset=utf-8\",\r\n            }\r\n        })\r\n            .then(async response => {\r\n                const text = await response.text();\r\n\r\n                if (response.status.toString().startsWith('2')) {\r\n                    if (!text) {\r\n                        return undefined;\r\n                    }\r\n                    return JSON.parse(text);\r\n                }\r\n\r\n                console.log(text);\r\n                throw Error(text);\r\n            })\r\n            .then(response => {\r\n                if (cacheResponse) {\r\n                    cache = response;\r\n                }\r\n                return response;\r\n            });\r\n    };\r\n\r\n    call.clearCache = () => {\r\n        cache = undefined;\r\n    };\r\n\r\n    return call as IApiCall<TParams, TBody, TResponse>;\r\n};\r\n\r\nexport const apiClient = new ApiClient();","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { IRoundButtonProps } from './IRoundButtonProps';\r\nimport './RoundButton.css';\r\n\r\nexport default class RoundButton extends React.Component<IRoundButtonProps> {\r\n  public render() {\r\n    return <Link className=\"RoundButton\" to={this.props.to} role=\"button\">{this.props.children}</Link>;\r\n  }\r\n}\r\n","import * as SvgIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport * as classname from 'classnames';\r\nimport * as React from 'react';\r\nimport { ILoadingProps } from './ILoadingProps';\r\n\r\nimport './Loading.css';\r\n\r\nexport default class Loading extends React.Component<ILoadingProps> {\r\n  public static defaultProps: Partial<ILoadingProps> = {\r\n    iconSize: \"4x\"\r\n  };\r\n\r\n  public render() {\r\n    return (\r\n      <section className={classname('Loading', { 'center': this.props.center })}>\r\n        <FontAwesome.FontAwesomeIcon icon={SvgIcons.faSpinner} size={this.props.iconSize} spin={true} />\r\n        {this.props.text && (\r\n          <div className=\"text\">{this.props.text}</div>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import * as classname from 'classnames';\r\nimport * as React from 'react';\r\nimport { IUiComponentProps } from '../IUiComponentProps';\r\n\r\nimport './UiFlowLayout.css';\r\n\r\nexport default class UiFlowLayout extends React.Component<IUiComponentProps> {\r\n  private renderChildren() {\r\n    if (Array.isArray(this.props.children)) {\r\n      return this.props.children.map((child, index) => <div key={index}>{child}</div>);\r\n    } else {\r\n      return <div>{this.props.children}</div>;\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <section className={classname('UiFlowLayout', this.props.className)} style={this.props.style}>\r\n        {this.renderChildren()}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import * as classname from 'classnames';\r\nimport * as React from 'react';\r\nimport { IUiComponentProps } from '../IUiComponentProps';\r\n\r\nimport './UiCard.css';\r\n\r\nexport default class UiCard extends React.Component<IUiComponentProps> {\r\n  public render() {\r\n    return (\r\n      <section className={classname('UiCard', this.props.className)} style={this.props.style}>\r\n        {this.props.children}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import * as classname from 'classnames';\r\nimport * as React from 'react';\r\nimport { IUiComponentProps } from '../IUiComponentProps';\r\n\r\nimport './UiCardContent.css';\r\n\r\nexport default class UiCardContent extends React.Component<IUiComponentProps> {\r\n  public render() {\r\n    return (\r\n      <div className={classname('UiCardContent', this.props.className)} style={this.props.style}>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as classname from 'classnames';\r\nimport * as React from 'react';\r\nimport { IUiComponentProps } from '../IUiComponentProps';\r\n\r\nimport './UiCardTitle.css';\r\n\r\nexport default class UiCardTitle extends React.Component<IUiComponentProps> {\r\n  public render() {\r\n    return (\r\n      <div className={classname('UiCardTitle', this.props.className)} style={this.props.style}>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport Loading from '../../Loading/Loading';\r\nimport UiCard from '../UiCard/UiCard';\r\nimport UiCardContent from '../UiCardContent/UiCardContent';\r\nimport UiCardTitle from '../UiCardTitle/UiCardTitle';\r\nimport { IUiLoadingCardProps } from './IUiLoadingCard';\r\n\r\nimport './UiLoadingCard.css';\r\n\r\nexport default class UiLoadingCard extends React.Component<IUiLoadingCardProps> {\r\n  constructor(props: IUiLoadingCardProps) {\r\n    super(props);\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <UiCard className=\"UiLoadingCard\">\r\n        <UiCardTitle>\r\n          Loading...\r\n      </UiCardTitle>\r\n        <UiCardContent>\r\n          <Loading />\r\n        </UiCardContent>\r\n      </UiCard>\r\n    );\r\n  }\r\n}\r\n","import UiOverlay from './UiOverlay';\r\n\r\nclass OverlayManager {\r\n  private items: UiOverlay[] = [];\r\n\r\n  public add(instance: UiOverlay) {\r\n    if (this.items.length > 0) {\r\n      const lastItem = this.items[this.items.length - 1];\r\n      lastItem.hide();\r\n    }\r\n    this.items.push(instance);\r\n  }\r\n\r\n  public remove(instance: UiOverlay) {\r\n    const index = this.items.indexOf(instance);\r\n    if (index >= 0) {\r\n      this.items.splice(index);\r\n      if (this.items.length > 0) {\r\n        const lastItem = this.items[this.items.length - 1];\r\n        lastItem.show();\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport const overlayManager = new OverlayManager();","import * as classname from 'classnames';\r\nimport * as React from 'react';\r\nimport { IUiComponentProps } from '../IUiComponentProps';\r\nimport { overlayManager } from './OverlayManager';\r\n\r\nimport './UiOverlay.css';\r\n\r\ninterface IUiComponentState {\r\n  visible: boolean;\r\n}\r\n\r\nexport default class UiOverlay extends React.Component<IUiComponentProps, IUiComponentState> {\r\n  constructor(props: IUiComponentProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      visible: true\r\n    };\r\n  }\r\n\r\n  public componentDidMount() {\r\n    overlayManager.add(this);\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    overlayManager.remove(this);\r\n  }\r\n\r\n  public show() {\r\n    this.setState({ visible: true });\r\n  }\r\n  public hide() {\r\n    this.setState({ visible: false });\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div hidden={!this.state.visible} className={classname('UiOverlay', this.props.className)} style={this.props.style}>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as classname from 'classnames';\r\nimport * as React from 'react';\r\nimport { IUiButtonProps } from './IUiButtonProps';\r\n\r\nimport './UiButton.css';\r\n\r\ninterface IUiButtonState {\r\n  running: boolean;\r\n}\r\n\r\nexport default class UiButton extends React.Component<IUiButtonProps, IUiButtonState> {\r\n  private disposed = false;\r\n\r\n  constructor(props: IUiButtonProps) {\r\n    super(props);\r\n\r\n    this.state = { running: false };\r\n\r\n    this.onClick = this.onClick.bind(this);\r\n  }\r\n\r\n  private onClick(e: React.MouseEvent) {    \r\n    if (!this.props.onClick || this.props.disabled || this.state.running) {\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n    e.bubbles = false;\r\n    e.stopPropagation();\r\n    \r\n    this.setState({ running: true }, () => {\r\n      Promise.resolve(this.props.onClick && this.props.onClick())\r\n        .catch()\r\n        .then(() => {\r\n          if (!this.disposed) {\r\n            this.setState({ running: false });\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    this.disposed = true;\r\n  }\r\n\r\n  public render() {\r\n    const className = classname('UiButton', 'clickable',\r\n      this.props.className, { 'disabled': this.props.disabled || this.state.running });\r\n\r\n    return (\r\n      <div className={className} onClick={this.onClick} style={this.props.style}>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as SolidIcons from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport UiButton from '../../UiButton/UiButton';\r\nimport UiCard from '../../UiCard/UiCard';\r\n\r\nimport './AddModuleCard.css';\r\n\r\nexport interface IAddModuleCardProps {\r\n  onAdd: (repository: string | null) => void;\r\n}\r\n\r\nexport default class AddModuleCard extends React.Component<IAddModuleCardProps> {\r\n  public render() {\r\n    let input: HTMLInputElement | null;\r\n    const onAdd = () => this.props.onAdd(input && input.value);\r\n\r\n    return (\r\n      <UiCard className=\"AddModuleCard\">\r\n        <input ref={el => input = el} placeholder=\"GitHub Repository URL\" />\r\n        <UiButton className=\"addButton\" onClick={onAdd}>\r\n          <FontAwesomeIcon icon={SolidIcons.faPlus} /> Add\r\n        </UiButton>\r\n      </UiCard>\r\n    );\r\n  }\r\n}\r\n","import * as SolidIcons from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { ICommandResult } from '@schirkan/reactron-interfaces';\r\nimport * as React from 'react';\r\nimport UiCard from '../../UiCard/UiCard';\r\n\r\nimport './CommandResult.css';\r\n\r\nexport interface ICommandResultProps {\r\n  results: ICommandResult[];\r\n  onClose: () => void;\r\n}\r\n\r\nexport default class CommandResult extends React.Component<ICommandResultProps> {\r\n  constructor(props: ICommandResultProps) {\r\n    super(props);\r\n  }\r\n\r\n  public renderCommandResult(result: ICommandResult, key: string) {\r\n    const icon = result.success === false ?\r\n      <FontAwesomeIcon icon={SolidIcons.faTimes} /> :\r\n      result.success === true ?\r\n        <FontAwesomeIcon icon={SolidIcons.faCheck} /> :\r\n        <FontAwesomeIcon icon={SolidIcons.faQuestion} />;\r\n\r\n    let log: JSX.Element | undefined;\r\n    if (result.log && result.log.length) {\r\n      log = (\r\n        <ul className=\"log\">\r\n          {result.log.map((item, i) => <li key={i}>{item}</li>)}\r\n        </ul>\r\n      );\r\n    }\r\n\r\n    let title = result.command || '';\r\n    if (result.args) {\r\n      title += ' | args: ' + result.args;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment key={key}>\r\n        <div className=\"result\">\r\n          <div className=\"commandTitle\">{icon} {title}</div>\r\n          {log}\r\n        </div>\r\n        {result.children && result.children.map((child, index) =>\r\n          this.renderCommandResult(child, key + '.' + index))}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <UiCard className=\"CommandResult\">\r\n        <div className=\"title\">Result</div>\r\n        <div className=\"close clickable\" onClick={this.props.onClose}>\r\n          <FontAwesomeIcon icon={SolidIcons.faTimes} />\r\n        </div>\r\n        <div className=\"results\">\r\n          {this.props.results.map((item, index) => this.renderCommandResult(item, index.toString()))}\r\n        </div>\r\n      </UiCard>\r\n    );\r\n  }\r\n}\r\n","import * as classname from 'classnames';\r\nimport * as React from 'react';\r\nimport { IUiCardButtonRowProps } from './IUiCardButtonRowtProps';\r\n\r\nimport './UiCardButtonRow.css';\r\n\r\nexport default class UiCardButtonRow extends React.Component<IUiCardButtonRowProps> {\r\n  public render() {\r\n    const className = classname('UiCardButtonRow', this.props.className, {\r\n      'UiCardButtonRowDividerFull': this.props.divider === 'full',\r\n      'UiCardButtonRowDividerHalf': this.props.divider === 'half',\r\n    });\r\n\r\n    return (\r\n      <div className={className} style={this.props.style}>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as BrandIcons from '@fortawesome/free-brands-svg-icons';\r\nimport * as SolidIcons from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IModuleRepositoryItem } from '@schirkan/reactron-interfaces';\r\nimport * as classname from 'classnames';\r\nimport * as React from 'react';\r\nimport UiButton from '../../UiButton/UiButton';\r\nimport UiCard from '../../UiCard/UiCard';\r\nimport UiCardButtonRow from '../../UiCardButtonRow/UiCardButtonRow';\r\nimport UiCardContent from '../../UiCardContent/UiCardContent';\r\nimport UiCardTitle from '../../UiCardTitle/UiCardTitle';\r\n\r\nimport './ModuleCard.css';\r\n\r\nexport interface IModuleCardProps {\r\n  module: IModuleRepositoryItem;\r\n  onUpdate: (module: IModuleRepositoryItem) => void;\r\n  onRebuild: (module: IModuleRepositoryItem) => void;\r\n  onRemove: (module: IModuleRepositoryItem) => void;\r\n}\r\n\r\ninterface IModuleCardState {\r\n  showActions: boolean;\r\n}\r\n\r\nexport default class ModuleCard extends React.Component<IModuleCardProps, IModuleCardState> {\r\n  constructor(props: IModuleCardProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      showActions: false\r\n    };\r\n\r\n    this.showActions = this.showActions.bind(this);\r\n    this.hideActions = this.hideActions.bind(this);\r\n    this.onUpdate = this.onUpdate.bind(this);\r\n    this.onRebuild = this.onRebuild.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  }\r\n\r\n  private showActions() {\r\n    this.setState({ showActions: true });\r\n  }\r\n\r\n  private hideActions() {\r\n    this.setState({ showActions: false });\r\n  }\r\n\r\n  private onUpdate() {\r\n    this.hideActions();\r\n    this.props.onUpdate(this.props.module);\r\n  }\r\n\r\n  private onRebuild() {\r\n    this.hideActions();\r\n    this.props.onRebuild(this.props.module);\r\n  }\r\n\r\n  private onRemove() {\r\n    this.hideActions();\r\n    this.props.onRemove(this.props.module);\r\n  }\r\n\r\n  public renderTitle() {\r\n    let updateIcon: JSX.Element | undefined;\r\n    if (this.props.module.hasUpdate) {\r\n      updateIcon = <span className=\"hasUpdate\"><FontAwesomeIcon icon={SolidIcons.faStarOfLife} /></span>;\r\n    }\r\n\r\n    return (\r\n      <UiCardTitle>\r\n        <FontAwesomeIcon icon={SolidIcons.faCube} /> {this.props.module.name}\r\n        {updateIcon}\r\n      </UiCardTitle>\r\n    );\r\n  }\r\n\r\n  public renderDescription() {\r\n    return (\r\n      <UiCardContent className=\"description\">\r\n        {this.props.module.description || 'no description'}\r\n      </UiCardContent>\r\n    );\r\n  }\r\n\r\n  public renderAuthor() {\r\n    let authorName: string | undefined = 'unknown';\r\n    let authorMail: string | undefined;\r\n    if (typeof this.props.module.author === 'string') {\r\n      authorName = this.props.module.author;\r\n    } else if (typeof this.props.module.author === 'object') {\r\n      authorName = this.props.module.author.name || this.props.module.author.email;\r\n      authorMail = this.props.module.author.email;\r\n    }\r\n    const author = (authorMail) ? (<a href={'mailto://' + authorMail}>{authorName}</a>) : authorName;\r\n\r\n    return (\r\n      <UiCardContent className=\"author\">by {author}</UiCardContent>\r\n    );\r\n  }\r\n\r\n  public renderFooter() {\r\n    let repoLink = <div />;\r\n    if (this.props.module.repository) {\r\n      repoLink = (\r\n        <a className=\"clickable\" href={this.props.module.repository} target=\"_blank\">\r\n          <FontAwesomeIcon icon={BrandIcons.faGithub} /> GitHub\r\n        </a>\r\n      );\r\n    }\r\n\r\n    const className = classname('footer', 'default', { 'hide': this.state.showActions });\r\n\r\n    return (\r\n      <UiCardButtonRow className={className} divider=\"half\">\r\n        <div className=\"version\">{this.props.module.version}</div>\r\n        {repoLink}\r\n        <UiButton onClick={this.showActions}><FontAwesomeIcon icon={SolidIcons.faCog} /> Modify</UiButton>\r\n      </UiCardButtonRow>\r\n    );\r\n  }\r\n\r\n  public renderActions() {\r\n    const className = classname('footer', 'actions', { 'hide': !this.state.showActions });\r\n\r\n    return (\r\n      <UiCardButtonRow className={className} divider=\"full\">\r\n        <UiButton disabled={!this.props.module.hasUpdate} onClick={this.onUpdate}>Update</UiButton>\r\n        <UiButton disabled={!this.props.module.canBuild} onClick={this.onRebuild}>Rebuild</UiButton>\r\n        <UiButton disabled={!this.props.module.canRemove} onClick={this.onRemove}>Remove</UiButton>\r\n        <UiButton onClick={this.hideActions}><FontAwesomeIcon icon={SolidIcons.faTimes} /></UiButton>\r\n      </UiCardButtonRow>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <UiCard className=\"ModuleCard\">\r\n        {this.renderTitle()}\r\n        {this.renderDescription()}\r\n        {this.renderAuthor()}\r\n        {this.renderFooter()}\r\n        {this.renderActions()}\r\n      </UiCard>\r\n    );\r\n  }\r\n}\r\n","import * as SolidIcons from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IModuleRepositoryItem } from '@schirkan/reactron-interfaces';\r\nimport * as React from 'react';\r\nimport UiButton from '../../UiButton/UiButton';\r\nimport UiCard from '../../UiCard/UiCard';\r\nimport UiCardButtonRow from '../../UiCardButtonRow/UiCardButtonRow';\r\n\r\nimport './UpdateModulesCard.css';\r\n\r\nexport interface IUpdateModulesCardProps {\r\n  checkingUpdates: boolean;\r\n  modules: IModuleRepositoryItem[];\r\n  onCheckUpdates: () => void;\r\n  onUpdateAll: () => void;\r\n  onUpdateModule: (module: IModuleRepositoryItem) => void;\r\n}\r\n\r\nexport default class UpdateModulesCard extends React.Component<IUpdateModulesCardProps> {\r\n  public render() {\r\n    const modulesWithUpdates = this.props.modules.filter(x => x.hasUpdate);\r\n    const isChecked = this.props.modules.some(x => x.hasUpdate !== undefined);\r\n    const updatesTitle = isChecked ? modulesWithUpdates.length : '-';\r\n\r\n    return (\r\n      <UiCard className=\"UpdateModulesCard\">\r\n        <UiCardButtonRow divider=\"full\">\r\n          <div>Updates: {updatesTitle}</div>\r\n          <UiButton className=\"checkUpdatesButton\" onClick={this.props.onCheckUpdates} disabled={this.props.checkingUpdates}>\r\n            <FontAwesomeIcon icon={SolidIcons.faSyncAlt} spin={this.props.checkingUpdates} /> Check\r\n          </UiButton>\r\n          <UiButton className=\"updateAllButton\" onClick={this.props.onUpdateAll} disabled={!modulesWithUpdates.length}>\r\n            <FontAwesomeIcon icon={SolidIcons.faDownload} /> Update All\r\n          </UiButton>\r\n        </UiCardButtonRow>\r\n      </UiCard>\r\n    );\r\n  }\r\n}\r\n","import { ICommandResult, IModuleRepositoryItem } from '@schirkan/reactron-interfaces';\r\nimport * as React from 'react';\r\nimport { apiClient } from '../../../ApiClient';\r\nimport Loading from '../../Loading/Loading';\r\nimport UiFlowLayout from '../UiFlowLayout/UiFlowLayout';\r\nimport UiLoadingCard from '../UiLoadingCard/UiLoadingCard';\r\nimport UiOverlay from '../UiOverlay/UiOverlay';\r\nimport AddModuleCard from './AddModuleCard/AddModuleCard';\r\nimport CommandResult from './CommandResult/CommandResult';\r\nimport ModuleCard from './ModuleCard/ModuleCard';\r\nimport UpdateModulesCard from './UpdateModulesCard/UpdateModulesCard';\r\n\r\nimport './ModuleManagerPage.css';\r\n\r\nexport interface IModuleManagerPageState {\r\n  loading: boolean;\r\n  checkingUpdates: boolean;\r\n  showResult: boolean;\r\n  results: ICommandResult[];\r\n  modules: IModuleRepositoryItem[];\r\n}\r\n\r\nexport default class ModuleManagerPage extends React.Component<any, IModuleManagerPageState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: false,\r\n      checkingUpdates: false,\r\n      showResult: false,\r\n      results: [],\r\n      modules: []\r\n    };\r\n\r\n    this.loadModules = this.loadModules.bind(this);\r\n    this.checkUpdates = this.checkUpdates.bind(this);\r\n    this.updateAll = this.updateAll.bind(this);\r\n    this.updateModule = this.updateModule.bind(this);\r\n    this.removeModule = this.removeModule.bind(this);\r\n    this.rebuildModule = this.rebuildModule.bind(this);\r\n    this.addModule = this.addModule.bind(this);\r\n    this.hideResult = this.hideResult.bind(this);\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this.loadModules();\r\n  }\r\n\r\n  public loadModules(): Promise<void> {\r\n    return apiClient.getModules()\r\n      .then(modules => this.setState({ modules }))\r\n      .catch(); // TODO\r\n  }\r\n\r\n  public async checkUpdates(): Promise<void> {\r\n    this.setState({ checkingUpdates: true });\r\n    await apiClient.checkUpdates();\r\n    this.setState({ checkingUpdates: false });\r\n    apiClient.getModules.clearCache();\r\n    await this.loadModules();\r\n  }\r\n\r\n  public async updateAll(): Promise<void> {\r\n    const modulesWithUpdates = this.state.modules.filter(x => x.hasUpdate);\r\n    if (!modulesWithUpdates.length) {\r\n      return;\r\n    }\r\n\r\n    const results: ICommandResult[] = [];\r\n    this.setState({ loading: true });\r\n    try {\r\n      for (const module of modulesWithUpdates) {\r\n        const result = await apiClient.updateModule({ moduleName: module.name });\r\n        results.push(...result);\r\n      }\r\n      this.showResult(results);\r\n    } catch (error) {\r\n      this.showError(error);\r\n    }\r\n    apiClient.getModules.clearCache();\r\n    await this.loadModules();\r\n  }\r\n\r\n  public async updateModule(module: IModuleRepositoryItem): Promise<void> {\r\n    if (!module.hasUpdate) {\r\n      return;\r\n    };\r\n\r\n    this.setState({ loading: true });\r\n    try {\r\n      const result = await apiClient.updateModule({ moduleName: module.name });\r\n      this.showResult(result);\r\n    } catch (error) {\r\n      this.showError(error);\r\n    }\r\n    apiClient.getModules.clearCache();\r\n    await this.loadModules();\r\n  }\r\n\r\n  public async rebuildModule(module: IModuleRepositoryItem): Promise<void> {\r\n    if (!module.canBuild) {\r\n      return;\r\n    };\r\n\r\n    this.setState({ loading: true });\r\n    try {\r\n      const result = await apiClient.rebuildModule({ moduleName: module.name });\r\n      this.showResult(result);\r\n    } catch (error) {\r\n      this.showError(error);\r\n    }\r\n    apiClient.getModules.clearCache();\r\n    await this.loadModules();\r\n  }\r\n\r\n  public async removeModule(module: IModuleRepositoryItem): Promise<void> {\r\n    if (!module.canRemove) {\r\n      return;\r\n    };\r\n\r\n    this.setState({ loading: true });\r\n    try {\r\n      const result = await apiClient.deleteModule({ moduleName: module.name });\r\n      this.showResult(result);\r\n    } catch (error) {\r\n      this.showError(error);\r\n    }\r\n    apiClient.getModules.clearCache();\r\n    await this.loadModules();\r\n  }\r\n\r\n  public async addModule(repository: string | null): Promise<void> {\r\n    if (!repository || !repository.trim()) {\r\n      return;\r\n    };\r\n\r\n    this.setState({ loading: true });\r\n    try {\r\n      const result = await apiClient.addModule(undefined, { repository });\r\n      this.showResult(result);\r\n    } catch (error) {\r\n      this.showError(error);\r\n    }\r\n    apiClient.getModules.clearCache();\r\n    await this.loadModules();\r\n  }\r\n\r\n  private showError(err: any) {\r\n    const message = err && err.message || JSON.stringify(err);\r\n    const result = { command: 'Error', success: false, log: [message] } as ICommandResult;\r\n    this.setState({ loading: false, showResult: true, results: [result] });\r\n  }\r\n\r\n  private showResult(results: ICommandResult[]) {\r\n    this.setState({ loading: false, showResult: true, results });\r\n  }\r\n\r\n  public hideResult() {\r\n    this.setState({ showResult: false });\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <section className=\"ModuleManagerPage\">\r\n        {this.state.loading && (\r\n          <UiOverlay><Loading center={true} /></UiOverlay>\r\n        )}\r\n        {this.state.showResult && (\r\n          <UiOverlay>\r\n            <CommandResult results={this.state.results} onClose={this.hideResult} />\r\n          </UiOverlay>\r\n        )}\r\n        <UiFlowLayout>\r\n          <AddModuleCard onAdd={this.addModule} />\r\n          <UpdateModulesCard\r\n            checkingUpdates={this.state.checkingUpdates}\r\n            modules={this.state.modules}\r\n            onCheckUpdates={this.checkUpdates}\r\n            onUpdateAll={this.updateAll}\r\n            onUpdateModule={this.updateModule} />\r\n        </UiFlowLayout>\r\n        {!this.state.modules.length && (\r\n          <UiFlowLayout>\r\n            <UiLoadingCard />\r\n          </UiFlowLayout>\r\n        )}\r\n        <UiFlowLayout>\r\n          {this.state.modules.map(item =>\r\n            <ModuleCard key={item.name}\r\n              module={item}\r\n              onRemove={this.removeModule}\r\n              onRebuild={this.rebuildModule}\r\n              onUpdate={this.updateModule} />)}\r\n        </UiFlowLayout>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport './Navigation.css';\r\n\r\nexport default class Navigation extends React.Component {\r\n  public render() {\r\n    return (\r\n      <section className=\"Navigation\">\r\n        <NavLink activeClassName=\"active\" to=\"/admin/ModuleManager\" role=\"button\" >Modules</NavLink>\r\n        <NavLink activeClassName=\"active\" to=\"/admin/ServiceManager\" role=\"button\">Services</NavLink>\r\n        <NavLink activeClassName=\"active\" to=\"/admin/Pages\" role=\"button\">Pages</NavLink>\r\n        <NavLink activeClassName=\"active\" to=\"/admin/Settings\" role=\"button\">Settings</NavLink>\r\n        <NavLink activeClassName=\"active\" to=\"/admin/System\" role=\"button\">System</NavLink>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import { IFieldDefinition } from \"@schirkan/reactron-interfaces\";\r\n\r\nexport const getDefaultFieldValue = (field: IFieldDefinition) => {\r\n  const defaultValue = field.defaultValue;\r\n\r\n  if (field.isArray) {\r\n    if (defaultValue && Array.isArray(defaultValue)) {\r\n      return defaultValue;\r\n    }\r\n    return [];\r\n  }\r\n\r\n  switch (field.valueType) {\r\n    case 'object':\r\n      let result: any = defaultValue;\r\n\r\n      if (result === undefined) {\r\n        result = getDefaultObjectValue(field.fields);\r\n      }\r\n\r\n      return result;\r\n    case 'number':\r\n      return defaultValue || 0;\r\n    case 'boolean':\r\n      return defaultValue || false;\r\n    case 'string':\r\n      return defaultValue || '';\r\n    case 'style':\r\n      return defaultValue || {};\r\n    case 'webComponent':\r\n      return undefined;\r\n  }\r\n  return undefined;\r\n};\r\n\r\nexport const getDefaultObjectValue = (fields?: IFieldDefinition[]) => {\r\n  const result = {};\r\n  if (fields) {\r\n    fields.forEach(f => {\r\n      result[f.name] = getDefaultFieldValue(f);\r\n    });\r\n  }\r\n  return result;\r\n};","import * as RegularIcons from '@fortawesome/free-regular-svg-icons';\r\nimport * as SolidIcons from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IFieldDefinition } from '@schirkan/reactron-interfaces';\r\nimport * as React from 'react';\r\nimport { getDefaultFieldValue } from 'src/common/optionsHelper';\r\nimport * as uuidv4 from 'uuid/v4';\r\nimport UiButton from '../../UiButton/UiButton';\r\nimport OptionItem from '../OptionItem';\r\n\r\nimport './ArrayForm.css';\r\n\r\ninterface IArrayFormProps {\r\n  definition: IFieldDefinition;\r\n  value: any[];\r\n  valueChange: (newValue: any[]) => void;\r\n}\r\n\r\nexport default class ArrayForm extends React.Component<IArrayFormProps> {\r\n  private arrayKeys: string[] = [];\r\n\r\n  constructor(props: IArrayFormProps) {\r\n    super(props);\r\n\r\n    this.arrayItemAdd = this.arrayItemAdd.bind(this);\r\n    this.arrayItemRemove = this.arrayItemRemove.bind(this);\r\n    this.arrayItemMoveUp = this.arrayItemMoveUp.bind(this);\r\n    this.arrayItemMoveDown = this.arrayItemMoveDown.bind(this);\r\n  }\r\n\r\n  private arrayItemChange(index: number, definition: IFieldDefinition, newValue: any) {\r\n    let array = this.props.value || [];\r\n    array = array.slice();\r\n    array[index] = newValue;\r\n    this.props.valueChange(array);\r\n  }\r\n\r\n  private arrayItemRemove(index: number) {\r\n    let array = this.props.value || [];\r\n    array = array.slice();\r\n    array.splice(index, 1);\r\n    this.arrayKeys.splice(index, 1);\r\n    this.props.valueChange(array);\r\n  }\r\n\r\n  private arrayItemMoveUp(index: number) {\r\n    const array = this.props.value || [];\r\n\r\n    if (index === 0) {\r\n      return;\r\n    }\r\n\r\n    const item = array.splice(index, 1)[0];\r\n    array.splice(index - 1, 0, item);\r\n\r\n    const keyItem = this.arrayKeys.splice(index, 1)[0];\r\n    this.arrayKeys.splice(index - 1, 0, keyItem);\r\n\r\n    this.props.valueChange(array);\r\n  }\r\n\r\n  private arrayItemMoveDown(index: number) {\r\n    const array = this.props.value || [];\r\n\r\n    if (index === array.length - 1) {\r\n      return;\r\n    }\r\n\r\n    const item = array.splice(index, 1)[0];\r\n    array.splice(index + 1, 0, item);\r\n\r\n    const keyItem = this.arrayKeys.splice(index, 1)[0];\r\n    this.arrayKeys.splice(index + 1, 0, keyItem);\r\n\r\n    this.props.valueChange(array);\r\n  }\r\n\r\n  private arrayItemAdd() {\r\n    const arrayItemDefinition = { ...this.props.definition };\r\n    arrayItemDefinition.isArray = false;\r\n\r\n    let array = this.props.value || [];\r\n    array = array.slice();\r\n    array.push(getDefaultFieldValue(arrayItemDefinition));\r\n    this.props.valueChange(array);\r\n  }\r\n\r\n  private renderArrayItem(value: any, index: number) {\r\n    const arrayItemDefinition = { ...this.props.definition };\r\n    arrayItemDefinition.isArray = false;\r\n    arrayItemDefinition.displayName = 'Item ' + (index + 1);\r\n\r\n    let key = this.arrayKeys[index];\r\n    if (!key) {\r\n      key = this.arrayKeys[index] = uuidv4();\r\n    }\r\n\r\n    return (\r\n      <React.Fragment key={key}>\r\n        <OptionItem definition={arrayItemDefinition} value={value}\r\n          valueChange={this.arrayItemChange.bind(this, index)} >\r\n          <UiButton onClick={this.arrayItemRemove.bind(this, index)}>\r\n            <FontAwesomeIcon icon={RegularIcons.faTrashAlt} />\r\n          </UiButton>\r\n          <UiButton onClick={this.arrayItemMoveUp.bind(this, index)}>\r\n            <FontAwesomeIcon icon={RegularIcons.faArrowAltCircleUp} />\r\n          </UiButton>\r\n          <UiButton onClick={this.arrayItemMoveDown.bind(this, index)}>\r\n            <FontAwesomeIcon icon={RegularIcons.faArrowAltCircleDown} />\r\n          </UiButton>\r\n        </OptionItem>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    const array = this.props.value || [];\r\n    return (\r\n      <React.Fragment>\r\n        {array.map((value, index) => this.renderArrayItem(value, index))}\r\n        <UiButton className=\"add-array-item\" onClick={this.arrayItemAdd}>\r\n          <FontAwesomeIcon icon={SolidIcons.faPlus} /> Add item\r\n        </UiButton>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import * as RegularIcons from '@fortawesome/free-regular-svg-icons';\r\nimport * as SolidIcons from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IFieldDefinition } from '@schirkan/reactron-interfaces';\r\nimport * as React from 'react';\r\nimport UiButton from '../../UiButton/UiButton';\r\nimport OptionItem from '../OptionItem';\r\n\r\nimport './StyleForm.css';\r\n\r\nconst styleProperties = ['background', 'backgroundAttachment', 'backgroundColor', 'backgroundImage',\r\n  'backgroundPosition', 'backgroundRepeat', 'border', 'borderBottom',\r\n  'borderBottomColor', 'borderBottomStyle', 'borderBottomWidth', 'borderColor',\r\n  'borderLeft', 'borderLeftColor', 'borderLeftStyle', 'borderLeftWidth',\r\n  'borderRight', 'borderRightColor', 'borderRightStyle', 'borderRightWidth',\r\n  'borderStyle', 'borderTop', 'borderTopColor', 'borderTopStyle',\r\n  'borderTopWidth', 'borderWidth', 'clear', 'clip',\r\n  'color', 'cursor', 'display', 'filter',\r\n  'cssFloat', 'font', 'fontFamily', 'fontSize',\r\n  'fontVariant', 'fontWeight', 'height', 'left',\r\n  'letterSpacing', 'lineHeight', 'listStyle', 'listStyleImage',\r\n  'listStylePosition', 'listStyleType', 'margin', 'marginBottom',\r\n  'marginLeft', 'marginRight', 'marginTop', 'overflow',\r\n  'padding', 'paddingBottom', 'paddingLeft', 'paddingRight',\r\n  'paddingTop', 'pageBreakAfter', 'pageBreakBefore', 'position',\r\n  'strokeDasharray', 'strokeDashoffset', 'strokeWidth', 'textAlign',\r\n  'textDecoration', 'textIndent', 'textTransform', 'top',\r\n  'verticalAlign', 'visibility', 'width', 'zIndex'];\r\n\r\ninterface IStyleFormProps {\r\n  value: object;\r\n  onChange: (newValue: object) => any;\r\n}\r\n\r\ninterface IStyleFormState {\r\n  fields: IFieldDefinition[];\r\n}\r\n\r\nexport default class StyleForm extends React.Component<IStyleFormProps, IStyleFormState> {\r\n  private newPropertySelect: HTMLSelectElement | null;\r\n\r\n  constructor(props: IStyleFormProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      fields: this.getFields(this.props.value)\r\n    };\r\n\r\n    this.addField = this.addField.bind(this);\r\n    this.valueChange = this.valueChange.bind(this);\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: IStyleFormProps) {\r\n    if (prevProps !== this.props) {\r\n      this.setState({ fields: this.getFields(this.props.value) });\r\n    }\r\n  }\r\n\r\n  private getFields(obj: object): IFieldDefinition[] {\r\n    const fields: IFieldDefinition[] = [];\r\n\r\n    if (obj) {\r\n      Object.keys(obj).forEach(name => {\r\n        const field: IFieldDefinition = {\r\n          name,\r\n          displayName: name,\r\n          valueType: 'string',\r\n        };\r\n        fields.push(field);\r\n      });\r\n    }\r\n\r\n    return fields;\r\n  }\r\n\r\n  private valueChange(field: IFieldDefinition, value: any) {\r\n    const newValue = { ...this.props.value };\r\n    newValue[field.name] = value;\r\n    this.props.onChange(newValue);\r\n  }\r\n\r\n  private removeField(fieldName: string) {\r\n    const newValue = { ...this.props.value };\r\n    delete (newValue[fieldName]);\r\n    this.props.onChange(newValue);\r\n  }\r\n\r\n  private addField() {\r\n    if (!this.newPropertySelect) {\r\n      return;\r\n    }\r\n\r\n    const fieldName = this.newPropertySelect.value;\r\n\r\n    if (!fieldName || this.props.value && this.props.value.hasOwnProperty(fieldName)) {\r\n      return;\r\n    }\r\n\r\n    const newValue = { ...this.props.value };\r\n    newValue[fieldName] = '';\r\n    this.props.onChange(newValue);\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className=\"StyleForm\">\r\n        {this.state.fields.map(field => {\r\n          const value = this.props.value && this.props.value[field.name];\r\n          return (\r\n            <OptionItem key={field.name} definition={field} value={value} valueChange={this.valueChange} >\r\n              <UiButton onClick={this.removeField.bind(this, field.name)}>\r\n                <FontAwesomeIcon icon={RegularIcons.faTrashAlt} />\r\n              </UiButton>\r\n            </OptionItem>\r\n          );\r\n        })}\r\n        <div className=\"newPropertyRow\">\r\n          <select ref={el => this.newPropertySelect = el}>\r\n            {styleProperties.map(property => <option key={property} value={property}>{property}</option>)}\r\n          </select>\r\n          <UiButton onClick={this.addField}>\r\n            <FontAwesomeIcon icon={SolidIcons.faPlus} /> Add\r\n          </UiButton>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport CarouselLayout from \"./CarouselLayout\";\r\n\r\nexport const carouselLayoutDefinition: IReactronComponentDefinition = {\r\n    component: CarouselLayout,\r\n    description: 'Carousel Layout',\r\n    displayName: 'Carousel Layout',\r\n    name: 'CarouselLayout',\r\n    fields: []\r\n};","import * as React from 'react';\r\n\r\nimport './CarouselLayout.css';\r\n\r\nexport default class CarouselLayout extends React.Component<any, any> {\r\n  constructor(props: any) {\r\n    super(props);\r\n  }\r\n\r\n  public render() {\r\n    return <section className=\"CarouselLayout\">CarouselLayout</section>;\r\n  }\r\n}\r\n","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport GridLayout from \"./GridLayout\";\r\n\r\nexport const gridLayoutDefinition: IReactronComponentDefinition = {\r\n    component: GridLayout,\r\n    description: 'Grid Layout',\r\n    displayName: 'Grid Layout',\r\n    name: 'GridLayout',\r\n    fields: [\r\n        { displayName: 'Grid Style', name: 'gridStyle', valueType: 'style' },\r\n        { displayName: 'Tile Style', name: 'tileStyle', valueType: 'style' },\r\n        {\r\n            displayName: 'Grid tiles',\r\n            name: 'tiles',\r\n            valueType: 'object',\r\n            isArray: true,\r\n            fields: [\r\n                { displayName: 'Row', name: 'row', valueType: 'number', minValue: 1, defaultValue: 1 },\r\n                { displayName: 'Column', name: 'col', valueType: 'number', minValue: 1, defaultValue: 1 },\r\n                { displayName: 'Row span', name: 'rowspan', valueType: 'number', minValue: 1, defaultValue: 1 },\r\n                { displayName: 'Column span', name: 'colspan', valueType: 'number', minValue: 1, defaultValue: 1 },\r\n                { displayName: 'Content', name: 'content', valueType: 'webComponent' },\r\n                { displayName: 'Style', name: 'style', valueType: 'style' }\r\n            ]\r\n        }\r\n    ]\r\n};","import * as React from 'react';\r\nimport { IGridLayoutOptions, IGridLayoutTileOptions } from './IGridLayoutTileOptions';\r\n\r\nimport './GridLayout.css';\r\n\r\nexport default class GridLayout extends React.Component<IGridLayoutOptions> {\r\n  constructor(props: IGridLayoutOptions) {\r\n    super(props);\r\n\r\n    this.renderTile = this.renderTile.bind(this);\r\n  }\r\n\r\n  private renderTile(tile: IGridLayoutTileOptions, index: number) {\r\n    const style = { ...this.props.tileStyle, ...tile.style };\r\n    style.gridColumn = tile.col.toString();\r\n    if (tile.colspan > 1) {\r\n      style.gridColumn += ' / span ' + tile.colspan;\r\n    }\r\n\r\n    style.gridRow = tile.row.toString();\r\n    if (tile.rowspan > 1) {\r\n      style.gridRow += ' / span ' + tile.rowspan;\r\n    }\r\n    return (\r\n      <div className=\"GridTile\" key={index} style={style}>\r\n        {this.context.renderComponent({ id: tile.content })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <section className=\"GridLayout\" style={this.props.gridStyle}>\r\n        {this.props.tiles.map(this.renderTile)}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport IFrame from \"./IFrame\";\r\n\r\nexport const iFrameDefinition: IReactronComponentDefinition = {\r\n    component: IFrame,\r\n    description: 'IFrame Component',\r\n    displayName: 'IFrame',\r\n    name: 'IFrame',\r\n    fields: [\r\n        { displayName: 'URL', name: 'url', valueType: 'string' }\r\n    ]\r\n};","import * as React from 'react';\r\nimport { IIFrameOptions } from './IIFrameOptions';\r\n\r\nimport './IFrame.css';\r\n\r\nexport default class IFrame extends React.Component<IIFrameOptions> {\r\n  public render() {\r\n    return <iframe className=\"ui-iframe\" src={this.props.url} />;\r\n  }\r\n}\r\n","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport ListLayout from \"./ListLayout\";\r\n\r\nexport const listLayoutDefinition: IReactronComponentDefinition = {\r\n  component: ListLayout,\r\n  description: 'List Layout',\r\n  displayName: 'List Layout',\r\n  name: 'ListLayout',\r\n  fields: [\r\n    { displayName: 'List Style', name: 'listStyle', valueType: 'style' },\r\n    { displayName: 'Item Style', name: 'itemStyle', valueType: 'style' },\r\n    {\r\n      displayName: 'List items',\r\n      name: 'items',\r\n      valueType: 'object',\r\n      isArray: true,\r\n      fields: [\r\n        { displayName: 'Content', name: 'content', valueType: 'webComponent' },\r\n        { displayName: 'Style', name: 'style', valueType: 'style' }\r\n      ]\r\n    }\r\n  ]\r\n};","import * as React from 'react';\r\nimport { IListLayoutItemOptions, IListLayoutOptions } from './IListLayoutOptions';\r\n\r\nimport './ListLayout.css';\r\n\r\nexport default class ListLayout extends React.Component<IListLayoutOptions> {\r\n  constructor(props: IListLayoutOptions) {\r\n    super(props);\r\n\r\n    this.renderListItem = this.renderListItem.bind(this);\r\n  }\r\n\r\n  private renderListItem(item: IListLayoutItemOptions, index: number) {\r\n    const style = { ...this.props.itemStyle, ...item.style };\r\n\r\n    return (\r\n      <div className=\"ListItem\" key={index} style={style}>\r\n        {this.context.renderComponent({ id: item.content })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <section className=\"ListLayout\">\r\n        {this.props.items.map(this.renderListItem)}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport MarkDown from \"./MarkDown\";\r\n\r\nexport const markDownDefinition: IReactronComponentDefinition = {\r\n  component: MarkDown,\r\n  description: 'MarkDown Component',\r\n  displayName: 'MarkDown',\r\n  name: 'MarkDown',\r\n  fields: [\r\n    { displayName: 'Text', name: 'text', valueType: 'string', textRows: 10 }\r\n  ]\r\n};","import * as React from 'react';\r\nimport * as ReactMarkdown from 'react-markdown';\r\nimport { IMarkDownOptions } from './IMarkDownProps';\r\n\r\nimport './MarkDown.css';\r\n\r\nexport default class MarkDown extends React.Component<IMarkDownOptions> {\r\n  public render() {\r\n    return (\r\n      <section className=\"MarkDown\">\r\n        <ReactMarkdown source={this.props.text} />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport Notifications from \"./Notifications\";\r\n\r\nexport const notificationsDefinition: IReactronComponentDefinition = {\r\n    component: Notifications,\r\n    description: 'Notifications',\r\n    displayName: 'Notifications',\r\n    name: 'Notifications',\r\n    fields: []\r\n};","import * as React from 'react';\r\n\r\nimport './Notifications.css';\r\n\r\nexport default class Notifications extends React.Component<any, any> {\r\n  constructor(props: any) {\r\n    super(props);\r\n  }\r\n\r\n  public render() {\r\n    return <section className=\"Notifications\">Notifications</section>;\r\n  }\r\n}\r\n","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport { carouselLayoutDefinition } from \"./CarouselLayout/CarouselLayoutDefinition\";\r\nimport { gridLayoutDefinition } from \"./GridLayout/GridLayoutDefinition\";\r\nimport { iFrameDefinition } from \"./IFrame/IFrameDefinition\";\r\nimport { listLayoutDefinition } from \"./ListLayout/ListLayoutDefinition\";\r\nimport { markDownDefinition } from \"./MarkDown/MarkDownDefinition\";\r\nimport { notificationsDefinition } from \"./Notifications/NotificationsDefinition\";\r\nimport { welcomeDefinition } from \"./Welcome/WelcomeDefinition\";\r\n\r\nexport const components: IReactronComponentDefinition[] = [\r\n    listLayoutDefinition,\r\n    carouselLayoutDefinition,\r\n    gridLayoutDefinition,\r\n    welcomeDefinition,\r\n    markDownDefinition,\r\n    notificationsDefinition,\r\n    iFrameDefinition\r\n];","import { IReactronComponentDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport Welcome from \"./Welcome\";\r\n\r\nexport const welcomeDefinition: IReactronComponentDefinition = {\r\n    component: Welcome,\r\n    description: 'Welcome Component',\r\n    displayName: 'Welcome',\r\n    name: 'Welcome',\r\n    fields: []\r\n};","import * as SvgIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport { IServerInfo } from '../../../interfaces/IServerInfo';\r\nimport { apiClient } from '../../ApiClient';\r\nimport RoundButton from '../../components/RoundButton/RoundButton';\r\nimport logo from './logo.svg';\r\n\r\nimport './Welcome.css';\r\n\r\ninterface IWelcomeState {\r\n  info?: IServerInfo;\r\n}\r\n\r\nexport default class Welcome extends React.Component<any, IWelcomeState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  public componentDidMount() {\r\n    apiClient.getServerInfo().then(info => {\r\n      this.setState({ info });\r\n    });\r\n  }\r\n\r\n  public render() {\r\n    let info;\r\n\r\n    if (this.state.info) {\r\n      info = (<div className=\"info\">\r\n        To edit this page click Admin-Button or visit<br /><br />\r\n        <i>http://{this.state.info.ip}:3000/admin</i>\r\n      </div>);\r\n    }\r\n    return (\r\n      <section className=\"Welcome\">\r\n        <RoundButton to=\"/admin\">\r\n          <FontAwesome.FontAwesomeIcon icon={SvgIcons.faCog} />\r\n          Admin\r\n        </RoundButton>\r\n        <img src={logo} className=\"logo\" alt=\"logo\" />\r\n        <div className=\"title\">Welcome to Reactron</div>\r\n        {info}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import * as SvgCore from '@fortawesome/fontawesome-svg-core';\r\nimport * as BrandIcons from '@fortawesome/free-brands-svg-icons';\r\nimport * as RegularIcons from '@fortawesome/free-regular-svg-icons';\r\nimport * as SolidIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport { IComponentLoader, IModuleRepositoryItem, IReactronComponentDefinition } from '@schirkan/reactron-interfaces';\r\nimport * as React from 'react';\r\nimport * as ReactDom from 'react-dom';\r\nimport * as ReactRouterDom from 'react-router-dom';\r\nimport { apiClient } from './ApiClient';\r\nimport { inernalModuleContext } from './inernalModuleContext';\r\nimport { components as internalComponents } from \"./internalModule\";\r\n\r\n// tslint:disable:no-string-literal\r\n// tslint:disable:no-var-requires\r\n\r\nconst moment = require('moment');\r\nconst momentTimezone = require('moment-timezone');\r\nconst SystemJS = (window as any).System as SystemJSLoader.System;\r\n\r\nconst externalModules = {};\r\nexternalModules['react'] = React;\r\nexternalModules['react-dom'] = ReactDom;\r\nexternalModules['react-router-dom'] = ReactRouterDom;\r\nexternalModules['moment'] = moment;\r\nexternalModules['moment-timezone'] = momentTimezone;\r\nexternalModules['@fortawesome/fontawesome-svg-core'] = SvgCore;\r\nexternalModules['@fortawesome/free-solid-svg-icons'] = SolidIcons;\r\nexternalModules['@fortawesome/free-regular-svg-icons'] = RegularIcons;\r\nexternalModules['@fortawesome/free-brands-svg-icons'] = BrandIcons;\r\nexternalModules['@fortawesome/react-fontawesome'] = FontAwesome;\r\n\r\nif (inernalModuleContext.electron) {\r\n    externalModules['electron'] = inernalModuleContext.electron;\r\n}\r\n\r\nObject.keys(externalModules).forEach(key => {\r\n    const moduleExport = externalModules[key];\r\n    SystemJS.register(key, [], exports => ({ execute: () => exports(moduleExport) }));\r\n});\r\n\r\nexport class ComponentLoader implements IComponentLoader {\r\n    private allComponentsLoaded = false;\r\n    private moduleComponents: { [moduleName: string]: IReactronComponentDefinition[] } = {\r\n        '@schirkan/reactron': internalComponents\r\n    };\r\n\r\n    public async getModuleComponents(moduleName: string): Promise<IReactronComponentDefinition[] | undefined> {\r\n        if (!this.moduleComponents[moduleName]) {\r\n            const modules = await apiClient.getModules();\r\n            const m = modules.find(x => x.name === moduleName);\r\n\r\n            if (!m) {\r\n                console.error('Module not found: ' + moduleName);\r\n                return;\r\n            }\r\n\r\n            await this.registerModuleComponents(m);\r\n        }\r\n\r\n        return this.moduleComponents[moduleName];\r\n    }\r\n\r\n    private async registerModuleComponents(m: IModuleRepositoryItem): Promise<void> {\r\n        if (!m.browserFile) {\r\n            console.log('Module has no browserFile: ' + m.name);\r\n            return;\r\n        }\r\n\r\n        if (this.moduleComponents[m.name]) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            console.log(m.browserFile);\r\n\r\n            const browserFileContent = await SystemJS.import('\\\\' + m.browserFile);\r\n            // tslint:disable-next-line:no-string-literal\r\n            const components = browserFileContent['components'];\r\n\r\n            if (components && typeof components === 'object' && Array.isArray(components)) {\r\n                this.moduleComponents[m.name] = components;\r\n            }\r\n            console.log('Components loaded for module: ' + m.name);\r\n        } catch (error) {\r\n            console.error('Error loading components for module: ' + m.name, error);\r\n        }\r\n    }\r\n\r\n    public async getAllComponents(): Promise<{ [moduleName: string]: IReactronComponentDefinition[] }> {\r\n        if (this.allComponentsLoaded) {\r\n            return this.moduleComponents;\r\n        }\r\n        const modules = await apiClient.getModules();\r\n        for (const m of modules) {\r\n            await this.registerModuleComponents(m);\r\n        }\r\n        this.allComponentsLoaded = true;\r\n        return this.moduleComponents;\r\n    }\r\n}\r\n\r\nexport const componentLoader = new ComponentLoader();","type Callback<TData> = (data?: TData) => any;\r\n\r\nexport class SimpleEvent<TData = undefined> {\r\n    private subscriptions: Array<Callback<TData>> = [];\r\n\r\n    public subscribe(callback: Callback<TData>) {\r\n        this.subscriptions.push(callback);\r\n    }\r\n\r\n    public unsubscribe(callback: Callback<TData>) {\r\n        const index = this.subscriptions.indexOf(callback);\r\n        if (index >= 0) {\r\n            this.subscriptions.splice(index);\r\n        }\r\n    }\r\n\r\n    public async publish(data?: TData): Promise<void> {\r\n        for (const sub of this.subscriptions) {\r\n            await Promise.resolve(sub(data));\r\n        }\r\n    }\r\n}","import { IWebComponentOptions } from \"@schirkan/reactron-interfaces\";\r\nimport * as React from \"react\";\r\nimport { apiClient } from \"src/browser/ApiClient\";\r\nimport { SimpleEvent } from \"./SimpleEvent\";\r\n\r\nexport class OptionsCardContextData {\r\n    public onSave = new SimpleEvent();\r\n    // public onValidate = new SimpleEvent();\r\n    private removedWebComponents: IWebComponentOptions[] = [];\r\n    private changedWebComponents: IWebComponentOptions[] = [];\r\n    private createdWebComponents: IWebComponentOptions[] = [];\r\n\r\n    constructor() {\r\n        this.saveWebComponents = this.saveWebComponents.bind(this);\r\n        this.onSave.subscribe(this.saveWebComponents);\r\n    }\r\n\r\n    private async saveWebComponents(): Promise<void> {\r\n        console.log('removedWebComponents', this.removedWebComponents);\r\n        console.log('createdWebComponents', this.createdWebComponents);\r\n        console.log('changedWebComponents', this.changedWebComponents);\r\n\r\n        // delete webComponents\r\n        for (const item of this.removedWebComponents) {\r\n            await apiClient.deleteWebComponentOptions(item);\r\n        }\r\n\r\n        // add webComponents\r\n        for (const item of this.createdWebComponents) {\r\n            await apiClient.setWebComponentOptions(undefined, item);\r\n        }\r\n\r\n        // change webComponents\r\n        for (const item of this.changedWebComponents) {\r\n            await apiClient.setWebComponentOptions(undefined, item);\r\n        }\r\n\r\n        // reset context\r\n        this.removedWebComponents = [];\r\n        this.changedWebComponents = [];\r\n        this.createdWebComponents = [];\r\n    }\r\n\r\n    public webComponentRemoved(item: IWebComponentOptions) {\r\n        console.log('webComponentRemoved', item);\r\n\r\n        // check if previously created\r\n        const createdItemIndex = this.createdWebComponents.findIndex(x => x.id === item.id);\r\n        if (createdItemIndex >= 0) {\r\n            // remove from createdWebComponents\r\n            this.createdWebComponents.splice(createdItemIndex, 1);\r\n        } else {\r\n            // add to removedWebComponents\r\n            this.removedWebComponents.push(item);\r\n        }\r\n    }\r\n\r\n    public webComponentChanged(item: IWebComponentOptions) {\r\n        console.log('webComponentChanged', item);\r\n\r\n        // check if previously created\r\n        const createdItemIndex = this.createdWebComponents.findIndex(x => x.id === item.id);\r\n        if (createdItemIndex >= 0) {\r\n            // remove old item from createdWebComponents\r\n            this.createdWebComponents.splice(createdItemIndex, 1);\r\n            // and add new item to createdWebComponents\r\n            this.changedWebComponents.push(item);\r\n        } else {\r\n            // remove previously changed items\r\n            this.changedWebComponents = this.changedWebComponents.filter(x => x.id !== item.id);\r\n            // add to changedWebComponents\r\n            this.changedWebComponents.push(item);\r\n        }\r\n    }\r\n\r\n    public webComponentCreated(item: IWebComponentOptions) {\r\n        console.log('webComponentCreated', item);\r\n\r\n        // add to createdWebComponents\r\n        this.createdWebComponents.push(item);\r\n    }\r\n}\r\n\r\nexport const OptionCardContext = React.createContext<OptionsCardContextData>(new OptionsCardContextData());","import * as RegularIcons from '@fortawesome/free-regular-svg-icons';\r\nimport * as SolidIcons from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IReactronComponentDefinition, IWebComponentOptions } from '@schirkan/reactron-interfaces';\r\nimport * as React from 'react';\r\nimport { apiClient } from 'src/browser/ApiClient';\r\nimport { componentLoader } from 'src/browser/ComponentLoader';\r\nimport { getDefaultObjectValue } from 'src/common/optionsHelper';\r\nimport * as uuidv4 from 'uuid/v4';\r\nimport { OptionCardContext, OptionsCardContextData } from '../../OptionCard/OptionCardContext';\r\nimport OptionList from '../../OptionList/OptionList';\r\nimport UiButton from '../../UiButton/UiButton';\r\n\r\nimport './WebComponentForm.css';\r\n\r\ninterface IReactronComponentDefinitionItem {\r\n  key: string;\r\n  moduleName: string;\r\n  definition: IReactronComponentDefinition;\r\n}\r\n\r\ninterface IWebComponentFormProps {\r\n  webComponentId?: string;\r\n  onChange: (webComponentId?: string) => any;\r\n}\r\n\r\ninterface IWebComponentFormState {\r\n  loadingWebComponents: boolean\r\n  loadingComponentDefinitions: boolean\r\n  webComponents: IWebComponentOptions[];\r\n  componentDefinitions: IReactronComponentDefinitionItem[];\r\n  selectedComponentDefinition?: IReactronComponentDefinitionItem;\r\n  selectedWebComponentOptions?: IWebComponentOptions;\r\n}\r\n\r\nexport default class WebComponentForm extends React.Component<IWebComponentFormProps, IWebComponentFormState> {\r\n  public static contextType = OptionCardContext;\r\n\r\n  constructor(props: IWebComponentFormProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loadingWebComponents: true,\r\n      loadingComponentDefinitions: true,\r\n      webComponents: [],\r\n      componentDefinitions: []\r\n    };\r\n\r\n    this.initCurrentComponent = this.initCurrentComponent.bind(this);\r\n    this.onOptionsChange = this.onOptionsChange.bind(this);\r\n    this.removeWebComponent = this.removeWebComponent.bind(this);\r\n    this.onSelectedComponentDefinitionChange = this.onSelectedComponentDefinitionChange.bind(this);\r\n  }\r\n\r\n  private get formEvents(): OptionsCardContextData {\r\n    return (this as any).context as OptionsCardContextData;\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this.loadComponentDefinitions();\r\n    this.loadWebComponents();\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    if (this.state.selectedWebComponentOptions) {\r\n      this.formEvents.webComponentRemoved(this.state.selectedWebComponentOptions);\r\n    }\r\n  }\r\n\r\n  private loadComponentDefinitions() {\r\n    return componentLoader.getAllComponents()\r\n      .then(result => {\r\n        const componentDefinitions: IReactronComponentDefinitionItem[] = [];\r\n        Object.keys(result).forEach(moduleName => {\r\n          const components = result[moduleName];\r\n          components.forEach(definition => {\r\n            const key = moduleName + '.' + definition.name;\r\n            componentDefinitions.push({ moduleName, definition, key });\r\n          });\r\n        });\r\n        this.setState({ componentDefinitions, loadingComponentDefinitions: false },\r\n          this.initCurrentComponent);\r\n      })\r\n      .catch(err => console.log(err)); // TODO\r\n  }\r\n\r\n  private loadWebComponents() {\r\n    return apiClient.getWebComponentOptions()\r\n      .then(webComponents => {\r\n        this.setState({ webComponents, loadingWebComponents: false },\r\n          this.initCurrentComponent);\r\n      })\r\n      .catch(err => console.log(err)); // TODO\r\n  }\r\n\r\n  private initCurrentComponent() {\r\n    if (this.state.loadingWebComponents || this.state.loadingComponentDefinitions) {\r\n      return;\r\n    }\r\n\r\n    if (this.props.webComponentId) {\r\n      const selectedWebComponentOptions = this.state.webComponents.find(x => x.id === this.props.webComponentId);\r\n      if (selectedWebComponentOptions) {\r\n        const key = selectedWebComponentOptions.moduleName + '.' + selectedWebComponentOptions.componentName;\r\n        const selectedComponentDefinition = this.state.componentDefinitions.find(x => x.key === key);\r\n        if (selectedComponentDefinition) {\r\n          this.setState({ selectedComponentDefinition, selectedWebComponentOptions });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private onSelectedComponentDefinitionChange(e: React.ChangeEvent<HTMLSelectElement>) {\r\n    const newKey = e.currentTarget.value;\r\n\r\n    const selectedComponentDefinition = this.state.componentDefinitions.find(x => x.key === newKey);\r\n    const currentWebComponentOptions = this.state.selectedWebComponentOptions;\r\n    let newWebComponentOptions: IWebComponentOptions | undefined;\r\n\r\n    if (selectedComponentDefinition) {\r\n      const id = currentWebComponentOptions && currentWebComponentOptions.id ||\r\n        selectedComponentDefinition.definition.name + '_' + uuidv4();\r\n\r\n      newWebComponentOptions = {\r\n        id,\r\n        moduleName: selectedComponentDefinition.moduleName,\r\n        componentName: selectedComponentDefinition.definition.name,\r\n        options: getDefaultObjectValue(selectedComponentDefinition.definition.fields)\r\n      };\r\n    }\r\n\r\n    // trigger id change\r\n    const newId = newWebComponentOptions && newWebComponentOptions.id;\r\n    if (this.props.webComponentId !== newId) {\r\n      this.props.onChange(newId);\r\n\r\n      if (newWebComponentOptions) {\r\n        // notify component created\r\n        this.formEvents.webComponentCreated(newWebComponentOptions);\r\n      } else if (currentWebComponentOptions) {\r\n        // notify component remove\r\n        this.formEvents.webComponentRemoved(currentWebComponentOptions);\r\n      }\r\n    }\r\n\r\n    this.setState({ selectedWebComponentOptions: newWebComponentOptions, selectedComponentDefinition });\r\n  }\r\n\r\n  private removeWebComponent() {\r\n    if (this.state.selectedWebComponentOptions) {\r\n      // notify component remove\r\n      this.formEvents.webComponentRemoved(this.state.selectedWebComponentOptions);\r\n      this.props.onChange(undefined);\r\n      this.setState({ selectedWebComponentOptions: undefined, selectedComponentDefinition: undefined });\r\n    }\r\n  }\r\n\r\n  private onOptionsChange(newOptions: any) {\r\n    if (!this.state.selectedWebComponentOptions) {\r\n      return;\r\n    }\r\n    const newWebComponentOptions = { ...this.state.selectedWebComponentOptions };\r\n    newWebComponentOptions.options = newOptions;\r\n    this.setState({ selectedWebComponentOptions: newWebComponentOptions });\r\n\r\n    // notify component changed\r\n    this.formEvents.webComponentChanged(newWebComponentOptions);\r\n  }\r\n\r\n  public renderComponentSelection() {\r\n    if (this.state.loadingWebComponents || this.state.loadingComponentDefinitions) {\r\n      return null;\r\n    }\r\n\r\n    const selectedComponentKey = this.state.selectedComponentDefinition && this.state.selectedComponentDefinition.key || '';\r\n\r\n    if (this.state.selectedComponentDefinition) {\r\n      return (\r\n        <div className=\"componentTitle\">\r\n          <UiButton>\r\n            <FontAwesomeIcon icon={SolidIcons.faCube} />\r\n          </UiButton>\r\n          <label>\r\n            {this.state.selectedComponentDefinition.definition.displayName} ({this.state.selectedComponentDefinition.moduleName})\r\n          </label>\r\n          <UiButton onClick={this.removeWebComponent}>\r\n            <FontAwesomeIcon icon={RegularIcons.faTrashAlt} />\r\n          </UiButton>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <select className=\"componentSelect\" value={selectedComponentKey} onChange={this.onSelectedComponentDefinitionChange}>\r\n        <option key=\"_\" value=\"\">Select Component...</option>\r\n        {this.state.componentDefinitions.map(item =>\r\n          <option key={item.key} value={item.key}>{item.definition.displayName} ({item.moduleName})</option>\r\n        )}\r\n      </select>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className=\"WebComponentForm\">\r\n        {this.renderComponentSelection()}\r\n        {this.state.selectedWebComponentOptions &&\r\n          this.state.selectedComponentDefinition && (\r\n            <OptionList value={this.state.selectedWebComponentOptions.options}\r\n              fields={this.state.selectedComponentDefinition.definition.fields}\r\n              valueChange={this.onOptionsChange} />\r\n          )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as BrandIcons from '@fortawesome/free-brands-svg-icons';\r\nimport * as RegularIcons from '@fortawesome/free-regular-svg-icons';\r\nimport * as SolidIcons from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IFieldDefinition } from '@schirkan/reactron-interfaces';\r\nimport * as React from 'react';\r\nimport OptionList from '../OptionList/OptionList';\r\nimport UiButton from '../UiButton/UiButton';\r\nimport ArrayForm from './ArrayForm/ArrayForm';\r\nimport StyleForm from './StyleForm/StyleForm';\r\nimport WebComponentForm from './WebComponentForm/WebComponentForm';\r\n\r\nimport './OptionItem.css';\r\n\r\nlet counter = 0;\r\n\r\ninterface IOptionItemProps {\r\n  definition: IFieldDefinition;\r\n  value: any;\r\n  valueChange: (definition: IFieldDefinition, newValue: any) => void;\r\n}\r\n\r\ninterface IOptionItemState {\r\n  uniqueId: string;\r\n  hasDetails: boolean;\r\n  detailsVisible?: boolean;\r\n}\r\n\r\nexport default class OptionItem extends React.Component<IOptionItemProps, IOptionItemState> {\r\n  constructor(props: IOptionItemProps) {\r\n    super(props);\r\n\r\n    let hasDetails = !!props.definition.isArray || (props.definition.textRows !== undefined && props.definition.textRows > 1);\r\n\r\n    switch (props.definition.valueType) {\r\n      case 'object':\r\n      case 'style':\r\n      case 'webComponent':\r\n        hasDetails = true;\r\n        break;\r\n    }\r\n\r\n    this.state = {\r\n      uniqueId: 'ID' + (counter++),\r\n      hasDetails,\r\n    };\r\n\r\n    this.triggerValueChange = this.triggerValueChange.bind(this);\r\n    this.onInputChange = this.onInputChange.bind(this);\r\n    this.onTextareaChange = this.onTextareaChange.bind(this);\r\n    this.onCheckboxChange = this.onCheckboxChange.bind(this);\r\n    this.onSelectValueChange = this.onSelectValueChange.bind(this);\r\n    this.toggleItemDetails = this.toggleItemDetails.bind(this);\r\n  }\r\n\r\n  private triggerValueChange(newValue: any) {\r\n    this.props.valueChange(this.props.definition, newValue);\r\n  }\r\n\r\n  private renderArray() {\r\n    return (\r\n      <ArrayForm definition={this.props.definition} value={this.props.value} valueChange={this.triggerValueChange} />\r\n    );\r\n  }\r\n\r\n  private renderObject() {\r\n    return (\r\n      <OptionList fields={this.props.definition.fields} value={this.props.value} valueChange={this.triggerValueChange} />\r\n    );\r\n  }\r\n\r\n  private onTextareaChange(e: React.ChangeEvent<HTMLTextAreaElement>) {\r\n    this.triggerValueChange(e.currentTarget.value);\r\n  }\r\n\r\n  private onInputChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n    this.triggerValueChange(e.currentTarget.value);\r\n  }\r\n\r\n  private onSelectValueChange(e: React.ChangeEvent<HTMLSelectElement>) {\r\n    this.triggerValueChange(e.currentTarget.value);\r\n  }\r\n\r\n  private onCheckboxChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n    this.triggerValueChange(e.currentTarget.checked);\r\n  }\r\n\r\n  private renderDropDown() {\r\n    const values = this.props.definition.values || [];\r\n    const options = values.map((item, index) =>\r\n      <option key={index} value={item.value}>{item.text}</option>\r\n    );\r\n\r\n    return (\r\n      <select id={this.state.uniqueId} value={this.props.value} onChange={this.onSelectValueChange}>\r\n        {options}\r\n      </select>\r\n    );\r\n  }\r\n\r\n  private renderTextInput() {\r\n    if (this.props.definition.textRows !== undefined && this.props.definition.textRows > 1) {\r\n      return (\r\n        <textarea id={this.state.uniqueId} value={this.props.value} onChange={this.onTextareaChange} rows={this.props.definition.textRows} />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <input type=\"text\" id={this.state.uniqueId} value={this.props.value} onChange={this.onInputChange} />\r\n    );\r\n  }\r\n\r\n  private renderNumberInput() {\r\n    let inputType = 'number';\r\n\r\n    if (this.props.definition.minValue !== undefined &&\r\n      this.props.definition.maxValue !== undefined) {\r\n      inputType = 'range';\r\n    }\r\n\r\n    return (\r\n      <input type={inputType} id={this.state.uniqueId} value={this.props.value}\r\n        onChange={this.onInputChange} step={this.props.definition.stepSize}\r\n        min={this.props.definition.minValue} max={this.props.definition.maxValue} />\r\n    );\r\n  }\r\n\r\n  private renderBooleanInput() {\r\n    return (\r\n      <input type=\"checkbox\" id={this.state.uniqueId} value={this.props.value} onChange={this.onCheckboxChange} />\r\n    );\r\n  }\r\n\r\n  private renderStyleInput() {\r\n    return (\r\n      <StyleForm value={this.props.value} onChange={this.triggerValueChange} />\r\n    );\r\n  }\r\n\r\n  private renderWebComponentInput() {\r\n    return (\r\n      <WebComponentForm webComponentId={this.props.value} onChange={this.triggerValueChange} />\r\n    );\r\n  }\r\n\r\n  private toggleItemDetails() {\r\n    this.setState(state => ({ detailsVisible: !state.detailsVisible }));\r\n  }\r\n\r\n  private renderItemHeader() {\r\n    let subHeaderText = null;\r\n    let icon = null;\r\n\r\n    if (this.props.definition.isArray) {\r\n      const array = this.props.value as any[] || [];\r\n      subHeaderText = '(' + array.length + ' items)';\r\n      icon = SolidIcons.faList;\r\n    } else if (this.props.definition.valueType === 'string') {\r\n      subHeaderText = this.props.value;\r\n    } else if (this.props.definition.valueType === 'style') {\r\n      subHeaderText = JSON.stringify(this.props.value);\r\n      if(subHeaderText === '{}'){\r\n        subHeaderText = '';\r\n      }\r\n      icon = BrandIcons.faCss3;\r\n    } else if (this.props.definition.valueType === 'webComponent') {\r\n      subHeaderText = this.props.value || 'Component';\r\n      icon = RegularIcons.faFile;\r\n    }\r\n\r\n    return (\r\n      <UiButton className=\"item-header\" onClick={this.toggleItemDetails}>\r\n        <label>\r\n          {this.props.children}\r\n          {icon && (<UiButton><FontAwesomeIcon icon={icon} /></UiButton>)}\r\n          <span className=\"header-text\">{this.props.definition.displayName}</span>\r\n        </label>\r\n        <span className=\"sub-header-text\">{subHeaderText}</span>\r\n        <UiButton>\r\n          <FontAwesomeIcon icon={this.state.detailsVisible ? SolidIcons.faCaretDown : SolidIcons.faCaretRight} />\r\n        </UiButton>\r\n      </UiButton>\r\n    );\r\n  }\r\n\r\n  private renderLabel() {\r\n    if (this.state.hasDetails) {\r\n      return this.renderItemHeader();\r\n    }\r\n    return (\r\n      <label htmlFor={this.state.uniqueId}>\r\n        {this.props.children}\r\n        <span className=\"header-text\">{this.props.definition.displayName}</span>\r\n      </label>\r\n    );\r\n  }\r\n\r\n  private renderInput() {\r\n    if (this.state.hasDetails) {\r\n      return (\r\n        <div className=\"item-details\" hidden={!this.state.detailsVisible} data-isarray={this.props.definition.isArray ? 'true' : 'false'}>\r\n          {this.renderInputControl()}\r\n        </div>\r\n      );\r\n    }\r\n    return this.renderInputControl();\r\n  }\r\n\r\n  private renderInputControl() {\r\n    if (this.props.definition.isArray) {\r\n      return this.renderArray();\r\n    }\r\n\r\n    if (this.props.definition.values && this.props.definition.values.length) {\r\n      return this.renderDropDown();\r\n    }\r\n\r\n    switch (this.props.definition.valueType) {\r\n      case 'number':\r\n        return this.renderNumberInput();\r\n      case 'boolean':\r\n        return this.renderBooleanInput();\r\n      case 'string':\r\n        return this.renderTextInput();\r\n      case 'object':\r\n        return this.renderObject();\r\n      case 'style':\r\n        return this.renderStyleInput();\r\n      case 'webComponent':\r\n        return this.renderWebComponentInput();\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className=\"OptionItem\"\r\n        data-hasdetails={this.state.hasDetails ? 'true' : 'false'}\r\n        data-detailsvisible={this.state.detailsVisible ? 'true' : 'false'}\r\n        data-valuetype={this.props.definition.valueType}>\r\n        {this.renderLabel()}\r\n        {this.renderInput()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { IFieldDefinition } from '@schirkan/reactron-interfaces';\r\nimport * as React from 'react';\r\nimport OptionItem from '../OptionItem/OptionItem';\r\n\r\nimport './OptionList.css';\r\n\r\ninterface IOptionListProps {\r\n  fields?: IFieldDefinition[];\r\n  value: object;\r\n  valueChange: (newValue: object) => void;\r\n}\r\n\r\nexport default class OptionList extends React.Component<IOptionListProps> {\r\n  constructor(props: IOptionListProps) {\r\n    super(props);\r\n\r\n    this.valueChange = this.valueChange.bind(this);\r\n  }\r\n\r\n  private valueChange(field: IFieldDefinition, value: any) {\r\n    const newValue = { ...this.props.value };\r\n    newValue[field.name] = value;\r\n    this.props.valueChange(newValue);\r\n  }\r\n\r\n  public render() {\r\n    if (!this.props.fields || !this.props.fields.length) {\r\n      return null;\r\n      // return <span>No options / fields defined</span>;\r\n    }\r\n\r\n    return (\r\n      <div className=\"OptionList\">\r\n        {this.props.fields.map(field => {\r\n          const value = this.props.value && this.props.value[field.name];\r\n          return <OptionItem key={field.name} definition={field} value={value} valueChange={this.valueChange} />;\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { IconProp } from \"@fortawesome/fontawesome-svg-core\";\r\nimport * as SolidIcons from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IFieldDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport * as React from 'react';\r\nimport { getDefaultFieldValue } from '../../../../common/optionsHelper';\r\nimport OptionList from '../OptionList/OptionList';\r\nimport UiButton from '../UiButton/UiButton';\r\nimport UiCard from '../UiCard/UiCard';\r\nimport UiCardButtonRow from '../UiCardButtonRow/UiCardButtonRow';\r\nimport UiCardContent from '../UiCardContent/UiCardContent';\r\nimport UiCardTitle from '../UiCardTitle/UiCardTitle';\r\nimport { OptionCardContext, OptionsCardContextData } from './OptionCardContext';\r\n\r\nimport './OptionCard.css';\r\n\r\nexport interface IOptionCardProps {\r\n  className?: string;\r\n  icon: IconProp;\r\n  title: string;\r\n  options: object;\r\n  fields: IFieldDefinition[];\r\n  onSave: (newOptions: object) => any;\r\n  onCancel?: () => any;\r\n  showReset?: boolean;\r\n}\r\n\r\ninterface IOptionCardState {\r\n  newOptions: any;\r\n  formContext: OptionsCardContextData;\r\n}\r\n\r\nexport default class OptionCard extends React.Component<IOptionCardProps, IOptionCardState> {\r\n  constructor(props: IOptionCardProps) {\r\n    super(props);\r\n\r\n    const newOptions = this.setDefaultValues(props.options || {});\r\n\r\n    this.state = {\r\n      newOptions,\r\n      formContext: new OptionsCardContextData()\r\n    };\r\n\r\n    this.cancel = this.cancel.bind(this);\r\n    this.save = this.save.bind(this);\r\n    this.reset = this.reset.bind(this);\r\n    this.optionsChange = this.optionsChange.bind(this);\r\n  }\r\n\r\n  // init fields\r\n  private setDefaultValues(options: object) {\r\n    this.props.fields.forEach(field => {\r\n      let value = options[field.name];\r\n\r\n      if (value === undefined) {\r\n        value = getDefaultFieldValue(field);\r\n        if (value !== undefined) {\r\n          options[field.name] = value;\r\n        }\r\n      }\r\n    });\r\n    return options;\r\n  }\r\n\r\n  private reset() {\r\n    const newOptions = this.setDefaultValues(this.props.options || {});\r\n    this.setState({ newOptions });\r\n  }\r\n\r\n  private async save() {\r\n    await this.state.formContext.onSave.publish();\r\n    return this.props.onSave(this.state.newOptions);\r\n  }\r\n\r\n  private cancel() {\r\n    return this.props.onCancel && this.props.onCancel();\r\n  }\r\n\r\n  private optionsChange(newValue: any) {\r\n    this.setState({ newOptions: newValue });\r\n  }\r\n\r\n  public renderTitle() {\r\n    return (\r\n      <UiCardTitle>\r\n        <FontAwesomeIcon icon={this.props.icon} /> {this.props.title}\r\n      </UiCardTitle>\r\n    );\r\n  }\r\n\r\n  public renderContent() {\r\n    return (\r\n      <OptionCardContext.Provider value={this.state.formContext}>\r\n        <OptionList fields={this.props.fields}\r\n          value={this.state.newOptions}\r\n          valueChange={this.optionsChange}\r\n        />\r\n      </OptionCardContext.Provider>\r\n    );\r\n  }\r\n\r\n  public renderFooter() {\r\n    return (\r\n      <UiCardButtonRow divider=\"half\">\r\n        {this.props.onCancel && (\r\n          <UiButton onClick={this.cancel}>\r\n            <FontAwesomeIcon icon={SolidIcons.faTimes} /> Cancel\r\n          </UiButton>\r\n        )}\r\n        {this.props.showReset && (\r\n        <UiButton onClick={this.reset}>\r\n          <FontAwesomeIcon icon={SolidIcons.faUndo} /> Reset\r\n        </UiButton>\r\n        )}\r\n        <UiButton onClick={this.save}>\r\n          <FontAwesomeIcon icon={SolidIcons.faSave} /> Save\r\n        </UiButton>\r\n      </UiCardButtonRow>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    const className = 'OptionCard ' + this.props.className;\r\n\r\n    return (\r\n      <UiCard className={className}>\r\n        {this.renderTitle()}\r\n        {this.renderContent()}\r\n        <UiCardContent className=\"debug\" style={{ whiteSpace: 'pre' }}>\r\n          {JSON.stringify(this.state.newOptions, undefined, 2)}\r\n        </UiCardContent>\r\n        {this.renderFooter()}\r\n      </UiCard >\r\n    );\r\n  }\r\n}\r\n","import * as RegularIcons from '@fortawesome/free-regular-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IWebPageOptions } from \"@schirkan/reactron-interfaces\";\r\nimport * as React from 'react';\r\nimport UiButton from '../../UiButton/UiButton';\r\nimport UiCard from '../../UiCard/UiCard';\r\nimport UiCardButtonRow from '../../UiCardButtonRow/UiCardButtonRow';\r\nimport UiCardContent from '../../UiCardContent/UiCardContent';\r\nimport UiCardTitle from '../../UiCardTitle/UiCardTitle';\r\n\r\nimport './PageCard.css';\r\n\r\nexport interface IPageCardProps {\r\n  page: IWebPageOptions;\r\n  onEdit: (page: IWebPageOptions) => any;\r\n  onDelete: (page: IWebPageOptions) => any;\r\n}\r\n\r\nexport default class PageCard extends React.Component<IPageCardProps> {\r\n  constructor(props: IPageCardProps) {\r\n    super(props);\r\n\r\n    this.onEdit = this.onEdit.bind(this);\r\n    this.onDelete = this.onDelete.bind(this);\r\n  }\r\n\r\n  private onEdit() {\r\n    return this.props.onEdit(this.props.page);\r\n  }\r\n\r\n  private onDelete() {\r\n    return this.props.onDelete(this.props.page);\r\n  }\r\n\r\n  public renderTitle() {\r\n    return (\r\n      <UiCardTitle>\r\n        <FontAwesomeIcon icon={RegularIcons.faFile} /> {this.props.page.title} ({this.props.page.path})\r\n      </UiCardTitle>\r\n    );\r\n  }\r\n\r\n  public renderPath() {\r\n    return (\r\n      <UiCardContent className=\"path\">\r\n        {this.props.page.path}\r\n      </UiCardContent>\r\n    );\r\n  }\r\n\r\n  public renderFooter() {\r\n    return (\r\n      <UiCardButtonRow divider=\"half\">\r\n        <UiButton onClick={this.onEdit}>\r\n          <FontAwesomeIcon icon={RegularIcons.faEdit} /> Edit\r\n        </UiButton>\r\n        <UiButton onClick={this.onDelete}>\r\n          <FontAwesomeIcon icon={RegularIcons.faTrashAlt} /> Delete\r\n        </UiButton>\r\n      </UiCardButtonRow>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <UiCard className=\"PageCard\">\r\n        {this.renderTitle()}\r\n        {/* {this.renderPath()} */}\r\n        {this.renderFooter()}\r\n      </UiCard>\r\n    );\r\n  }\r\n}\r\n","import { IFieldDefinition } from '@schirkan/reactron-interfaces';\r\n\r\nexport const pageOptionsFields: IFieldDefinition[] = [{\r\n  description: 'Path',\r\n  defaultValue: '/',\r\n  displayName: 'Path',\r\n  name: 'path',\r\n  valueType: 'string'\r\n}, {\r\n  description: 'Title',\r\n  defaultValue: 'New Page',\r\n  displayName: 'Title',\r\n  name: 'title',\r\n  valueType: 'string'\r\n}, {\r\n  description: 'Content',\r\n  displayName: 'Content',\r\n  name: 'webComponentId',\r\n  valueType: 'webComponent'\r\n}, {\r\n  description: 'Style',\r\n  displayName: 'Style',\r\n  name: 'style',\r\n  valueType: 'style'\r\n}];","import * as RegularIcons from '@fortawesome/free-regular-svg-icons';\r\nimport * as SolidIcons from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IWebPageOptions } from '@schirkan/reactron-interfaces';\r\nimport * as React from 'react';\r\nimport { apiClient } from '../../../ApiClient';\r\nimport OptionCard from '../OptionCard/OptionCard';\r\nimport UiButton from '../UiButton/UiButton';\r\nimport UiCard from '../UiCard/UiCard';\r\nimport UiFlowLayout from '../UiFlowLayout/UiFlowLayout';\r\nimport UiLoadingCard from '../UiLoadingCard/UiLoadingCard';\r\nimport UiOverlay from '../UiOverlay/UiOverlay';\r\nimport PageCard from './PageCard/PageCard';\r\nimport { pageOptionsFields } from './pageOptionsFields';\r\n\r\nimport './PageManagerPage.css';\r\n\r\nexport interface IModuleManagerPageState {\r\n  loading: boolean;\r\n  pages: IWebPageOptions[];\r\n  showPageDetailsDialog: boolean;\r\n  selectedPage?: IWebPageOptions;\r\n}\r\n\r\nexport default class PageManagerPage extends React.Component<any, IModuleManagerPageState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: true,\r\n      pages: [],\r\n      showPageDetailsDialog: false\r\n    };\r\n\r\n    this.loadPages = this.loadPages.bind(this);\r\n    this.savePage = this.savePage.bind(this);\r\n    this.hidePageDetailsDialog = this.hidePageDetailsDialog.bind(this);\r\n    this.showPageDetailsDialog = this.showPageDetailsDialog.bind(this);\r\n    this.confirmPageDeletion = this.confirmPageDeletion.bind(this);\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this.loadPages();\r\n  }\r\n\r\n  private loadPages(): Promise<void> {\r\n    this.setState({ loading: true });\r\n\r\n    return apiClient.getWebPages()\r\n      .then(pages => this.setState({ pages, loading: false }))\r\n      .catch(err => this.setState({ loading: false })); // TODO\r\n  }\r\n\r\n  private savePage(page: IWebPageOptions): Promise<void> {\r\n    return apiClient.setWebPage(undefined, page)\r\n      .then(this.hidePageDetailsDialog)\r\n      .then(apiClient.getWebPages.clearCache)\r\n      .then(this.loadPages)\r\n      .catch(err => console.log(err)); // TODO\r\n  }\r\n\r\n  private deletePage(page: IWebPageOptions): Promise<void> {\r\n    return apiClient.deleteWebPage(page)\r\n      .then(this.hidePageDetailsDialog)\r\n      .then(apiClient.getWebPages.clearCache)\r\n      .then(this.loadPages)\r\n      .catch(err => console.log(err)); // TODO\r\n  }\r\n\r\n  private showPageDetailsDialog(page?: IWebPageOptions) {\r\n    this.setState({ showPageDetailsDialog: true, selectedPage: page });\r\n  }\r\n\r\n  private hidePageDetailsDialog() {\r\n    this.setState({ showPageDetailsDialog: false, selectedPage: undefined });\r\n  }\r\n\r\n  private confirmPageDeletion(page: IWebPageOptions) {\r\n    if (window.confirm(\"Delete?\")) {\r\n      this.deletePage(page);\r\n    }\r\n  }\r\n\r\n  private renderPageCards() {\r\n    if (this.state.loading) {\r\n      return <UiFlowLayout><UiLoadingCard /></UiFlowLayout>;\r\n    }\r\n\r\n    return (\r\n      <UiFlowLayout>\r\n        {this.state.pages.map((item, index) =>\r\n          <PageCard key={index} page={item} onEdit={this.showPageDetailsDialog}\r\n            onDelete={this.confirmPageDeletion} />\r\n        )}\r\n      </UiFlowLayout>\r\n    );\r\n  }\r\n\r\n  private renderPageAddCard() {\r\n    return (\r\n      <UiFlowLayout>\r\n        <UiCard className=\"AddPageCard\">\r\n          <UiButton className=\"addButton\" onClick={this.showPageDetailsDialog}>\r\n            <FontAwesomeIcon icon={SolidIcons.faPlus} /> Add Page\r\n          </UiButton>\r\n        </UiCard>\r\n      </UiFlowLayout>\r\n    );\r\n  }\r\n\r\n  private renderPageDetailsDialog() {\r\n    if (!this.state.showPageDetailsDialog) {\r\n      return null;\r\n    }\r\n\r\n    const page = this.state.selectedPage;\r\n    const title = page ? 'Edit Page' : 'Add Page';\r\n\r\n    return (\r\n      <UiOverlay>\r\n        <OptionCard icon={RegularIcons.faFile}\r\n          title={title} fields={pageOptionsFields}\r\n          onSave={this.savePage} onCancel={this.hidePageDetailsDialog} options={page || {}}\r\n        />\r\n      </UiOverlay>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <section className=\"PageManagerPage\">\r\n        {this.renderPageAddCard()}\r\n        {this.renderPageCards()}\r\n        {this.renderPageDetailsDialog()}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import * as RegularIcons from '@fortawesome/free-regular-svg-icons';\r\nimport * as SolidIcons from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IServiceRepositoryItem } from '@schirkan/reactron-interfaces';\r\nimport * as React from 'react';\r\nimport UiButton from '../../UiButton/UiButton';\r\nimport UiCard from '../../UiCard/UiCard';\r\nimport UiCardButtonRow from '../../UiCardButtonRow/UiCardButtonRow';\r\nimport UiCardContent from '../../UiCardContent/UiCardContent';\r\nimport UiCardTitle from '../../UiCardTitle/UiCardTitle';\r\n\r\nimport './ServiceCard.css';\r\n\r\nexport interface IServiceCardProps {\r\n  service: IServiceRepositoryItem;\r\n  onShowLog: (service: IServiceRepositoryItem) => void;\r\n  onShowOptions: (service: IServiceRepositoryItem) => void;\r\n}\r\n\r\nexport default class ServiceCard extends React.Component<IServiceCardProps> {\r\n  constructor(props: IServiceCardProps) {\r\n    super(props);\r\n\r\n    this.showOptions = this.showOptions.bind(this);\r\n    this.showLog = this.showLog.bind(this);\r\n  }\r\n\r\n  private showOptions() {\r\n    return this.props.onShowOptions(this.props.service);\r\n  }\r\n\r\n  private showLog() {\r\n    return this.props.onShowLog(this.props.service);\r\n  }\r\n\r\n  public renderTitle() {\r\n    return (\r\n      <UiCardTitle>\r\n        <FontAwesomeIcon icon={SolidIcons.faCogs} /> {this.props.service.name}\r\n      </UiCardTitle>\r\n    );\r\n  }\r\n\r\n  public renderDescription() {\r\n    return (\r\n      <UiCardContent className=\"description\">\r\n        {this.props.service.description || 'no description'}\r\n      </UiCardContent>\r\n    );\r\n  }\r\n\r\n  public renderFooter() {\r\n    return (\r\n      <UiCardButtonRow divider=\"half\">\r\n        <UiButton onClick={this.showLog}>\r\n          <FontAwesomeIcon icon={RegularIcons.faFile} /> Log\r\n        </UiButton>\r\n        <UiButton onClick={this.showOptions}>\r\n          <FontAwesomeIcon icon={SolidIcons.faCog} /> Options\r\n        </UiButton>\r\n      </UiCardButtonRow>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <UiCard className=\"ServiceCard\">\r\n        {this.renderTitle()}\r\n        {this.renderDescription()}\r\n        {this.renderFooter()}\r\n      </UiCard>\r\n    );\r\n  }\r\n}\r\n","import * as SolidIcons from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IServiceRepositoryItem } from '@schirkan/reactron-interfaces';\r\nimport * as React from 'react';\r\nimport UiButton from '../../UiButton/UiButton';\r\nimport UiFlowLayout from '../../UiFlowLayout/UiFlowLayout';\r\nimport ServiceCard from '../ServiceCard/ServiceCard';\r\n\r\nimport './ServiceGroup.css';\r\n\r\nexport interface IModuleManagerPageProps {\r\n  services: IServiceRepositoryItem[];\r\n  moduleName: string;\r\n  onShowServiceLog: (service: IServiceRepositoryItem) => any;\r\n  onShowServiceOptions: (service: IServiceRepositoryItem) => any;\r\n}\r\n\r\nexport interface IModuleManagerPageState {\r\n  groupOpen: boolean;\r\n}\r\n\r\nexport default class ServiceGroup extends React.Component<IModuleManagerPageProps, IModuleManagerPageState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      groupOpen: false\r\n    };\r\n\r\n    this.toggleGroup = this.toggleGroup.bind(this);\r\n  }\r\n\r\n  private toggleGroup() {\r\n    this.setState(state => ({ groupOpen: !state.groupOpen }));\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <section className=\"ServiceGroup\">\r\n        <UiButton className=\"group-header\" onClick={this.toggleGroup}>\r\n          <FontAwesomeIcon icon={SolidIcons.faCube} /> {this.props.moduleName} ({this.props.services.length})\r\n          <FontAwesomeIcon icon={this.state.groupOpen ? SolidIcons.faArrowDown : SolidIcons.faArrowRight} />\r\n        </UiButton>\r\n        {this.state.groupOpen && (\r\n          <UiFlowLayout>\r\n            {this.props.services.map(item =>\r\n              <ServiceCard key={item.name} service={item} onShowLog={this.props.onShowServiceLog} onShowOptions={this.props.onShowServiceOptions} />\r\n            )}\r\n          </UiFlowLayout>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}","import * as RegularIcons from '@fortawesome/free-regular-svg-icons';\r\nimport * as SolidIcons from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IServiceRepositoryItem } from '@schirkan/reactron-interfaces';\r\nimport * as React from 'react';\r\nimport { apiClient } from '../../../ApiClient';\r\nimport Loading from '../../Loading/Loading';\r\nimport OptionCard from '../OptionCard/OptionCard';\r\nimport UiButton from '../UiButton/UiButton';\r\nimport UiCard from '../UiCard/UiCard';\r\nimport UiCardButtonRow from '../UiCardButtonRow/UiCardButtonRow';\r\nimport UiCardContent from '../UiCardContent/UiCardContent';\r\nimport UiCardTitle from '../UiCardTitle/UiCardTitle';\r\nimport UiLoadingCard from '../UiLoadingCard/UiLoadingCard';\r\nimport UiOverlay from '../UiOverlay/UiOverlay';\r\nimport ServiceGroup from './ServiceGroup/ServiceGroup';\r\n\r\nimport './ServiceManagerPage.css';\r\n\r\nexport interface IModuleManagerPageState {\r\n  loadingServices: boolean;\r\n  loadingServiceOptions: boolean;\r\n  services: IServiceRepositoryItem[];\r\n  showOptions: boolean,\r\n  showLog: boolean,\r\n  selectedService: IServiceRepositoryItem | undefined;\r\n  selectedServiceOptions: any;\r\n}\r\n\r\nexport default class ServiceManagerPage extends React.Component<any, IModuleManagerPageState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loadingServices: true,\r\n      loadingServiceOptions: false,\r\n      services: [],\r\n      showOptions: false,\r\n      showLog: false,\r\n      selectedService: undefined,\r\n      selectedServiceOptions: undefined\r\n    };\r\n\r\n    this.showLog = this.showLog.bind(this);\r\n    this.closeLog = this.closeLog.bind(this);\r\n    this.showOptions = this.showOptions.bind(this);\r\n    this.closeOptions = this.closeOptions.bind(this);\r\n    this.loadOptions = this.loadOptions.bind(this);\r\n    this.saveOptions = this.saveOptions.bind(this);\r\n    this.optionsChange = this.optionsChange.bind(this);\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this.loadServices();\r\n  }\r\n\r\n  public loadServices() {\r\n    return apiClient.getAllServices()\r\n      .then(services => this.setState({ services, loadingServices: false }))\r\n      .catch(err => this.setState({ loadingServices: false })); // TODO\r\n  }\r\n\r\n  private showLog(service: IServiceRepositoryItem) {\r\n    this.setState({ showLog: true, selectedService: service });\r\n  }\r\n\r\n  private showOptions(service: IServiceRepositoryItem) {\r\n    this.setState({\r\n      showOptions: true,\r\n      selectedService: service,\r\n      selectedServiceOptions: undefined\r\n    }, this.loadOptions);\r\n  }\r\n\r\n  private closeOptions() {\r\n    this.setState({ showOptions: false, selectedService: undefined });\r\n  }\r\n\r\n  private closeLog() {\r\n    this.setState({ showLog: false, selectedService: undefined });\r\n  }\r\n\r\n  private loadOptions() {\r\n    if (!this.state.selectedService) {\r\n      return;\r\n    }\r\n\r\n    this.setState({ loadingServiceOptions: true });\r\n\r\n    apiClient.getServiceOptions({\r\n      moduleName: this.state.selectedService.moduleName,\r\n      serviceName: this.state.selectedService.name\r\n    })\r\n      .then(options => {\r\n        this.setState({ selectedServiceOptions: options, loadingServiceOptions: false })\r\n      });\r\n  }\r\n\r\n  private optionsChange(newOptions: any) {\r\n    this.setState({ selectedServiceOptions: newOptions })\r\n  }\r\n\r\n  private saveOptions(newOptions: any) {\r\n    if (!this.state.selectedService) {\r\n      return;\r\n    }\r\n\r\n    apiClient.setServiceOptions({\r\n      moduleName: this.state.selectedService.moduleName,\r\n      serviceName: this.state.selectedService.name\r\n    },\r\n      newOptions\r\n    );\r\n\r\n    this.closeOptions();\r\n  }\r\n\r\n  private renderServiceOptionsDialog() {\r\n    if (!this.state.showOptions || !this.state.selectedService) {\r\n      return null;\r\n    }\r\n    if (this.state.loadingServiceOptions) {\r\n      return <UiOverlay><UiLoadingCard /></UiOverlay>;\r\n    }\r\n\r\n    const title = 'Options for ' + this.state.selectedService.displayName;\r\n\r\n    return (\r\n      <UiOverlay>\r\n        <OptionCard icon={SolidIcons.faCogs} showReset={true}\r\n          title={title} fields={this.state.selectedService.fields || []}\r\n          options={this.state.selectedServiceOptions}\r\n          onSave={this.saveOptions} onCancel={this.closeOptions}\r\n        />\r\n      </UiOverlay>\r\n    );\r\n  }\r\n\r\n  private renderServiceLogDialog() {\r\n    if (!this.state.showLog || !this.state.selectedService) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <UiOverlay>\r\n        <UiCard className=\"ServiceLogCard\">\r\n          <UiCardTitle>\r\n          <FontAwesomeIcon icon={RegularIcons.faFile} /> Log for {this.state.selectedService.displayName}\r\n          </UiCardTitle>\r\n          <UiCardContent>\r\n            <ul>\r\n              {this.state.selectedService.log.map(item => (\r\n                <li>{item}</li>\r\n              ))}\r\n            </ul>\r\n          </UiCardContent>\r\n          <UiCardButtonRow divider=\"full\">\r\n            <UiButton onClick={this.closeLog}>\r\n              <FontAwesomeIcon icon={SolidIcons.faTimes} /> Close\r\n            </UiButton>\r\n          </UiCardButtonRow>\r\n        </UiCard>\r\n      </UiOverlay>\r\n    );\r\n  }\r\n\r\n  private renderServiceGroups() {\r\n    if (this.state.loadingServices) {\r\n      return <Loading center={true} />;\r\n    }\r\n\r\n    const groups = this.state.services.map(x => x.moduleName).filter(onlyUnique);\r\n\r\n    return groups.map(moduleName => {\r\n      const services = this.state.services.filter(x => x.moduleName === moduleName); // TODO: .sort((a, b) => a.displayName > b.displayName)\r\n      return (\r\n        <ServiceGroup key={moduleName} moduleName={moduleName} services={services}\r\n          onShowServiceLog={this.showLog} onShowServiceOptions={this.showOptions} />\r\n      );\r\n    });\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <section className=\"ServiceManagerPage\">\r\n        {this.renderServiceGroups()}\r\n        {this.renderServiceOptionsDialog()}\r\n        {this.renderServiceLogDialog()}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nfunction onlyUnique(value: any, index: number, self: any[]) {\r\n  return self.indexOf(value) === index;\r\n}","import { IFieldDefinition } from '@schirkan/reactron-interfaces';\r\n\r\nexport const systemSettingsFields: IFieldDefinition[] = [{\r\n  description: 'Language',\r\n  displayName: 'Language',\r\n  name: 'lang',\r\n  valueType: 'string',\r\n  values: [\r\n    { value: 'de-DE', text: 'German' },\r\n    { value: 'en-GB', text: 'English' },\r\n    { value: 'fr-FR', text: 'French' },\r\n  ]\r\n}, {\r\n  description: 'Location',\r\n  displayName: 'Location',\r\n  name: 'location',\r\n  valueType: 'string'\r\n}, {\r\n  description: 'Timezone',\r\n  displayName: 'Timezone',\r\n  name: 'timezone',\r\n  valueType: 'string',\r\n  values: [\r\n    { value: 'Europe/Berlin', text: 'Europe/Berlin' },\r\n    { value: 'Europe/London', text: 'Europe/London' },\r\n    { value: 'Asia/Tokyo', text: 'Asia/Tokyo' },\r\n    { value: 'America/New_York', text: 'America/New York' },\r\n  ]\r\n}, {\r\n  description: 'Path of page to show on startup',\r\n  displayName: 'Startup Path',\r\n  name: 'startupPath',\r\n  valueType: 'string'\r\n}];","import * as SolidIcons from '@fortawesome/free-solid-svg-icons';\r\nimport { ISystemSettings } from '@schirkan/reactron-interfaces';\r\nimport * as React from 'react';\r\nimport { apiClient } from '../../../ApiClient';\r\nimport OptionCard from '../OptionCard/OptionCard';\r\nimport UiFlowLayout from '../UiFlowLayout/UiFlowLayout';\r\nimport UiLoadingCard from '../UiLoadingCard/UiLoadingCard';\r\nimport { systemSettingsFields } from './systemSettingsFields';\r\n\r\nimport './SettingsManagerPage.css';\r\n\r\nexport interface IModuleManagerPageState {\r\n  loading: boolean;\r\n  settings?: ISystemSettings;\r\n}\r\n\r\nexport default class SettingsManagerPage extends React.Component<any, IModuleManagerPageState>{\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    this.state = { loading: true };\r\n\r\n    this.loadSettings = this.loadSettings.bind(this);\r\n    this.saveSettings = this.saveSettings.bind(this);\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this.loadSettings();\r\n  }\r\n\r\n  public loadSettings(): Promise<void> {\r\n    return apiClient.getSettings()\r\n      .then(settings => this.setState({ settings, loading: false }))\r\n      .catch(); // TODO\r\n  }\r\n\r\n  public saveSettings(newSettings: ISystemSettings): Promise<void> {\r\n    return apiClient.setSettings(undefined, newSettings)\r\n      .then(apiClient.getSettings.clearCache)\r\n      .catch(); // TODO\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <section className=\"SettingsManagerPage\">\r\n        {this.state.loading && (\r\n          <UiFlowLayout>\r\n            <UiLoadingCard />\r\n          </UiFlowLayout>\r\n        )}\r\n        {this.state.settings && (\r\n          <UiFlowLayout>\r\n            <OptionCard options={this.state.settings} onSave={this.saveSettings}\r\n              fields={systemSettingsFields} icon={SolidIcons.faCogs}\r\n              title=\"Settings\" showReset={true}\r\n            />\r\n          </UiFlowLayout>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import * as SvgIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport { IServerInfo } from '../../../../interfaces/IServerInfo';\r\nimport { apiClient } from '../../../ApiClient';\r\nimport Loading from '../../Loading/Loading';\r\nimport UiButton from '../UiButton/UiButton';\r\nimport UiCard from '../UiCard/UiCard';\r\nimport UiCardButtonRow from '../UiCardButtonRow/UiCardButtonRow';\r\nimport UiCardContent from '../UiCardContent/UiCardContent';\r\nimport UiCardTitle from '../UiCardTitle/UiCardTitle';\r\nimport UiFlowLayout from '../UiFlowLayout/UiFlowLayout';\r\n\r\nimport './SystemPage.css';\r\n\r\ninterface ISystemPageState {\r\n  info?: IServerInfo;\r\n}\r\n\r\nexport default class SystemPage extends React.Component<any, ISystemPageState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {};\r\n\r\n    this.exitApplication = this.exitApplication.bind(this);\r\n    this.restartApplication = this.restartApplication.bind(this);\r\n    this.shutdownSystem = this.shutdownSystem.bind(this);\r\n    this.rebootSystem = this.rebootSystem.bind(this);\r\n    this.resetApplication = this.resetApplication.bind(this);\r\n  }\r\n\r\n  public componentDidMount() {\r\n    apiClient.getServerInfo().then(info => this.setState({ info }));\r\n  }\r\n\r\n  // TODO: confirm dialog\r\n\r\n  public exitApplication() {\r\n    return apiClient.exitApplication();\r\n  }\r\n\r\n  public restartApplication() {\r\n    return apiClient.restartApplication();\r\n  }\r\n\r\n  public shutdownSystem() {\r\n    return apiClient.shutdownSystem();\r\n  }\r\n\r\n  public rebootSystem() {\r\n    return apiClient.rebootSystem();\r\n  }\r\n\r\n  public resetApplication() {\r\n    return apiClient.resetApplication();\r\n  }\r\n\r\n  public renderInformationCard() {\r\n    let content;\r\n    if (!this.state.info) {\r\n      content = <Loading />;\r\n    } else {\r\n      const free = Math.round(this.state.info.memory.free / 1024 / 1024);\r\n      const total = Math.round(this.state.info.memory.total / 1024 / 1024);\r\n      content = (\r\n        <ul>\r\n          <li>\r\n            <span>Version</span>\r\n            <span>{this.state.info.version}</span>\r\n          </li>\r\n          <li>\r\n            <span>CPU</span>\r\n            <span>{this.state.info.cpu.count} x {this.state.info.cpu.speed} MHz</span>\r\n          </li>\r\n          <li>\r\n            <span>Memory</span>\r\n            <span>{free} MB / {total} MB</span>\r\n          </li>\r\n          <li>\r\n            <span>IP</span>\r\n            <span>{this.state.info.ip}</span>\r\n          </li>\r\n          <li>\r\n            <span>Hostname</span>\r\n            <span>{this.state.info.hostname}</span>\r\n          </li>\r\n        </ul>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <UiCard className=\"information\">\r\n        <UiCardTitle>Information</UiCardTitle>\r\n        <UiCardContent>{content}</UiCardContent>\r\n      </UiCard>\r\n    );\r\n  }\r\n\r\n  public renderApplicationCard() {\r\n    return (\r\n      <UiCard>\r\n        <UiCardTitle>Application</UiCardTitle>\r\n        <UiCardButtonRow divider=\"half\">\r\n          <UiButton onClick={this.exitApplication}>\r\n            <FontAwesome.FontAwesomeIcon icon={SvgIcons.faSignOutAlt} /> Exit\r\n          </UiButton>\r\n          <UiButton onClick={this.restartApplication}>\r\n            <FontAwesome.FontAwesomeIcon icon={SvgIcons.faRedo} /> Restart\r\n          </UiButton>\r\n        </UiCardButtonRow>\r\n      </UiCard>\r\n    );\r\n  }\r\n\r\n  public renderSystemCard() {\r\n    return (\r\n      <UiCard>\r\n        <UiCardTitle>System</UiCardTitle>\r\n        <UiCardButtonRow divider=\"half\">\r\n          <UiButton onClick={this.shutdownSystem}>\r\n            <FontAwesome.FontAwesomeIcon icon={SvgIcons.faPowerOff} /> Shutdown\r\n          </UiButton>\r\n          <UiButton onClick={this.rebootSystem}>\r\n            <FontAwesome.FontAwesomeIcon icon={SvgIcons.faRedo} /> Reboot\r\n          </UiButton>\r\n        </UiCardButtonRow>\r\n      </UiCard>\r\n    );\r\n  }\r\n\r\n  public renderDangerCard() {\r\n    return (\r\n      <UiCard className=\"danger\">\r\n        <UiCardTitle>Danger Zone</UiCardTitle>\r\n        <UiCardButtonRow>\r\n          <UiButton onClick={this.resetApplication}>\r\n            <FontAwesome.FontAwesomeIcon icon={SvgIcons.faExclamationTriangle} /> Reset Application\r\n          </UiButton>\r\n        </UiCardButtonRow>\r\n      </UiCard>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <section className=\"SystemPage\">\r\n        <UiFlowLayout>\r\n          {this.renderInformationCard()}\r\n          {this.renderApplicationCard()}\r\n          {this.renderSystemCard()}\r\n          {this.renderDangerCard()}\r\n        </UiFlowLayout>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import * as SvgIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport RoundButton from '../RoundButton/RoundButton';\r\nimport ModuleManagerPage from './ModuleManagerPage/ModuleManagerPage';\r\nimport Navigation from './Navigation/Navigation';\r\nimport PageManagerPage from './PageManagerPage/PageManagerPage';\r\nimport ServiceManagerPage from './ServiceManagerPage/ServiceManagerPage';\r\nimport SettingsManagerPage from './SettingsManagerPage/SettingsManagerPage';\r\nimport SystemPage from './SystemPage/SystemPage';\r\n\r\nimport './Admin.css';\r\n\r\nexport default class Admin extends React.Component {\r\n  public render() {\r\n    return (\r\n      <section className=\"Admin\">\r\n        <header>\r\n          <RoundButton to=\"/\">\r\n            <FontAwesome.FontAwesomeIcon icon={SvgIcons.faHome} /> Home\r\n          </RoundButton>\r\n          <div className=\"title\">Reactron Admin</div>\r\n        </header>\r\n        <Navigation />\r\n        <div className=\"content\">\r\n          <Switch>\r\n            <Route path=\"/admin/ModuleManager\" component={ModuleManagerPage} />\r\n            <Route path=\"/admin/ServiceManager\" component={ServiceManagerPage} />\r\n            <Route path=\"/admin/Pages\" component={PageManagerPage} />\r\n            <Route path=\"/admin/Settings\" component={SettingsManagerPage} />\r\n            <Route path=\"/admin/System\" component={SystemPage} />\r\n            <Redirect to=\"/admin/ModuleManager\" />\r\n          </Switch>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import * as SvgIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport RoundButton from '../RoundButton/RoundButton';\r\nimport { IPageNotFoundProps } from './IPageNotFoundProps';\r\n\r\nimport './PageNotFound.css'\r\n\r\nexport default class PageNotFound extends React.Component<IPageNotFoundProps> {\r\n  public render() {\r\n    return (\r\n      <div className=\"PageNotFound\">\r\n        <h1><FontAwesome.FontAwesomeIcon icon={SvgIcons.faQuestionCircle} /> 404</h1>\r\n        <h2>No page defined for path: {this.props.location.pathname}</h2>\r\n        <RoundButton to=\"/admin\">\r\n          <FontAwesome.FontAwesomeIcon icon={SvgIcons.faCog} /> Admin\r\n        </RoundButton>\r\n        <RoundButton to=\"/\">\r\n          <FontAwesome.FontAwesomeIcon icon={SvgIcons.faHome} /> Home\r\n        </RoundButton>\r\n      </div >\r\n    );\r\n  }\r\n}","import { SizeProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { IReactronComponentContext } from '@schirkan/reactron-interfaces';\r\nimport React from 'react';\r\nimport { BrowserModuleContext } from \"./BrowserModuleContext\";\r\nimport { componentLoader } from './ComponentLoader';\r\nimport Loading from \"./components/Loading/Loading\";\r\nimport WebComponent, { IWebComponentProps } from \"./components/WebComponent/WebComponent\";\r\n\r\nexport class WebComponentContext extends BrowserModuleContext implements IReactronComponentContext {\r\n    public renderLoading: (text?: string, iconSize?: SizeProp) => any;\r\n    public renderComponent: (props: IWebComponentProps) => any;\r\n    public readonly componentLoader = componentLoader;\r\n\r\n    constructor(moduleName: string, public readonly componentName: string) {\r\n        super(moduleName);\r\n\r\n        this.renderComponent = (props: IWebComponentProps) => {\r\n            return <WebComponent {...props} />;\r\n        };\r\n\r\n        this.renderLoading = (text?: string, iconSize?: SizeProp) => {\r\n            return <Loading text={text} iconSize={iconSize} />;\r\n        };\r\n    }\r\n}\r\n\r\nexport const WebComponentContextType = React.createContext<IReactronComponentContext>(new WebComponentContext('', ''));","import * as SvgIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport * as React from 'react';\r\nimport RoundButton from '../RoundButton/RoundButton';\r\nimport { IComponentNotFoundProps } from './IComponentNotFoundProps';\r\n\r\nimport './ComponentNotFound.css';\r\n\r\nexport default class ComponentNotFound extends React.Component<IComponentNotFoundProps> {\r\n  public static defaultProps: Partial<IComponentNotFoundProps> = {\r\n    iconSize: \"4x\"\r\n  };\r\n\r\n  public render() {\r\n    const text = [];\r\n    if (this.props.id) {\r\n      text.push('Id: ' + this.props.id);\r\n    }\r\n    if (this.props.componentName) {\r\n      text.push('Component: ' + this.props.componentName);\r\n    }\r\n    if (this.props.moduleName) {\r\n      text.push('Module: ' + this.props.moduleName);\r\n    }\r\n\r\n    return (\r\n      <section className=\"ComponentNotFound\">\r\n        <FontAwesome.FontAwesomeIcon icon={SvgIcons.faExclamationTriangle} size={this.props.iconSize} />\r\n        <div className=\"text\">Component not found: {text.join(' | ')}</div>\r\n        <RoundButton to=\"/admin\">\r\n          <FontAwesome.FontAwesomeIcon icon={SvgIcons.faCog} /> Admin\r\n        </RoundButton>\r\n      </section>\r\n    );\r\n  }\r\n}","import * as React from 'react';\r\n\r\ninterface IErrorBoundaryState {\r\n  error: any;\r\n}\r\n\r\nexport default class ErrorBoundary extends React.Component<any, IErrorBoundaryState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = { error: null };\r\n  }\r\n\r\n  public componentDidCatch(error: any, info: any) {\r\n    console.log(error);\r\n    console.log(info);\r\n    this.setState({ error });\r\n  }\r\n\r\n  public render() {\r\n    if (this.state.error) {\r\n      return <h1>Something went wrong.</h1>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}","import { IReactronComponentContext, IReactronComponentDefinition, IWebComponentOptions } from '@schirkan/reactron-interfaces';\r\nimport * as React from 'react';\r\nimport { WebComponentContext } from 'src/browser/WebComponentContext';\r\nimport { apiClient } from '../../ApiClient';\r\nimport { componentLoader } from '../../ComponentLoader';\r\nimport { WebComponentContextType } from '../../WebComponentContext';\r\nimport ComponentNotFound from '../ComponentNotFound/ComponentNotFound';\r\nimport ErrorBoundary from '../ErrorBoundary/ErrorBoundary';\r\nimport Loading from '../Loading/Loading';\r\n\r\nimport './WebComponent.css';\r\n\r\nexport interface IWebComponentProps {\r\n  id?: string;\r\n  moduleName?: string;\r\n  componentName?: string;\r\n  options?: any;\r\n}  \r\n\r\ninterface IWebComponentState {\r\n  componentFound?: boolean;\r\n  componentContext?: IReactronComponentContext;\r\n  componentDefinition?: IReactronComponentDefinition;\r\n  componentOptions?: IWebComponentOptions;\r\n}\r\n\r\nexport default class WebComponent extends React.Component<IWebComponentProps, IWebComponentState> {\r\n  constructor(props: IWebComponentProps) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: IWebComponentProps, prevState: IWebComponentState) {\r\n    if (this.props.id !== prevProps.id ||\r\n      this.props.moduleName !== prevProps.moduleName ||\r\n      this.props.componentName !== prevProps.componentName ||\r\n      this.props.options !== prevProps.options) {\r\n      this.loadComponent();\r\n    }\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this.loadComponent();\r\n  }\r\n\r\n  private async loadComponent() {\r\n    try {\r\n      let webComponentOptions: IWebComponentOptions | undefined;\r\n\r\n      // nur mit der ID lesen\r\n      if (this.props.id) {\r\n        const allComponentOptions = await apiClient.getWebComponentOptions();\r\n        webComponentOptions = allComponentOptions.find(x => x.id === this.props.id);\r\n      } else if (this.props.moduleName && this.props.componentName) {\r\n        webComponentOptions = {\r\n          id: '',\r\n          moduleName: this.props.moduleName,\r\n          componentName: this.props.componentName,\r\n          options: this.props.options,\r\n        };\r\n      }\r\n\r\n      if (!webComponentOptions) {\r\n        this.setState({ componentFound: false });\r\n        return;\r\n      }\r\n\r\n      const moduleComponents = await componentLoader.getModuleComponents(webComponentOptions.moduleName);\r\n      if (!moduleComponents) {\r\n        this.setState({ componentFound: false });\r\n        return;\r\n      }\r\n\r\n      const componentName = webComponentOptions.componentName;\r\n      const componentDefinition = moduleComponents.find(x => x.name === componentName);\r\n      if (!componentDefinition || !componentDefinition.component) {\r\n        this.setState({ componentFound: false });\r\n        return;\r\n      }\r\n\r\n      this.setState({\r\n        componentContext: new WebComponentContext(webComponentOptions.moduleName, webComponentOptions.componentName),\r\n        componentDefinition,\r\n        componentOptions: webComponentOptions,\r\n        componentFound: true\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      this.setState({ componentFound: false });\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    let content = <Loading center={true} />;\r\n\r\n    if (this.state.componentFound === false) {\r\n      content = <ComponentNotFound {...this.props} />;\r\n    }\r\n\r\n    if (this.state.componentDefinition && this.state.componentDefinition.component && this.state.componentContext) {\r\n      const Component = this.state.componentDefinition.component as typeof React.Component;\r\n\r\n      // set contextType\r\n      if(!Component.contextType){\r\n        Component.contextType = WebComponentContextType;\r\n      }\r\n\r\n      const props = this.state.componentOptions && this.state.componentOptions.options || {}; \r\n\r\n      // render context and component\r\n      content = (\r\n        <WebComponentContextType.Provider value={this.state.componentContext}>\r\n          <Component {...props} />\r\n        </WebComponentContextType.Provider>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <section className=\"WebComponent\">\r\n        <ErrorBoundary>\r\n          {content}\r\n        </ErrorBoundary>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import { IWebPageOptions } from '@schirkan/reactron-interfaces';\r\nimport * as React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport { inernalModuleContext } from 'src/browser/inernalModuleContext';\r\nimport { apiClient } from '../../ApiClient';\r\nimport Admin from '../Admin/Admin';\r\nimport Loading from '../Loading/Loading';\r\nimport PageNotFound from '../PageNotFound/PageNotFound';\r\nimport WebComponent from '../WebComponent/WebComponent';\r\n\r\nimport './App.css';\r\n\r\nexport interface IAppState {\r\n  pages?: IWebPageOptions[];\r\n}\r\n\r\nexport default class App extends React.Component<{}, IAppState> {\r\n  private reloadTimer: number;\r\n  private reloadWait: number = 2000;\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {};\r\n    this.reload = this.reload.bind(this);\r\n    this.triggerReload = this.triggerReload.bind(this);\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this.loadPages();\r\n\r\n    // register page/component change event\r\n    if (inernalModuleContext.topics) {\r\n      inernalModuleContext.topics.subscribe('pages-updated', this.triggerReload);\r\n      inernalModuleContext.topics.subscribe('components-updated', this.triggerReload);\r\n      inernalModuleContext.topics.subscribe('system-settings-updated', this.triggerReload);\r\n    }\r\n  }\r\n\r\n  private async loadPages() {\r\n    const pages = await apiClient.getWebPages();\r\n    return this.setState({ pages });\r\n  }\r\n\r\n  private triggerReload() {\r\n    console.log('triggerReload', arguments);\r\n    window.clearTimeout(this.reloadTimer);\r\n    this.reloadTimer = window.setTimeout(this.reload, this.reloadWait);\r\n  }\r\n\r\n  private reload() {\r\n    apiClient.getWebPages.clearCache();\r\n    apiClient.getWebComponentOptions.clearCache();\r\n    this.loadPages();\r\n  }\r\n\r\n  public renderPage(id: string, style: any) {\r\n    return () => (\r\n      <section className=\"WebPage\" style={style}>\r\n        <WebComponent id={id} />\r\n      </section>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    let content = <Loading text=\"Loading Reactron...\" center={true} />;\r\n\r\n    if (this.state.pages) {\r\n      content = (\r\n        <Router>\r\n          <Switch>\r\n            <Route path=\"/admin\" component={Admin} />\r\n            {this.state.pages.map(item =>\r\n              (<Route key={item.path} path={item.path} exact={true} component={this.renderPage(item.webComponentId, item.style)} />)\r\n            )}\r\n            <Route component={PageNotFound} />\r\n          </Switch>\r\n        </Router>\r\n      );\r\n    }\r\n\r\n    return <section className=\"App\">{content}</section>;\r\n  }\r\n}\r\n","// main entry file for react\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport App from './browser/components/App/App';\r\nimport ErrorBoundary from './browser/components/ErrorBoundary/ErrorBoundary';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <ErrorBoundary><App /></ErrorBoundary>,\r\n  document.getElementById('root') as HTMLElement\r\n);","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";"],"sourceRoot":""}