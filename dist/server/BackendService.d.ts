import { IBackendServiceConfig } from '../interfaces/IBackendServiceConfig';
import { ISystemSettings } from '../interfaces/ISystemSettings';
import { ElectronApp } from './ElectronApp';
import { ExpressApp } from './ExpressApp';
import { ModuleLoader } from './ModuleLoader';
import { ModuleManager } from './ModuleManager';
import { ModuleRepository } from './ModuleRepository';
import { PubSub } from './PubSub';
import { ServiceManager } from './ServiceManager';
import { ServiceOptionsRepository } from './ServiceOptionsRepository';
import { ServiceRepository } from './ServiceRepository';
import { SystemSettingsManager } from './SystemSettingsManager';
import { WebComponentsManager } from './WebComponentsManager';
import { WebPageManager } from './WebPageManager';
export declare class BackendService {
    readonly config: IBackendServiceConfig;
    static instance: BackendService;
    readonly topics: PubSub;
    readonly moduleRepository: ModuleRepository;
    readonly serviceRepository: ServiceRepository;
    readonly serviceOptionsRepository: ServiceOptionsRepository;
    readonly electronApp: ElectronApp;
    readonly expressApp: ExpressApp;
    readonly moduleLoader: ModuleLoader;
    readonly serviceManager: ServiceManager;
    readonly moduleManager: ModuleManager;
    readonly webPageManager: WebPageManager;
    readonly webComponentsManager: WebComponentsManager;
    readonly settings: SystemSettingsManager<ISystemSettings>;
    constructor(config: IBackendServiceConfig);
    exit(): void;
    restart(): void;
    reset(): Promise<void>;
}
